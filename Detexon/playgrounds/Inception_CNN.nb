(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='WolframDesktop 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       161,          7]
NotebookDataLength[   1275501,      23314]
NotebookOptionsPosition[   1273203,      23263]
NotebookOutlinePosition[   1273557,      23279]
CellTagsIndexPosition[   1273514,      23276]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Net Functions", "Chapter",
 CellChangeTimes->{{3.739873105025073*^9, 
  3.739873106393261*^9}},ExpressionUUID->"b220ef68-2855-4e1e-916e-\
16f2a6f9138e"],

Cell[CellGroupData[{

Cell["Helpers", "Subsubsection",
 CellChangeTimes->{{3.739873108249098*^9, 
  3.739873109017137*^9}},ExpressionUUID->"df6adf0a-b476-4bfe-9974-\
38ff4c2ce536"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PadToPreserveLength", "[", "kernel_", "]"}], ":=", 
  RowBox[{"Floor", "[", 
   RowBox[{"kernel", "/", "2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7398716857274923`*^9, 3.739871689665142*^9}, {
  3.739873093964765*^9, 
  3.739873097658527*^9}},ExpressionUUID->"3de431fe-d481-4b7d-b610-\
b2d37bf3672a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Residual Block", "Section",
 CellChangeTimes->{{3.739873115121279*^9, 
  3.73987311755261*^9}},ExpressionUUID->"9a908645-aa6a-4267-95af-\
dffcb2b7f318"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AdemxappResidualCNN1DBlock", "[", 
   RowBox[{"inputDimension_", ",", " ", "name_", ",", " ", 
    RowBox[{"residualBNQ_:", "True"}], ",", 
    RowBox[{"kernel_:", "3"}], ",", 
    RowBox[{"padding_:", "1"}]}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"scale", "=", 
      RowBox[{"If", "[", 
       RowBox[{"residualBNQ", ",", "2", ",", "1"}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], ",", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"residualBranch", "=", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
           RowBox[{"name", "<>", "\"\<_plus_shared\>\""}]}], 
          "\[IndentingNewLine]", "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"residualBNBranch", "=", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"name", "<>", "\"\<_ramp_shared\>\""}], "\[Rule]", " ", 
           RowBox[{
            RowBox[{"name", "<>", "\"\<_cnn1d_branch_1\>\""}], "\[Rule]", 
            RowBox[{"name", "<>", "\"\<_plus_shared\>\""}]}]}], 
          "\[IndentingNewLine]", "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"mainBranch", " ", "=", " ", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"name", "<>", "\"\<_bnl_shared\>\""}], "\[Rule]", 
            RowBox[{"name", "<>", "\"\<_ramp_shared\>\""}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{"residualBNQ", ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"name", "<>", "\"\<_ramp_shared\>\""}], "\[Rule]", 
              RowBox[{
               RowBox[{"name", "<>", "\"\<_cnn1d_branch_main\>\""}], 
               "\[Rule]", " ", 
               RowBox[{"name", "<>", "\"\<_ramp_branch_main\>\""}]}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"name", "<>", "\"\<_ramp_shared\>\""}], "\[Rule]", 
              RowBox[{
               RowBox[{"name", "<>", "\"\<_cnn1d_branch_main\>\""}], 
               "\[Rule]", 
               RowBox[{
                RowBox[{"name", "<>", "\"\<_bnl_main\>\""}], "\[Rule]", " ", 
                RowBox[{"name", "<>", "\"\<_ramp_branch_main\>\""}]}]}]}]}], 
            "\[IndentingNewLine]", "]"}], ",", " ", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"name", "<>", "\"\<_ramp_branch_main\>\""}], "->", 
            RowBox[{
             RowBox[{"name", "<>", "\"\<_cnn1d_branch_main_a\>\""}], 
             "\[Rule]", 
             RowBox[{"name", "<>", "\"\<_plus_shared\>\""}]}]}]}], 
          "\[IndentingNewLine]", "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"residualBranchLayers", "=", 
         RowBox[{"<|", "|>"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"residualBNBranchLayers", "=", 
         RowBox[{"<|", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"name", "<>", "\"\<_cnn1d_branch_1\>\""}], "\[Rule]", 
           RowBox[{"ConvolutionLayer", "[", 
            RowBox[{
             RowBox[{"scale", "*", 
              RowBox[{"First", "@", "inputDimension"}]}], ",", 
             RowBox[{"{", "1", "}"}]}], "]"}]}], "\[IndentingNewLine]", 
          "|>"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"mainBranchLayers", " ", "=", 
         RowBox[{"<|", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"name", "<>", "\"\<_bnl_shared\>\""}], "\[Rule]", 
            RowBox[{"BatchNormalizationLayer", "[", 
             RowBox[{"\"\<Input\>\"", "\[Rule]", " ", "inputDimension"}], 
             "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"name", "<>", "\"\<_ramp_shared\>\""}], "\[Rule]", " ", 
            "Ramp"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"name", "<>", "\"\<_cnn1d_branch_main\>\""}], "\[Rule]", 
            RowBox[{"ConvolutionLayer", "[", 
             RowBox[{
              RowBox[{"scale", "*", 
               RowBox[{"First", "@", "inputDimension"}]}], ",", 
              RowBox[{"{", "kernel", "}"}], ",", 
              RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", 
               RowBox[{"{", "padding", "}"}]}]}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{"residualBNQ", ",", "Nothing", ",", 
             RowBox[{
              RowBox[{"name", "<>", "\"\<_bnl_main\>\""}], "\[Rule]", 
              RowBox[{"BatchNormalizationLayer", "[", "]"}]}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"name", "<>", "\"\<_ramp_branch_main\>\""}], "\[Rule]", 
            RowBox[{"ElementwiseLayer", "[", "Ramp", "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"name", "<>", "\"\<_cnn1d_branch_main_a\>\""}], "\[Rule]", 
            RowBox[{"ConvolutionLayer", "[", 
             RowBox[{
              RowBox[{"scale", "*", 
               RowBox[{"First", "@", "inputDimension"}]}], ",", 
              RowBox[{"{", "kernel", "}"}], ",", 
              RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", 
               RowBox[{"{", "padding", "}"}]}]}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"name", "<>", "\"\<_plus_shared\>\""}], "\[Rule]", 
            RowBox[{"ThreadingLayer", "[", "Plus", "]"}]}]}], 
          "\[IndentingNewLine]", "|>"}]}], ",", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "layers", ",", " ", "connections"}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{"residualBNQ", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"layers", "=", 
           RowBox[{"Join", "[", 
            RowBox[{"mainBranchLayers", ",", "residualBNBranchLayers"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"connections", "=", 
           RowBox[{"Join", "[", 
            RowBox[{"mainBranch", ",", "residualBNBranch"}], "]"}]}]}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"layers", "=", 
           RowBox[{"Join", "[", 
            RowBox[{"mainBranchLayers", ",", "residualBranchLayers"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"connections", "=", 
           RowBox[{"Join", "[", 
            RowBox[{"mainBranch", ",", "residualBranch"}], "]"}]}]}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"NetGraph", "[", 
        RowBox[{"layers", ",", "connections"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7398716857274923`*^9, 3.739871689665142*^9}, {
  3.739873093964765*^9, 
  3.739873097658527*^9}},ExpressionUUID->"ca1dc16c-b68d-466e-b89b-\
c27b13998b05"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Residual Block Chain", "Section",
 CellChangeTimes->{{3.739873121913599*^9, 
  3.739873126090098*^9}},ExpressionUUID->"4d0a9321-b418-4c19-aa65-\
042d6da064a8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AdemxappResidualCNN1DBlockChain", "[", 
   RowBox[{"inputDimension_", ",", " ", "name_", ",", 
    RowBox[{"length_:", "1"}], ",", 
    RowBox[{"kernel_:", "3"}], ",", 
    RowBox[{"padding_:", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"NetChain", "[", "\[IndentingNewLine]", 
   RowBox[{"Join", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"AdemxappResidualCNN1DBlock", "[", 
       RowBox[{
       "inputDimension", ",", " ", "name", ",", " ", "True", ",", " ", 
        "kernel", ",", " ", "padding"}], "]"}], "\[IndentingNewLine]", "}"}], 
     ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"With", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"newInputDimension", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"2", 
            RowBox[{"First", "@", "inputDimension"}]}], ",", " ", 
           RowBox[{"Last", "@", "inputDimension"}]}], "}"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"AdemxappResidualCNN1DBlock", "[", 
          RowBox[{
          "newInputDimension", ",", " ", "name", ",", " ", "False", ",", " ", 
           "kernel", ",", " ", "padding"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"length", "-", "1"}], "}"}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7398716668371973`*^9, 3.739871858106038*^9}, {
  3.739871996857752*^9, 
  3.739872031006975*^9}},ExpressionUUID->"61f3dd8a-06e6-4f9f-a558-\
21d836e94f8e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Inception Block Chain", "Section",
 CellChangeTimes->{{3.739873130345635*^9, 
  3.739873132897979*^9}},ExpressionUUID->"10734e6d-c728-4362-a7f7-\
a325224eae22"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"AdemxappResidualCNN1DInceptionBlockChain", "[", 
    RowBox[{"inputDimension_", ",", " ", "name_", ",", 
     RowBox[{"length_:", "1"}], ",", " ", 
     RowBox[{"kernels_:", 
      RowBox[{"{", "}"}]}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Join", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Residual", " ", "chain", " ", "for", " ", "each", " ", "kernel"}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"name", "<>", "\"\<_\>\"", "<>", 
           RowBox[{"ToString", "[", "k", "]"}]}], "\[Rule]", " ", 
          RowBox[{"AdemxappResidualCNN1DBlockChain", "[", 
           RowBox[{
           "inputDimension", ",", " ", "name", ",", "length", ",", "k", ",", 
            RowBox[{"PadToPreserveLength", "[", "k", "]"}]}], "]"}]}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "kernels"}], " ", "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Pooling", " ", "layer", " ", "for", " ", "each", " ", "kernel"}], 
        "  ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"name", "<>", "\"\<_pool_\>\"", "<>", 
           RowBox[{"ToString", "[", "k", "]"}]}], "\[Rule]", 
          RowBox[{"PoolingLayer", "[", 
           RowBox[{
            RowBox[{"{", "k", "}"}], ",", 
            RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", 
             RowBox[{"PadToPreserveLength", "[", "k", "]"}]}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "kernels"}], " ", "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Batch", " ", "norm", " ", "for", " ", "input", " ", "and", " ", 
         "thread", " ", "to", " ", "combine", " ", "output"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"name", "<>", "\"\<_batch_norm\>\""}], "\[Rule]", 
          RowBox[{"BatchNormalizationLayer", "[", "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"name", "<>", "\"\<_thread\>\""}], "\[Rule]", " ", 
          RowBox[{"ThreadingLayer", "[", "Plus", "]"}]}]}], 
        "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"name", "<>", "\"\<_batch_norm\>\""}], "\[Rule]", 
        RowBox[{
         RowBox[{"name", "<>", "\"\<_\>\"", "<>", 
          RowBox[{"ToString", "[", "k", "]"}]}], "\[Rule]", 
         RowBox[{
          RowBox[{"name", "<>", "\"\<_pool_\>\"", "<>", 
           RowBox[{"ToString", "[", "k", "]"}]}], "\[Rule]", 
          RowBox[{"name", "<>", "\"\<_thread\>\""}]}]}]}], "  ", ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "kernels"}], "}"}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.739872107458763*^9, 3.7398721629006042`*^9}, {
  3.7398724573499727`*^9, 3.739872542274181*^9}, {3.7398726412299423`*^9, 
  3.739872800823958*^9}, {3.739872870341238*^9, 3.7398729218808193`*^9}, {
  3.739872962706311*^9, 3.739872997241148*^9}, {3.739873503722348*^9, 
  3.739873537347875*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"bdf80e35-b006-4fbe-85a7-e7f11e12121d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AdemxappResidualCNN1DInceptionBlockChain", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"64", ",", " ", "Automatic"}], "}"}], ",", "\"\<test\>\"", ",", 
   "3", ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "25", ",", "75"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7398728087542057`*^9, 3.739872822489182*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"07b9f347-2f4e-437d-b331-da2e5fbe4d12"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.0149], {
                   GrayLevel[0.6], 
                   Thickness[0.03], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                    18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                   
                   JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                    49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                   
                   JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                    18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                   FaceForm[
                    GrayLevel[0.9]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                   FaceForm[
                    GrayLevel[0.6]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}, {
                   FaceForm[
                    GrayLevel[0.9]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                   FaceForm[
                    GrayLevel[0.6]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}, {
                   FaceForm[
                    GrayLevel[0.9]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                   FaceForm[
                    GrayLevel[0.6]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}, {
                   FaceForm[
                    GrayLevel[0.9]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    45.5, 40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 
                    33.5}}}]}, {
                   FaceForm[
                    GrayLevel[0.6]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {
                    45., 33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 
                    40.}, {52., 40.}}}]}}, ImageMargins -> 0, 
                 ImageSize -> {36, Automatic}, PlotRangePadding -> 0, 
                 BaseStyle -> GrayLevel[0.6]], 
                StyleBox["uninitialized", 
                 RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto", 
                 Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"\[DottedSquare]\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"\[DottedSquare]\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["8", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.0149], {
                   GrayLevel[0.6], 
                   Thickness[0.03], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                    18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                   
                   JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                    49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                   
                   JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                    18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                   FaceForm[
                    GrayLevel[0.9]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                   FaceForm[
                    GrayLevel[0.6]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}, {
                   FaceForm[
                    GrayLevel[0.9]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                   FaceForm[
                    GrayLevel[0.6]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}, {
                   FaceForm[
                    GrayLevel[0.9]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                   FaceForm[
                    GrayLevel[0.6]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}, {
                   FaceForm[
                    GrayLevel[0.9]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    45.5, 40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 
                    33.5}}}]}, {
                   FaceForm[
                    GrayLevel[0.6]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {
                    45., 33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 
                    40.}, {52., 40.}}}]}}, ImageMargins -> 0, 
                 ImageSize -> {36, Automatic}, PlotRangePadding -> 0, 
                 BaseStyle -> GrayLevel[0.6]], 
                StyleBox["uninitialized", 
                 RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto", 
                 Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], {
                    
                    LineBox[{{-5., 3.061616997868383*^-16}, {-4., 
                    2.4492935982947064`*^-16}}], 
                    
                    LineBox[{{-4., 2.4492935982947064`*^-16}, {-3., 
                    1.8369701987210297`*^-16}}], 
                    LineBox[{{-4., 
                    2.4492935982947064`*^-16}, {-3., -0.9999999999999998}}], 
                    
                    LineBox[{{-4., 2.4492935982947064`*^-16}, {-3., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-3., -0.9999999999999998}, {-2., \
-0.9999999999999999}}], 
                    
                    LineBox[{{-2., -0.9999999999999999}, {-1., 
                    6.123233995736766*^-17}}], 
                    
                    LineBox[{{-3., 1.8369701987210297`*^-16}, {-2., 
                    1.2246467991473532`*^-16}}], 
                    
                    LineBox[{{-2., 1.2246467991473532`*^-16}, {-1., 
                    6.123233995736766*^-17}}], 
                    
                    LineBox[{{-3., 1.0000000000000002`}, {-2., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-2., 1.0000000000000002`}, {-1., 
                    6.123233995736766*^-17}}], 
                    LineBox[{{-1., 6.123233995736766*^-17}, {0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-4.4, 
                    2.694222958124177*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
                    2.0818995585505003`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-3.4, -0.5999999999999998}, {-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
                    0.6000000000000002}, {-0.25, 0}, 
                    Offset[8], {1., 1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, -0.9999999999999998}, \
{-0.25, 0}, 
                    Offset[8], {1., -1.1102230246251565`*^-16}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-1.4, -0.3999999999999999}, {-0.25, 0}, 
                    Offset[8], {1., 1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, 
                    1.4695761589768238`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736765*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    8.572527594031473*^-17}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736766*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, 
                    1.0000000000000002`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    0.4000000000000002}, {-0.25, 0}, 
                    Offset[8], {1., -1.0000000000000002`}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-0.4, 
                    2.4492935982947065`*^-17}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736766*^-17}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-5., 3.061616997868383*^-16}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-4., 2.4492935982947064`*^-16}], 
                    Offset[{10, 10}, {-4., 2.4492935982947064`*^-16}]]}, 
                    InsetBox[
                    FormBox["\"BN\"", TraditionalForm], 
                    Offset[{0, -1}, {-4., 2.4492935982947064`*^-16}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"test_batch_norm\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"BatchNormalizationLayer", "[", 
                    RowBox[{
                    RowBox[{"\"Channels\"", "\[Rule]", "64"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "Automatic"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["test_batch_norm", Bold], 
                    Style[
                    HoldForm[
                    BatchNormalizationLayer[
                    "Channels" -> 64, "Input" -> {64, Automatic}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-3., 1.8369701987210297`*^-16}], 
                    Offset[{12, 12}, {-3., 1.8369701987210297`*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0., BaseStyle -> 
                    GrayLevel[0.4]], {-3., 1.8369701987210297`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"test_25\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "3", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["test_25", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[3]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-3., -0.9999999999999998}], 
                    Offset[{12, 12}, {-3., -0.9999999999999998}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0., BaseStyle -> 
                    GrayLevel[0.4]], {-3., -0.9999999999999998}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"test_3\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "3", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["test_3", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[3]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-3., 1.0000000000000002`}], 
                    Offset[{12, 12}, {-3., 1.0000000000000002`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0., BaseStyle -> 
                    GrayLevel[0.4]], {-3., 1.0000000000000002`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"test_75\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "3", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["test_75", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[3]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-2., -0.9999999999999999}], 
                    Offset[{10, 10}, {-2., -0.9999999999999999}]]}, 
                    InsetBox[
                    FormBox["\"P\"", TraditionalForm], 
                    Offset[{0, -1}, {-2., -0.9999999999999999}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"test_pool_3\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"PoolingLayer", "[", 
                    RowBox[{
                    RowBox[{"{", "3", "}"}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", "1", "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"128", ",", "Automatic"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["test_pool_3", Bold], 
                    Style[
                    HoldForm[
                    
                    PoolingLayer[{3}, "PaddingSize" -> {1}, 
                    "Input" -> {128, Automatic}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-1., 6.123233995736766*^-17}], 
                    Offset[{10, 10}, {-1., 6.123233995736766*^-17}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"+\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-1., 6.123233995736766*^-17}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"test_thread\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Plus", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"128", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"128", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"128", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["test_thread", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[
                    Plus, "Inputs" -> {{128, Automatic}, {128, Automatic}, {
                    128, Automatic}}]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-2., 1.2246467991473532`*^-16}], 
                    Offset[{10, 10}, {-2., 1.2246467991473532`*^-16}]]}, 
                    InsetBox[
                    FormBox["\"P\"", TraditionalForm], 
                    Offset[{0, -1}, {-2., 1.2246467991473532`*^-16}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"test_pool_25\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"PoolingLayer", "[", 
                    RowBox[{
                    RowBox[{"{", "25", "}"}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", "12", "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"128", ",", "Automatic"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["test_pool_25", Bold], 
                    Style[
                    HoldForm[
                    
                    PoolingLayer[{25}, "PaddingSize" -> {12}, 
                    "Input" -> {128, Automatic}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-2., 1.0000000000000002`}], 
                    Offset[{10, 10}, {-2., 1.0000000000000002`}]]}, 
                    InsetBox[
                    FormBox["\"P\"", TraditionalForm], 
                    Offset[{0, -1}, {-2., 1.0000000000000002`}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"test_pool_75\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"PoolingLayer", "[", 
                    RowBox[{
                    RowBox[{"{", "75", "}"}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", "37", "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"128", ",", "Automatic"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["test_pool_75", Bold], 
                    Style[
                    HoldForm[
                    PoolingLayer[{75}, "PaddingSize" -> {37}, 
                    "Input" -> {128, Automatic}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 10), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    StyleBox[{{
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    Offset[{0, -7}, {-5., 3.061616997868383*^-16}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"test_batc..\"", "\"test_batch_norm\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "test_batch_norm", "Tooltip"]& ], 
                    TraditionalForm], 
                    Offset[{0, -13}, {-4., 2.4492935982947064`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"test_25\"", TraditionalForm], 
                    Offset[{0, -15}, {-3., 1.8369701987210297`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"test_3\"", TraditionalForm], 
                    Offset[{0, -15}, {-3., -0.9999999999999998}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"test_75\"", TraditionalForm], 
                    Offset[{0, -15}, {-3., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"test_pool..\"", "\"test_pool_3\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "test_pool_3", "Tooltip"]& ], 
                    TraditionalForm], 
                    Offset[{0, -13}, {-2., -0.9999999999999999}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"test_thre..\"", "\"test_thread\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "test_thread", "Tooltip"]& ], 
                    TraditionalForm], 
                    Offset[{0, -13}, {-1., 6.123233995736766*^-17}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"test_pool..\"", "\"test_pool_25\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "test_pool_25", "Tooltip"]& ], 
                    TraditionalForm], 
                    Offset[{0, -13}, {-2., 1.2246467991473532`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"test_pool..\"", "\"test_pool_75\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "test_pool_75", "Tooltip"]& ], 
                    TraditionalForm], 
                    Offset[{0, -13}, {-2., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    Offset[{0, -7}, {0., 0.}], {0, 1.}, Automatic, {1, 0}]}}, 
                    FontColor -> GrayLevel[0.5], StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", 
                    "\"\[DottedSquare]\""}, "RowWithSeparators"], 
                    TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-4.4, 
                    2.694222958124177*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", 
                    "\"\[DottedSquare]\""}, "RowWithSeparators"], 
                    TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-3.4, 
                    2.0818995585505003`*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", 
                    "\"\[DottedSquare]\""}, "RowWithSeparators"], 
                    TraditionalForm], 
                    
                    Offset[{3.889087296526011, 
                    3.889087296526011}, {-3.4, -0.5999999999999998}], {
                    0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", 
                    "\"\[DottedSquare]\""}, "RowWithSeparators"], 
                    TraditionalForm], 
                    
                    Offset[{-3.889087296526011, 3.889087296526011}, {-3.4, 
                    0.6000000000000002}], {0., -0.17}, Automatic, {
                    0.7071067811865475, 0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", 
                    "\"\[DottedSquare]\""}, "RowWithSeparators"], 
                    TraditionalForm], 
                    Offset[{6.106226635438361*^-16, 
                    5.5}, {-2.4000000000000004`, -0.9999999999999998}], {
                    0., -0.17}, Automatic, {1., -1.1102230246251565`*^-16}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", 
                    "\"\[DottedSquare]\""}, "RowWithSeparators"], 
                    TraditionalForm], 
                    
                    Offset[{-3.889087296526011, 
                    3.889087296526011}, {-1.4, -0.3999999999999999}], {
                    0., -0.17}, Automatic, {0.7071067811865475, 
                    0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", 
                    "\"\[DottedSquare]\""}, "RowWithSeparators"], 
                    TraditionalForm], 
                    
                    Offset[{3.3677786976552205`*^-16, 
                    5.5}, {-2.4000000000000004`, 1.4695761589768238`*^-16}], {
                    0., -0.17}, Automatic, {1., -6.123233995736765*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", 
                    "\"\[DottedSquare]\""}, "RowWithSeparators"], 
                    TraditionalForm], 
                    
                    Offset[{3.3677786976552215`*^-16, 5.5}, {-1.4, 
                    8.572527594031473*^-17}], {0., -0.17}, Automatic, {
                    1., -6.123233995736766*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", 
                    "\"\[DottedSquare]\""}, "RowWithSeparators"], 
                    TraditionalForm], 
                    
                    Offset[{0., 5.5}, {-2.4000000000000004`, 
                    1.0000000000000002`}], {0., -0.17}, Automatic, {1., 0.}], 
                    
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", 
                    "\"\[DottedSquare]\""}, "RowWithSeparators"], 
                    TraditionalForm], 
                    
                    Offset[{3.8890872965260117`, 3.889087296526011}, {-1.4, 
                    0.4000000000000002}], {0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865476}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", 
                    "\"\[DottedSquare]\""}, "RowWithSeparators"], 
                    TraditionalForm], 
                    
                    Offset[{3.3677786976552215`*^-16, 5.5}, {-0.4, 
                    2.4492935982947065`*^-17}], {0., -0.17}, Automatic, {
                    1., -6.123233995736766*^-17}]}, FontColor -> 
                    GrayLevel[0.7], FontSize -> 8, FontWeight -> "Thin", 
                    StripOnInput -> False]}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-5., 3.061616997868383*^-16}, {-4., 
                    2.4492935982947064`*^-16}, {-3., 
                    1.8369701987210297`*^-16}, {-3., -0.9999999999999998}, \
{-3., 1.0000000000000002`}, {-2., -0.9999999999999999}, {-1., 
                    6.123233995736766*^-17}, {-2., 
                    1.2246467991473532`*^-16}, {-2., 1.0000000000000002`}, {
                    0., 0.}}, NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 20, 24, 24, 24, 20, 20, 20, 20, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, ImageSize -> {331., 157.}, AspectRatio -> 
                    Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{28., 28.}, {28.999999999999996`, 18.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "test_batch_norm"], 
                    NeuralNetworks`NetPath["Nodes", "test_25"], 
                    NeuralNetworks`NetPath["Nodes", "test_3"], 
                    NeuralNetworks`NetPath["Nodes", "test_75"], 
                    NeuralNetworks`NetPath["Nodes", "test_pool_3"], 
                    NeuralNetworks`NetPath["Nodes", "test_thread"], 
                    NeuralNetworks`NetPath["Nodes", "test_pool_25"], 
                    NeuralNetworks`NetPath["Nodes", "test_pool_75"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], 
                    Association[
                    "test_batch_norm" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 64, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{
                    64, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    64, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "test_3" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["test_bnl_shared" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingVariance" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 64, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_ramp_shared" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_cnn1d_branch_main" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 64, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_ramp_branch_main" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_cnn1d_branch_main_a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_cnn1d_branch_1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 64, 1}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1}, 
                    "Stride" -> {1}, "PaddingSize" -> {0}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_plus_shared" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "test_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_cnn1d_branch_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_cnn1d_branch_main_a", "Outputs", "Output"],
                     NeuralNetworks`NetPath[
                    "Nodes", "test_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_cnn1d_branch_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_plus_shared", "Outputs", "Output"]}], "2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["test_bnl_shared" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingVariance" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 128, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_ramp_shared" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_cnn1d_branch_main" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_bnl_main" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingVariance" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 128, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_ramp_branch_main" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_cnn1d_branch_main_a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_plus_shared" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "test_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_cnn1d_branch_main_a", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_plus_shared", "Outputs", "Output"]}], "3" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["test_bnl_shared" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingVariance" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 128, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_ramp_shared" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_cnn1d_branch_main" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_bnl_main" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingVariance" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 128, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_ramp_branch_main" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_cnn1d_branch_main_a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_plus_shared" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "test_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_cnn1d_branch_main_a", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_plus_shared", "Outputs", "Output"]}]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{
                    64, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "test_pool_3" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3}, "Stride" -> {1}, 
                    "PaddingSize" -> {1}, "Function" -> Max, "Dimensionality" -> 
                    1, "Interleaving" -> False, "$Channels" -> 128, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "test_25" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["test_bnl_shared" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingVariance" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 64, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_ramp_shared" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_cnn1d_branch_main" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 64, 25}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {25}, 
                    "Stride" -> {1}, "PaddingSize" -> {12}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_ramp_branch_main" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_cnn1d_branch_main_a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 25}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {25}, 
                    "Stride" -> {1}, "PaddingSize" -> {12}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_cnn1d_branch_1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 64, 1}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1}, 
                    "Stride" -> {1}, "PaddingSize" -> {0}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_plus_shared" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "test_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_cnn1d_branch_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_cnn1d_branch_main_a", "Outputs", "Output"],
                     NeuralNetworks`NetPath[
                    "Nodes", "test_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_cnn1d_branch_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_plus_shared", "Outputs", "Output"]}], "2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["test_bnl_shared" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingVariance" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 128, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_ramp_shared" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_cnn1d_branch_main" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 25}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {25}, 
                    "Stride" -> {1}, "PaddingSize" -> {12}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_bnl_main" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingVariance" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 128, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_ramp_branch_main" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_cnn1d_branch_main_a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 25}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {25}, 
                    "Stride" -> {1}, "PaddingSize" -> {12}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_plus_shared" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "test_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_cnn1d_branch_main_a", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_plus_shared", "Outputs", "Output"]}], "3" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["test_bnl_shared" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingVariance" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 128, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_ramp_shared" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_cnn1d_branch_main" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 25}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {25}, 
                    "Stride" -> {1}, "PaddingSize" -> {12}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_bnl_main" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingVariance" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 128, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_ramp_branch_main" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_cnn1d_branch_main_a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 25}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {25}, 
                    "Stride" -> {1}, "PaddingSize" -> {12}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_plus_shared" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "test_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_cnn1d_branch_main_a", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_plus_shared", "Outputs", "Output"]}]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{
                    64, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "test_pool_25" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {25}, "Stride" -> {1}, 
                    "PaddingSize" -> {12}, "Function" -> Max, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$Channels" -> 128, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "test_75" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["test_bnl_shared" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingVariance" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 64, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_ramp_shared" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_cnn1d_branch_main" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 64, 75}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {75}, 
                    "Stride" -> {1}, "PaddingSize" -> {37}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_ramp_branch_main" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_cnn1d_branch_main_a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 75}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {75}, 
                    "Stride" -> {1}, "PaddingSize" -> {37}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_cnn1d_branch_1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 64, 1}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1}, 
                    "Stride" -> {1}, "PaddingSize" -> {0}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_plus_shared" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "test_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_cnn1d_branch_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_cnn1d_branch_main_a", "Outputs", "Output"],
                     NeuralNetworks`NetPath[
                    "Nodes", "test_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_cnn1d_branch_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_plus_shared", "Outputs", "Output"]}], "2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["test_bnl_shared" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingVariance" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 128, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_ramp_shared" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_cnn1d_branch_main" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 75}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {75}, 
                    "Stride" -> {1}, "PaddingSize" -> {37}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_bnl_main" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingVariance" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 128, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_ramp_branch_main" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_cnn1d_branch_main_a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 75}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {75}, 
                    "Stride" -> {1}, "PaddingSize" -> {37}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_plus_shared" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "test_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_cnn1d_branch_main_a", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_plus_shared", "Outputs", "Output"]}], "3" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["test_bnl_shared" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingVariance" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 128, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_ramp_shared" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_cnn1d_branch_main" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 75}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {75}, 
                    "Stride" -> {1}, "PaddingSize" -> {37}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_bnl_main" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingVariance" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 128, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_ramp_branch_main" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_cnn1d_branch_main_a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 75}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {75}, 
                    "Stride" -> {1}, "PaddingSize" -> {37}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "test_plus_shared" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "test_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_cnn1d_branch_main_a", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "test_plus_shared", "Outputs", "Output"]}]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{
                    64, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "test_pool_75" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {75}, "Stride" -> {1}, 
                    "PaddingSize" -> {37}, "Function" -> Max, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$Channels" -> 128, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "test_thread" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT},
                     NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT], "3" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]]]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"\[DottedSquare]\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"\[DottedSquare]\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7398728233422937`*^9, 3.739872893723682*^9, {3.739873529475279*^9, 
   3.7398735396896067`*^9}},
 CellLabel->"Out[33]=",ExpressionUUID->"b3d3bc66-3c98-42e5-be8b-8461678fdda9"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.739872214021929*^9, 3.73987225109417*^9}, 
   3.739873091579756*^9},ExpressionUUID->"4adf7d40-bdb5-4795-9e52-\
d7fd6f3fa44e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Net Craft by Func", "Chapter",
 CellChangeTimes->{{3.739873176563854*^9, 
  3.7398731791492968`*^9}},ExpressionUUID->"32756ebb-efd1-4f16-a578-\
606339eccf54"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"<|", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<input_cnn\>\"", "\[Rule]", 
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"64", ",", 
        RowBox[{"{", "3", "}"}], ",", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", 
         RowBox[{"{", "1", "}"}]}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<input_pool\>\"", "\[Rule]", 
      RowBox[{"PoolingLayer", "[", 
       RowBox[{
        RowBox[{"{", "3", "}"}], ",", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", 
         RowBox[{"{", "1", "}"}]}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<incept_1\>\"", "->", 
      RowBox[{"AdemxappResidualCNN1DInceptionBlockChain", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"64", ",", " ", "Automatic"}], "}"}], ",", 
        "\"\<incept_a\>\"", ",", "3", ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "25", ",", "75"}], "}"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<ramp_1\>\"", "\[Rule]", "Ramp"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<incept_2\>\"", "->", 
      RowBox[{"AdemxappResidualCNN1DInceptionBlockChain", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"128", ",", " ", "Automatic"}], "}"}], ",", 
        "\"\<incept_b\>\"", ",", "3", ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "25", ",", "75"}], "}"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<ramp_2\>\"", "\[Rule]", "Ramp"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<incept_3\>\"", "->", 
      RowBox[{"AdemxappResidualCNN1DInceptionBlockChain", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"256", ",", " ", "Automatic"}], "}"}], ",", 
        "\"\<incept_c\>\"", ",", "3", ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "25", ",", "75"}], "}"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<ramp_3\>\"", "\[Rule]", "Ramp"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<incept_4\>\"", "->", 
      RowBox[{"AdemxappResidualCNN1DInceptionBlockChain", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"512", ",", " ", "Automatic"}], "}"}], ",", 
        "\"\<incept_d\>\"", ",", "3", ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "25", ",", "75"}], "}"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<ramp_4\>\"", "\[Rule]", " ", "Ramp"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"\"\<dsc2\>\"", "\[Rule]", 
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"256", ",", 
        RowBox[{"{", "3", "}"}], ",", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", 
         RowBox[{"{", "1", "}"}]}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<drmp2\>\"", "\[Rule]", "Ramp"}], ",", "\[IndentingNewLine]",
      "\[IndentingNewLine]", 
     RowBox[{"\"\<dsc4\>\"", "\[Rule]", 
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"64", ",", 
        RowBox[{"{", "3", "}"}], ",", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", 
         RowBox[{"{", "1", "}"}]}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<drmp4\>\"", "\[Rule]", "Ramp"}], ",", "\[IndentingNewLine]",
      "\[IndentingNewLine]", 
     RowBox[{"\"\<pcnn\>\"", "\[Rule]", 
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"3", ",", 
        RowBox[{"{", "3", "}"}], ",", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", 
         RowBox[{"{", "1", "}"}]}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<trsp\>\"", "\[Rule]", 
      RowBox[{"TransposeLayer", "[", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<sfmx\>\"", "\[Rule]", 
      RowBox[{"SoftmaxLayer", "[", "]"}]}]}], "\[IndentingNewLine]", "|>"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<input_cnn\>\"", "\[Rule]", " ", 
      RowBox[{"\"\<input_pool\>\"", "\[Rule]", 
       RowBox[{"\"\<incept_1\>\"", "->", 
        RowBox[{"\"\<ramp_1\>\"", "->", 
         RowBox[{"\"\<incept_2\>\"", "\[Rule]", 
          RowBox[{"\"\<ramp_2\>\"", "\[Rule]", 
           RowBox[{"\"\<incept_3\>\"", "\[Rule]", 
            RowBox[{"\"\<ramp_3\>\"", "\[Rule]", 
             RowBox[{
             "\"\<incept_4\>\"", "\[Rule]", 
              "\"\<ramp_4\>\""}]}]}]}]}]}]}]}]}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"\"\<ramp_4\>\"", "\[Rule]", 
      RowBox[{"\"\<dsc2\>\"", "\[Rule]", 
       RowBox[{"\"\<drmp2\>\"", "\[Rule]", 
        RowBox[{"\"\<dsc4\>\"", "\[Rule]", 
         RowBox[{"\"\<drmp4\>\"", "\[Rule]", 
          RowBox[{"\"\<pcnn\>\"", "\[Rule]", 
           RowBox[{"\"\<trsp\>\"", "\[Rule]", "\"\<sfmx\>\""}]}]}]}]}]}]}]}], 
    "\[IndentingNewLine]", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7398731811632013`*^9, 3.739873247297876*^9}, {
  3.739873301681452*^9, 3.7398734804715223`*^9}, {3.73987359666926*^9, 
  3.739873673815896*^9}, {3.739873743580001*^9, 3.7398737596493683`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"bd54eb3a-029f-4122-b8a5-b0df0f348f83"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = True}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.0149], {
                   GrayLevel[0.6], 
                   Thickness[0.03], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                    18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                   
                   JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                    49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                   
                   JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                    18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                   FaceForm[
                    GrayLevel[0.9]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                   FaceForm[
                    GrayLevel[0.6]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}, {
                   FaceForm[
                    GrayLevel[0.9]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                   FaceForm[
                    GrayLevel[0.6]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}, {
                   FaceForm[
                    GrayLevel[0.9]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                   FaceForm[
                    GrayLevel[0.6]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}, {
                   FaceForm[
                    GrayLevel[0.9]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    45.5, 40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 
                    33.5}}}]}, {
                   FaceForm[
                    GrayLevel[0.6]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {
                    45., 33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 
                    40.}, {52., 40.}}}]}}, BaseStyle -> GrayLevel[0.6], 
                 ImageMargins -> 0, ImageSize -> {36, Automatic}, 
                 PlotRangePadding -> 0], 
                StyleBox[
                "uninitialized", LineColor -> RGBColor[0.66, 0, 0], 
                 FrontFaceColor -> RGBColor[0.66, 0, 0], BackFaceColor -> 
                 RGBColor[0.66, 0, 0], GraphicsColor -> RGBColor[0.66, 0, 0], 
                 FontFamily -> "Roboto", FontSize -> 8, FontColor -> 
                 RGBColor[0.66, 0, 0], Background -> GrayLevel[1, 0.65]]}, 
               Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"matrix\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"\[DottedSquare]\"", 
                    "\"3\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["17", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.0149], {
                   GrayLevel[0.6], 
                   Thickness[0.03], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                    18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                   
                   JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                    49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                   
                   JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                    18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                   FaceForm[
                    GrayLevel[0.9]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                   FaceForm[
                    GrayLevel[0.6]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}, {
                   FaceForm[
                    GrayLevel[0.9]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                   FaceForm[
                    GrayLevel[0.6]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}, {
                   FaceForm[
                    GrayLevel[0.9]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                   FaceForm[
                    GrayLevel[0.6]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}, {
                   FaceForm[
                    GrayLevel[0.9]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    45.5, 40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 
                    33.5}}}]}, {
                   FaceForm[
                    GrayLevel[0.6]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {
                    45., 33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 
                    40.}, {52., 40.}}}]}}, BaseStyle -> GrayLevel[0.6], 
                 ImageMargins -> 0, ImageSize -> {36, Automatic}, 
                 PlotRangePadding -> 0], 
                StyleBox[
                "uninitialized", LineColor -> RGBColor[0.66, 0, 0], 
                 FrontFaceColor -> RGBColor[0.66, 0, 0], BackFaceColor -> 
                 RGBColor[0.66, 0, 0], GraphicsColor -> RGBColor[0.66, 0, 0], 
                 FontFamily -> "Roboto", FontSize -> 8, FontColor -> 
                 RGBColor[0.66, 0, 0], Background -> GrayLevel[1, 0.65]]}, 
               Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = 10}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], 
                    
                    LineBox[{{-18., 1.102182119232618*^-15}, {-17., 
                    1.0409497792752501`*^-15}}], 
                    LineBox[{{-17., 1.0409497792752501`*^-15}, {-16., 
                    9.797174393178826*^-16}}], 
                    
                    LineBox[{{-16., 9.797174393178826*^-16}, {-15., 
                    9.18485099360515*^-16}}], 
                    
                    LineBox[{{-15., 9.18485099360515*^-16}, {-14., 
                    8.572527594031472*^-16}}], 
                    
                    LineBox[{{-14., 8.572527594031472*^-16}, {-13., 
                    7.960204194457795*^-16}}], 
                    
                    LineBox[{{-13., 7.960204194457795*^-16}, {-12., 
                    7.347880794884119*^-16}}], 
                    
                    LineBox[{{-12., 7.347880794884119*^-16}, {-11., 
                    6.735557395310443*^-16}}], 
                    
                    LineBox[{{-11., 6.735557395310443*^-16}, {-10., 
                    6.123233995736766*^-16}}], 
                    
                    LineBox[{{-10., 6.123233995736766*^-16}, {-9., 
                    5.51091059616309*^-16}}], 
                    
                    LineBox[{{-9., 5.51091059616309*^-16}, {-8., 
                    4.898587196589413*^-16}}], 
                    
                    LineBox[{{-8., 4.898587196589413*^-16}, {-7., 
                    4.286263797015736*^-16}}], 
                    
                    LineBox[{{-7., 4.286263797015736*^-16}, {-6., 
                    3.6739403974420594`*^-16}}], 
                    
                    LineBox[{{-6., 3.6739403974420594`*^-16}, {-5., 
                    3.061616997868383*^-16}}], 
                    
                    LineBox[{{-5., 3.061616997868383*^-16}, {-4., 
                    2.4492935982947064`*^-16}}], 
                    
                    LineBox[{{-4., 2.4492935982947064`*^-16}, {-3., 
                    1.8369701987210297`*^-16}}], 
                    
                    LineBox[{{-3., 1.8369701987210297`*^-16}, {-2., 
                    1.2246467991473532`*^-16}}], 
                    
                    LineBox[{{-2., 1.2246467991473532`*^-16}, {-1., 
                    6.123233995736766*^-17}}], 
                    LineBox[{{-1., 6.123233995736766*^-17}, {0., 0.}}]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-17.4, 
                    1.0654427152581972`*^-15}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736777*^-17}], "\"\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "", "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-16.4, 
                    1.0042103753008295`*^-15}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736757*^-17}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", 
                    "\"\[DottedSquare]\""}, "RowWithSeparators"], 
                    TooltipStyle -> "TextStyling"], Annotation[#, 
                    Row[{"64", "\[DottedSquare]"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-15.4, 
                    9.42978035343462*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736757*^-17}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", 
                    "\"\[DottedSquare]\""}, "RowWithSeparators"], 
                    TooltipStyle -> "TextStyling"], Annotation[#, 
                    Row[{"64", "\[DottedSquare]"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-14.4, 
                    8.817456953860943*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736777*^-17}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", 
                    "\"\[DottedSquare]\""}, "RowWithSeparators"], 
                    TooltipStyle -> "TextStyling"], Annotation[#, 
                    Row[{"128", "\[DottedSquare]"}, "\[Cross]"], 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-13.4, 
                    8.205133554287267*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", 
                    "\"\[DottedSquare]\""}, "RowWithSeparators"], 
                    TooltipStyle -> "TextStyling"], Annotation[#, 
                    Row[{"128", "\[DottedSquare]"}, "\[Cross]"], 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-12.399999999999999`,
                     7.59281015471359*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", 
                    "\"\[DottedSquare]\""}, "RowWithSeparators"], 
                    TooltipStyle -> "TextStyling"], Annotation[#, 
                    Row[{"256", "\[DottedSquare]"}, "\[Cross]"], 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-11.4, 
                    6.980486755139913*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736757*^-17}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", 
                    "\"\[DottedSquare]\""}, "RowWithSeparators"], 
                    TooltipStyle -> "TextStyling"], Annotation[#, 
                    Row[{"256", "\[DottedSquare]"}, "\[Cross]"], 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-10.4, 
                    6.368163355566237*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", 
                    "\"\[DottedSquare]\""}, "RowWithSeparators"], 
                    TooltipStyle -> "TextStyling"], Annotation[#, 
                    Row[{"512", "\[DottedSquare]"}, "\[Cross]"], 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-9.399999999999999, 
                    5.755839955992561*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", 
                    "\"\[DottedSquare]\""}, "RowWithSeparators"], 
                    TooltipStyle -> "TextStyling"], Annotation[#, 
                    Row[{"512", "\[DottedSquare]"}, "\[Cross]"], 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-8.4, 
                    5.143516556418883*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1024\"", 
                    "\"\[DottedSquare]\""}, "RowWithSeparators"], 
                    TooltipStyle -> "TextStyling"], Annotation[#, 
                    Row[{"1024", "\[DottedSquare]"}, "\[Cross]"], 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-7.4, 
                    4.531193156845207*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1024\"", 
                    "\"\[DottedSquare]\""}, "RowWithSeparators"], 
                    TooltipStyle -> "TextStyling"], Annotation[#, 
                    Row[{"1024", "\[DottedSquare]"}, "\[Cross]"], 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-6.4, 
                    3.9188697572715305`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", 
                    "\"\[DottedSquare]\""}, "RowWithSeparators"], 
                    TooltipStyle -> "TextStyling"], Annotation[#, 
                    Row[{"256", "\[DottedSquare]"}, "\[Cross]"], 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-5.4, 
                    3.3065463576978537`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736762*^-17}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", 
                    "\"\[DottedSquare]\""}, "RowWithSeparators"], 
                    TooltipStyle -> "TextStyling"], Annotation[#, 
                    Row[{"256", "\[DottedSquare]"}, "\[Cross]"], 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-4.4, 
                    2.694222958124177*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", 
                    "\"\[DottedSquare]\""}, "RowWithSeparators"], 
                    TooltipStyle -> "TextStyling"], Annotation[#, 
                    Row[{"64", "\[DottedSquare]"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-3.4, 
                    2.0818995585505003`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", 
                    "\"\[DottedSquare]\""}, "RowWithSeparators"], 
                    TooltipStyle -> "TextStyling"], Annotation[#, 
                    Row[{"64", "\[DottedSquare]"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-2.4000000000000004`,
                     1.4695761589768238`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736765*^-17}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"3\"", 
                    "\"\[DottedSquare]\""}, "RowWithSeparators"], 
                    TooltipStyle -> "TextStyling"], Annotation[#, 
                    Row[{"3", "\[DottedSquare]"}, "\[Cross]"], "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.4, 
                    8.572527594031473*^-17}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736766*^-17}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"\[DottedSquare]\"", 
                    "\"3\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"\[DottedSquare]", "3"}, "\[Cross]"], "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-0.4, 
                    2.4492935982947065`*^-17}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736766*^-17}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"\[DottedSquare]\"", 
                    "\"3\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"\[DottedSquare]", "3"}, "\[Cross]"], 
                    "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], 
                    StyleBox[{
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-18., 1.102182119232618*^-15}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-17., 1.0409497792752501`*^-15}], 
                    Offset[{10, 10}, {-17., 1.0409497792752501`*^-15}]]}, 
                    InsetBox[
                    PaneBox[
                    StyleBox[
                    "\"\:2217\"", StripOnInput -> False, FontSize -> 20], 
                    ImageSize -> {11, 28}], {-17., 
                    1.0409497792752501`*^-15}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"input_cnn\"", Bold, StripOnInput -> False]}, {
                    
                    StyleBox[
                    TagBox[
                    RowBox[{"ConvolutionLayer", "[", 
                    RowBox[{"64", ",", 
                    RowBox[{"{", "3", "}"}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", "1", "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", "Automatic"}], "}"}]}]}], "]"}],
                     HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["input_cnn", Bold], 
                    Style[
                    HoldForm[
                    ConvolutionLayer[
                    64, {3}, "PaddingSize" -> {1}, 
                    "Input" -> {Automatic, Automatic}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-16., 9.797174393178826*^-16}], 
                    Offset[{10, 10}, {-16., 9.797174393178826*^-16}]]}, 
                    InsetBox["\"P\"", 
                    Offset[{0, -1}, {-16., 9.797174393178826*^-16}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"input_pool\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"PoolingLayer", "[", 
                    RowBox[{
                    RowBox[{"{", "3", "}"}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", "1", "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "Automatic"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["input_pool", Bold], 
                    Style[
                    HoldForm[
                    
                    PoolingLayer[{3}, "PaddingSize" -> {1}, 
                    "Input" -> {64, Automatic}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-15., 9.18485099360515*^-16}], 
                    Offset[{12, 12}, {-15., 9.18485099360515*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, BaseStyle -> GrayLevel[0.4], 
                    ImageMargins -> 0., ImagePadding -> 0, ImageSize -> 15, 
                    PlotRange -> All, PlotRangePadding -> 0], {-15., 
                    9.18485099360515*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"incept_1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "8", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "11", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["incept_1", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[8], 
                    Skeleton[11]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-14., 8.572527594031472*^-16}], 
                    Offset[{10, 10}, {-14., 8.572527594031472*^-16}]]}, 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzF1s9LG0EUB/CNtpKLtvVmC4q3loooolgqBUUjHnIwNhSiRnZ+iSARkoh4
MeBJCJ7Egyi0Je5MD+JdSr3Yf6A92HMFPVr0YitofOtO7DRaE83s5gtvIXsY
Pnmz83Yb0VSIVRiGkfDDJWTOdMfj5uzQY/gRjiUmxmOUDMSSdJzGO1El3KyD
eg71wNCeoK6FEFqr1rWWEi0+1rbykBDxWcdaedHh81EiMox+ympYKz8l+yjm
C7YNjMc6QHkpyUexmLRtjIhThkRAF0rJvX0YixD07Mz2EWJFdaKU3MvHTKsL
bCeX+4r5rG6Ukjv7oG8vwHbo9E0su4FScicfQvwpPGs/nb6JTcNIVbgFkyna
NzycqYG+fZNn9evY2Hu/mzCZonzhcKoK+vVFntUfGK/Wug2TKcbnY4Rb0naA
0HqD66q/KegjhKdz85eQ9RYvUEpu9THMY7n5S02r1yuUkv/6oG9v7fkLdY4x
H/ESpeRGHzxjb8D1W864Ga9RSq75oG8vwfbLsfGlcqCU/OOLRj88o4Tvyb5t
eDB/C+XKx8Irj+AcfJfnYcej+Vsolz57/oJp25kjfDcSsZ6UGyZj+3ywl0LO
uH02+rG+3CglQfg+WpS2I5gjzaUuCO/BOV31+pW5JW1/4Kz26PjD/YHprK5q
bRnMBvqS501NA2nD2euSC97V87qqoz0i4HvznY6+5XIBTGFFng==
                    
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSize -> 20, ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}], TraditionalForm], {-14.,
                     8.572527594031472*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"ramp_1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{"Ramp", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"128", ",", "Automatic"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["ramp_1", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[Ramp, "Input" -> {128, Automatic}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-13., 7.960204194457795*^-16}], 
                    Offset[{12, 12}, {-13., 7.960204194457795*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, BaseStyle -> GrayLevel[0.4], 
                    ImageMargins -> 0., ImagePadding -> 0, ImageSize -> 15, 
                    PlotRange -> All, PlotRangePadding -> 0], {-13., 
                    7.960204194457795*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"incept_2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "8", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "11", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["incept_2", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[8], 
                    Skeleton[11]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-12., 7.347880794884119*^-16}], 
                    Offset[{10, 10}, {-12., 7.347880794884119*^-16}]]}, 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzF1s9LG0EUB/CNtpKLtvVmC4q3loooolgqBUUjHnIwNhSiRnZ+iSARkoh4
MeBJCJ7Egyi0Je5MD+JdSr3Yf6A92HMFPVr0YitofOtO7DRaE83s5gtvIXsY
Pnmz83Yb0VSIVRiGkfDDJWTOdMfj5uzQY/gRjiUmxmOUDMSSdJzGO1El3KyD
eg71wNCeoK6FEFqr1rWWEi0+1rbykBDxWcdaedHh81EiMox+ympYKz8l+yjm
C7YNjMc6QHkpyUexmLRtjIhThkRAF0rJvX0YixD07Mz2EWJFdaKU3MvHTKsL
bCeX+4r5rG6Ukjv7oG8vwHbo9E0su4FScicfQvwpPGs/nb6JTcNIVbgFkyna
NzycqYG+fZNn9evY2Hu/mzCZonzhcKoK+vVFntUfGK/Wug2TKcbnY4Rb0naA
0HqD66q/KegjhKdz85eQ9RYvUEpu9THMY7n5S02r1yuUkv/6oG9v7fkLdY4x
H/ESpeRGHzxjb8D1W864Ga9RSq75oG8vwfbLsfGlcqCU/OOLRj88o4Tvyb5t
eDB/C+XKx8Irj+AcfJfnYcej+Vsolz57/oJp25kjfDcSsZ6UGyZj+3ywl0LO
uH02+rG+3CglQfg+WpS2I5gjzaUuCO/BOV31+pW5JW1/4Kz26PjD/YHprK5q
bRnMBvqS501NA2nD2euSC97V87qqoz0i4HvznY6+5XIBTGFFng==
                    
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSize -> 20, ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}], TraditionalForm], {-12.,
                     7.347880794884119*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"ramp_2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{"Ramp", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "Automatic"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["ramp_2", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[Ramp, "Input" -> {256, Automatic}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-11., 6.735557395310443*^-16}], 
                    Offset[{12, 12}, {-11., 6.735557395310443*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, BaseStyle -> GrayLevel[0.4], 
                    ImageMargins -> 0., ImagePadding -> 0, ImageSize -> 15, 
                    PlotRange -> All, PlotRangePadding -> 0], {-11., 
                    6.735557395310443*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"incept_3\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "8", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "11", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["incept_3", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[8], 
                    Skeleton[11]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-10., 6.123233995736766*^-16}], 
                    Offset[{10, 10}, {-10., 6.123233995736766*^-16}]]}, 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzF1s9LG0EUB/CNtpKLtvVmC4q3loooolgqBUUjHnIwNhSiRnZ+iSARkoh4
MeBJCJ7Egyi0Je5MD+JdSr3Yf6A92HMFPVr0YitofOtO7DRaE83s5gtvIXsY
Pnmz83Yb0VSIVRiGkfDDJWTOdMfj5uzQY/gRjiUmxmOUDMSSdJzGO1El3KyD
eg71wNCeoK6FEFqr1rWWEi0+1rbykBDxWcdaedHh81EiMox+ympYKz8l+yjm
C7YNjMc6QHkpyUexmLRtjIhThkRAF0rJvX0YixD07Mz2EWJFdaKU3MvHTKsL
bCeX+4r5rG6Ukjv7oG8vwHbo9E0su4FScicfQvwpPGs/nb6JTcNIVbgFkyna
NzycqYG+fZNn9evY2Hu/mzCZonzhcKoK+vVFntUfGK/Wug2TKcbnY4Rb0naA
0HqD66q/KegjhKdz85eQ9RYvUEpu9THMY7n5S02r1yuUkv/6oG9v7fkLdY4x
H/ESpeRGHzxjb8D1W864Ga9RSq75oG8vwfbLsfGlcqCU/OOLRj88o4Tvyb5t
eDB/C+XKx8Irj+AcfJfnYcej+Vsolz57/oJp25kjfDcSsZ6UGyZj+3ywl0LO
uH02+rG+3CglQfg+WpS2I5gjzaUuCO/BOV31+pW5JW1/4Kz26PjD/YHprK5q
bRnMBvqS501NA2nD2euSC97V87qqoz0i4HvznY6+5XIBTGFFng==
                    
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSize -> 20, ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}], TraditionalForm], {-10.,
                     6.123233995736766*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"ramp_3\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{"Ramp", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "Automatic"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["ramp_3", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[Ramp, "Input" -> {512, Automatic}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-9., 5.51091059616309*^-16}], 
                    Offset[{12, 12}, {-9., 5.51091059616309*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, BaseStyle -> GrayLevel[0.4], 
                    ImageMargins -> 0., ImagePadding -> 0, ImageSize -> 15, 
                    PlotRange -> All, PlotRangePadding -> 0], {-9., 
                    5.51091059616309*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"incept_4\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "8", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "11", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["incept_4", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[8], 
                    Skeleton[11]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 10), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-8., 4.898587196589413*^-16}], 
                    Offset[{10, 10}, {-8., 4.898587196589413*^-16}]]}, 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzF1s9LG0EUB/CNtpKLtvVmC4q3loooolgqBUUjHnIwNhSiRnZ+iSARkoh4
MeBJCJ7Egyi0Je5MD+JdSr3Yf6A92HMFPVr0YitofOtO7DRaE83s5gtvIXsY
Pnmz83Yb0VSIVRiGkfDDJWTOdMfj5uzQY/gRjiUmxmOUDMSSdJzGO1El3KyD
eg71wNCeoK6FEFqr1rWWEi0+1rbykBDxWcdaedHh81EiMox+ympYKz8l+yjm
C7YNjMc6QHkpyUexmLRtjIhThkRAF0rJvX0YixD07Mz2EWJFdaKU3MvHTKsL
bCeX+4r5rG6Ukjv7oG8vwHbo9E0su4FScicfQvwpPGs/nb6JTcNIVbgFkyna
NzycqYG+fZNn9evY2Hu/mzCZonzhcKoK+vVFntUfGK/Wug2TKcbnY4Rb0naA
0HqD66q/KegjhKdz85eQ9RYvUEpu9THMY7n5S02r1yuUkv/6oG9v7fkLdY4x
H/ESpeRGHzxjb8D1W864Ga9RSq75oG8vwfbLsfGlcqCU/OOLRj88o4Tvyb5t
eDB/C+XKx8Irj+AcfJfnYcej+Vsolz57/oJp25kjfDcSsZ6UGyZj+3ywl0LO
uH02+rG+3CglQfg+WpS2I5gjzaUuCO/BOV31+pW5JW1/4Kz26PjD/YHprK5q
bRnMBvqS501NA2nD2euSC97V87qqoz0i4HvznY6+5XIBTGFFng==
                    
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSize -> 20, ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}], TraditionalForm], {-8., 
                    4.898587196589413*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"ramp_4\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{"Ramp", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1024", ",", "Automatic"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["ramp_4", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[Ramp, "Input" -> {1024, Automatic}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 11), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-7., 4.286263797015736*^-16}], 
                    Offset[{10, 10}, {-7., 4.286263797015736*^-16}]]}, 
                    InsetBox[
                    PaneBox[
                    StyleBox[
                    "\"\:2217\"", StripOnInput -> False, FontSize -> 20], 
                    ImageSize -> {11, 28}], {-7., 4.286263797015736*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"dsc2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConvolutionLayer", "[", 
                    RowBox[{"256", ",", 
                    RowBox[{"{", "3", "}"}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", "1", "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1024", ",", "Automatic"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["dsc2", Bold], 
                    Style[
                    HoldForm[
                    ConvolutionLayer[
                    256, {3}, "PaddingSize" -> {1}, 
                    "Input" -> {1024, Automatic}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 12), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-6., 3.6739403974420594`*^-16}], 
                    Offset[{10, 10}, {-6., 3.6739403974420594`*^-16}]]}, 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzF1s9LG0EUB/CNtpKLtvVmC4q3loooolgqBUUjHnIwNhSiRnZ+iSARkoh4
MeBJCJ7Egyi0Je5MD+JdSr3Yf6A92HMFPVr0YitofOtO7DRaE83s5gtvIXsY
Pnmz83Yb0VSIVRiGkfDDJWTOdMfj5uzQY/gRjiUmxmOUDMSSdJzGO1El3KyD
eg71wNCeoK6FEFqr1rWWEi0+1rbykBDxWcdaedHh81EiMox+ympYKz8l+yjm
C7YNjMc6QHkpyUexmLRtjIhThkRAF0rJvX0YixD07Mz2EWJFdaKU3MvHTKsL
bCeX+4r5rG6Ukjv7oG8vwHbo9E0su4FScicfQvwpPGs/nb6JTcNIVbgFkyna
NzycqYG+fZNn9evY2Hu/mzCZonzhcKoK+vVFntUfGK/Wug2TKcbnY4Rb0naA
0HqD66q/KegjhKdz85eQ9RYvUEpu9THMY7n5S02r1yuUkv/6oG9v7fkLdY4x
H/ESpeRGHzxjb8D1W864Ga9RSq75oG8vwfbLsfGlcqCU/OOLRj88o4Tvyb5t
eDB/C+XKx8Irj+AcfJfnYcej+Vsolz57/oJp25kjfDcSsZ6UGyZj+3ywl0LO
uH02+rG+3CglQfg+WpS2I5gjzaUuCO/BOV31+pW5JW1/4Kz26PjD/YHprK5q
bRnMBvqS501NA2nD2euSC97V87qqoz0i4HvznY6+5XIBTGFFng==
                    
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSize -> 20, ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}], TraditionalForm], {-6., 
                    3.6739403974420594`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"drmp2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{"Ramp", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "Automatic"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["drmp2", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[Ramp, "Input" -> {256, Automatic}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 13), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-5., 3.061616997868383*^-16}], 
                    Offset[{10, 10}, {-5., 3.061616997868383*^-16}]]}, 
                    InsetBox[
                    PaneBox[
                    StyleBox[
                    "\"\:2217\"", StripOnInput -> False, FontSize -> 20], 
                    ImageSize -> {11, 28}], {-5., 3.061616997868383*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"dsc4\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConvolutionLayer", "[", 
                    RowBox[{"64", ",", 
                    RowBox[{"{", "3", "}"}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", "1", "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "Automatic"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["dsc4", Bold], 
                    Style[
                    HoldForm[
                    ConvolutionLayer[
                    64, {3}, "PaddingSize" -> {1}, 
                    "Input" -> {256, Automatic}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 14), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-4., 2.4492935982947064`*^-16}], 
                    Offset[{10, 10}, {-4., 2.4492935982947064`*^-16}]]}, 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzF1s9LG0EUB/CNtpKLtvVmC4q3loooolgqBUUjHnIwNhSiRnZ+iSARkoh4
MeBJCJ7Egyi0Je5MD+JdSr3Yf6A92HMFPVr0YitofOtO7DRaE83s5gtvIXsY
Pnmz83Yb0VSIVRiGkfDDJWTOdMfj5uzQY/gRjiUmxmOUDMSSdJzGO1El3KyD
eg71wNCeoK6FEFqr1rWWEi0+1rbykBDxWcdaedHh81EiMox+ympYKz8l+yjm
C7YNjMc6QHkpyUexmLRtjIhThkRAF0rJvX0YixD07Mz2EWJFdaKU3MvHTKsL
bCeX+4r5rG6Ukjv7oG8vwHbo9E0su4FScicfQvwpPGs/nb6JTcNIVbgFkyna
NzycqYG+fZNn9evY2Hu/mzCZonzhcKoK+vVFntUfGK/Wug2TKcbnY4Rb0naA
0HqD66q/KegjhKdz85eQ9RYvUEpu9THMY7n5S02r1yuUkv/6oG9v7fkLdY4x
H/ESpeRGHzxjb8D1W864Ga9RSq75oG8vwfbLsfGlcqCU/OOLRj88o4Tvyb5t
eDB/C+XKx8Irj+AcfJfnYcej+Vsolz57/oJp25kjfDcSsZ6UGyZj+3ywl0LO
uH02+rG+3CglQfg+WpS2I5gjzaUuCO/BOV31+pW5JW1/4Kz26PjD/YHprK5q
bRnMBvqS501NA2nD2euSC97V87qqoz0i4HvznY6+5XIBTGFFng==
                    
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSize -> 20, ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}], TraditionalForm], {-4., 
                    2.4492935982947064`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"drmp4\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{"Ramp", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "Automatic"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["drmp4", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[Ramp, "Input" -> {64, Automatic}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 15), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-3., 1.8369701987210297`*^-16}], 
                    Offset[{10, 10}, {-3., 1.8369701987210297`*^-16}]]}, 
                    InsetBox[
                    PaneBox[
                    StyleBox[
                    "\"\:2217\"", StripOnInput -> False, FontSize -> 20], 
                    ImageSize -> {11, 28}], {-3., 1.8369701987210297`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"pcnn\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConvolutionLayer", "[", 
                    RowBox[{"3", ",", 
                    RowBox[{"{", "3", "}"}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", "1", "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "Automatic"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["pcnn", Bold], 
                    Style[
                    HoldForm[
                    ConvolutionLayer[
                    3, {3}, "PaddingSize" -> {1}, 
                    "Input" -> {64, Automatic}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 16), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-2., 1.2246467991473532`*^-16}], 
                    Offset[{10, 10}, {-2., 1.2246467991473532`*^-16}]]}, 
                    InsetBox["\"T\"", 
                    Offset[{0, -1}, {-2., 1.2246467991473532`*^-16}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"trsp\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"TransposeLayer", "[", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "Automatic"}], "}"}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["trsp", Bold], 
                    Style[
                    HoldForm[
                    TransposeLayer["Input" -> {3, Automatic}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 17), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-1., 6.123233995736766*^-17}], 
                    Offset[{10, 10}, {-1., 6.123233995736766*^-17}]]}, 
                    InsetBox["\"S\"", 
                    Offset[{0, -1}, {-1., 6.123233995736766*^-17}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"sfmx\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"SoftmaxLayer", "[", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", "3"}], "}"}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["sfmx", Bold], 
                    Style[
                    HoldForm[
                    SoftmaxLayer["Input" -> {Automatic, 3}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 18), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 19), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, FontSize -> 10]}, {}, {
                    EdgeForm[{
                    GrayLevel[0.5], 
                    Thickness[Large], 
                    Dashing[{0, Small}]}], 
                    FaceForm[None], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    Part[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQFGBzqel/18deuyDYRveOD4QtdpHQcuQfkGB9hj
RIzVll2E8vUOuIs9Pn+4+wKUr3OAZ2HyzUOPzkH5Wge6RRmF/609A+VrHODq
mudjWXkKylc70PXPuq3E5QSUr3KAs/jm/vX8x6B8Jah7DkP5ClD7D0L5MlD7
9kH5ElDzd0H5IlDztkH5AlD9G6F8Dqj6VVA+A1R+IZT/YT+EPxEmDwcAM7VU
Mg==
                    "], NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 20, 20, 24, 20, 24, 20, 24, 20, 24, 20, 20, 20, 
                    20, 20, 20, 20, 20, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, AspectRatio -> Full, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    ImagePadding -> {{28., 28.}, {28., 18.}}, 
                    ImageSize -> {686., 46.000000000000036`}, 
                    PlotRangePadding -> 0], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "input_cnn"], 
                    NeuralNetworks`NetPath["Nodes", "input_pool"], 
                    NeuralNetworks`NetPath["Nodes", "incept_1"], 
                    NeuralNetworks`NetPath["Nodes", "ramp_1"], 
                    NeuralNetworks`NetPath["Nodes", "incept_2"], 
                    NeuralNetworks`NetPath["Nodes", "ramp_2"], 
                    NeuralNetworks`NetPath["Nodes", "incept_3"], 
                    NeuralNetworks`NetPath["Nodes", "ramp_3"], 
                    NeuralNetworks`NetPath["Nodes", "incept_4"], 
                    NeuralNetworks`NetPath["Nodes", "ramp_4"], 
                    NeuralNetworks`NetPath["Nodes", "dsc2"], 
                    NeuralNetworks`NetPath["Nodes", "drmp2"], 
                    NeuralNetworks`NetPath["Nodes", "dsc4"], 
                    NeuralNetworks`NetPath["Nodes", "drmp4"], 
                    NeuralNetworks`NetPath["Nodes", "pcnn"], 
                    NeuralNetworks`NetPath["Nodes", "trsp"], 
                    NeuralNetworks`NetPath["Nodes", "sfmx"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[2, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{NeuralNetworks`SizeT, 3}, 
                    NeuralNetworks`RealT]], 
                    Association[
                    "input_cnn" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`TensorT[{
                    64, NeuralNetworks`SizeT, 3}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> NeuralNetworks`SizeT, "$GroupNumber" -> 
                    1, "$InputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[2, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    64, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "input_pool" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3}, "Stride" -> {1}, 
                    "PaddingSize" -> {1}, "Function" -> Max, "Dimensionality" -> 
                    1, "Interleaving" -> False, "$Channels" -> 64, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{
                    64, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    64, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{
                    64, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Nodes" -> 
                    Association[
                    "incept_a_batch_norm" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 64, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "incept_a_3" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["incept_a_bnl_shared" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 64, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    64, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    64, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_ramp_shared" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    64, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    64, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_cnn1d_branch_main" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 64, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    64, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_ramp_branch_main" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_cnn1d_branch_main_a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_cnn1d_branch_1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 64, 1}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1}, 
                    "Stride" -> {1}, "PaddingSize" -> {0}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    64, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_plus_shared" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "incept_a_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_cnn1d_branch_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_cnn1d_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_a_cnn1d_branch_main_a", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "incept_a_ramp_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_a_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_cnn1d_branch_main_a", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_a_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_cnn1d_branch_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_plus_shared", "Outputs", "Output"]}], 
                    "2" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["incept_a_bnl_shared" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 128, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_ramp_shared" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_cnn1d_branch_main" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_bnl_main" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 128, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_ramp_branch_main" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_cnn1d_branch_main_a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_plus_shared" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "incept_a_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_cnn1d_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_a_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_cnn1d_branch_main_a", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "incept_a_ramp_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_a_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_cnn1d_branch_main_a", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_plus_shared", "Outputs", "Output"]}], 
                    "3" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["incept_a_bnl_shared" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 128, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_ramp_shared" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_cnn1d_branch_main" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_bnl_main" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 128, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_ramp_branch_main" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_cnn1d_branch_main_a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_plus_shared" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "incept_a_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_cnn1d_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_a_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_cnn1d_branch_main_a", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "incept_a_ramp_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_a_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_cnn1d_branch_main_a", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_plus_shared", "Outputs", "Output"]}]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "incept_a_pool_3" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["KernelSize" -> {3}, "Stride" -> {1}, 
                    "PaddingSize" -> {1}, "Function" -> Max, "Dimensionality" -> 
                    1, "Interleaving" -> False, "$Channels" -> 128, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "incept_a_25" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["incept_a_bnl_shared" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 64, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    64, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    64, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_ramp_shared" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    64, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    64, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_cnn1d_branch_main" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 64, 25}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {25}, 
                    "Stride" -> {1}, "PaddingSize" -> {12}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    64, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_ramp_branch_main" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_cnn1d_branch_main_a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 25}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {25}, 
                    "Stride" -> {1}, "PaddingSize" -> {12}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_cnn1d_branch_1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> NeuralNetworks`TensorT[{128, 64, 
                    1}, NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1}, 
                    "Stride" -> {1}, "PaddingSize" -> {0}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    64, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_plus_shared" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "incept_a_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_cnn1d_branch_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_cnn1d_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_a_cnn1d_branch_main_a", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "incept_a_ramp_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_a_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_cnn1d_branch_main_a", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_a_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_cnn1d_branch_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_plus_shared", "Outputs", "Output"]}], 
                    "2" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["incept_a_bnl_shared" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 128, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_ramp_shared" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_cnn1d_branch_main" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 25}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {25}, 
                    "Stride" -> {1}, "PaddingSize" -> {12}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_bnl_main" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 128, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_ramp_branch_main" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_cnn1d_branch_main_a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 25}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {25}, 
                    "Stride" -> {1}, "PaddingSize" -> {12}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_plus_shared" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "incept_a_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_cnn1d_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_a_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_cnn1d_branch_main_a", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "incept_a_ramp_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_a_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_cnn1d_branch_main_a", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_plus_shared", "Outputs", "Output"]}], 
                    "3" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["incept_a_bnl_shared" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 128, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_ramp_shared" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_cnn1d_branch_main" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 25}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {25}, 
                    "Stride" -> {1}, "PaddingSize" -> {12}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_bnl_main" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 128, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_ramp_branch_main" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_cnn1d_branch_main_a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 25}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {25}, 
                    "Stride" -> {1}, "PaddingSize" -> {12}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_plus_shared" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "incept_a_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_cnn1d_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_a_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_cnn1d_branch_main_a", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "incept_a_ramp_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_a_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_cnn1d_branch_main_a", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_plus_shared", "Outputs", "Output"]}]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "incept_a_pool_25" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["KernelSize" -> {25}, "Stride" -> {1}, 
                    "PaddingSize" -> {12}, "Function" -> Max, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$Channels" -> 128, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "incept_a_75" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["incept_a_bnl_shared" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 64, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    64, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    64, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_ramp_shared" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    64, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    64, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_cnn1d_branch_main" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 64, 75}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {75}, 
                    "Stride" -> {1}, "PaddingSize" -> {37}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    64, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_ramp_branch_main" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_cnn1d_branch_main_a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 75}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {75}, 
                    "Stride" -> {1}, "PaddingSize" -> {37}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_cnn1d_branch_1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 64, 1}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1}, 
                    "Stride" -> {1}, "PaddingSize" -> {0}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{
                    64, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_plus_shared" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "incept_a_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_cnn1d_branch_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_cnn1d_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_a_cnn1d_branch_main_a", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "incept_a_ramp_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_a_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_cnn1d_branch_main_a", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_a_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_cnn1d_branch_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_plus_shared", "Outputs", "Output"]}], 
                    "2" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["incept_a_bnl_shared" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 128, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_ramp_shared" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_cnn1d_branch_main" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 75}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {75}, 
                    "Stride" -> {1}, "PaddingSize" -> {37}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_bnl_main" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 128, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_ramp_branch_main" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_cnn1d_branch_main_a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> NeuralNetworks`TensorT[{128, 128,
                     75}, NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {75}, 
                    "Stride" -> {1}, "PaddingSize" -> {37}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_plus_shared" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "incept_a_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_cnn1d_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_a_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_cnn1d_branch_main_a", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "incept_a_ramp_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_a_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_cnn1d_branch_main_a", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_plus_shared", "Outputs", "Output"]}], 
                    "3" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["incept_a_bnl_shared" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 128, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_ramp_shared" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_cnn1d_branch_main" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 75}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {75}, 
                    "Stride" -> {1}, "PaddingSize" -> {37}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_bnl_main" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 128, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_ramp_branch_main" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_cnn1d_branch_main_a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 75}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {75}, 
                    "Stride" -> {1}, "PaddingSize" -> {37}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_a_plus_shared" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "incept_a_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_cnn1d_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_a_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_cnn1d_branch_main_a", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "incept_a_ramp_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_a_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_cnn1d_branch_main_a", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_plus_shared", "Outputs", "Output"]}]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "incept_a_pool_75" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["KernelSize" -> {75}, "Stride" -> {1}, 
                    "PaddingSize" -> {37}, "Function" -> Max, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$Channels" -> 128, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "incept_a_thread" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT], "3" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_batch_norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_25", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_batch_norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_batch_norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_75", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_batch_norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_pool_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_thread", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_pool_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_pool_25", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_25", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_thread", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_pool_25", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_pool_75", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_75", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_thread", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_pool_75", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_a_thread", "Outputs", "Output"]}], 
                    "ramp_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Nodes" -> 
                    Association[
                    "incept_b_batch_norm" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 128, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "incept_b_3" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["incept_b_bnl_shared" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 128, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_ramp_shared" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_cnn1d_branch_main" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{256, 128, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_ramp_branch_main" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_cnn1d_branch_main_a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{256, 256, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_cnn1d_branch_1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{256, 128, 1}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1}, 
                    "Stride" -> {1}, "PaddingSize" -> {0}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_plus_shared" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "incept_b_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_cnn1d_branch_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_cnn1d_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_b_cnn1d_branch_main_a", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "incept_b_ramp_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_b_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_cnn1d_branch_main_a", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_b_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_cnn1d_branch_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_plus_shared", "Outputs", "Output"]}], 
                    "2" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["incept_b_bnl_shared" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 256, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_ramp_shared" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_cnn1d_branch_main" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{256, 256, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_bnl_main" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 256, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_ramp_branch_main" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_cnn1d_branch_main_a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{256, 256, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_plus_shared" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "incept_b_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_cnn1d_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_b_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_cnn1d_branch_main_a", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "incept_b_ramp_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_b_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_cnn1d_branch_main_a", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_plus_shared", "Outputs", "Output"]}], 
                    "3" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["incept_b_bnl_shared" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 256, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_ramp_shared" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_cnn1d_branch_main" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{256, 256, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_bnl_main" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 256, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_ramp_branch_main" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_cnn1d_branch_main_a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{256, 256, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_plus_shared" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "incept_b_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_cnn1d_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_b_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_cnn1d_branch_main_a", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "incept_b_ramp_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_b_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_cnn1d_branch_main_a", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_plus_shared", "Outputs", "Output"]}]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "incept_b_pool_3" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["KernelSize" -> {3}, "Stride" -> {1}, 
                    "PaddingSize" -> {1}, "Function" -> Max, "Dimensionality" -> 
                    1, "Interleaving" -> False, "$Channels" -> 256, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "incept_b_25" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["incept_b_bnl_shared" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 128, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_ramp_shared" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_cnn1d_branch_main" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{256, 128, 25}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 256, "KernelSize" -> {25}, 
                    "Stride" -> {1}, "PaddingSize" -> {12}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_ramp_branch_main" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_cnn1d_branch_main_a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{256, 256, 25}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 256, "KernelSize" -> {25}, 
                    "Stride" -> {1}, "PaddingSize" -> {12}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_cnn1d_branch_1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> NeuralNetworks`TensorT[{256, 128,
                     1}, NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1}, 
                    "Stride" -> {1}, "PaddingSize" -> {0}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_plus_shared" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "incept_b_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_cnn1d_branch_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_cnn1d_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_b_cnn1d_branch_main_a", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "incept_b_ramp_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_b_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_cnn1d_branch_main_a", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_b_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_cnn1d_branch_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_plus_shared", "Outputs", "Output"]}], 
                    "2" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["incept_b_bnl_shared" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 256, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_ramp_shared" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_cnn1d_branch_main" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{256, 256, 25}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 256, "KernelSize" -> {25}, 
                    "Stride" -> {1}, "PaddingSize" -> {12}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_bnl_main" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 256, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_ramp_branch_main" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_cnn1d_branch_main_a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{256, 256, 25}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 256, "KernelSize" -> {25}, 
                    "Stride" -> {1}, "PaddingSize" -> {12}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_plus_shared" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "incept_b_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_cnn1d_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_b_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_cnn1d_branch_main_a", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "incept_b_ramp_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_b_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_cnn1d_branch_main_a", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_plus_shared", "Outputs", "Output"]}], 
                    "3" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["incept_b_bnl_shared" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 256, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_ramp_shared" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_cnn1d_branch_main" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{256, 256, 25}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 256, "KernelSize" -> {25}, 
                    "Stride" -> {1}, "PaddingSize" -> {12}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_bnl_main" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 256, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_ramp_branch_main" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_cnn1d_branch_main_a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{256, 256, 25}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 256, "KernelSize" -> {25}, 
                    "Stride" -> {1}, "PaddingSize" -> {12}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_plus_shared" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "incept_b_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_cnn1d_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_b_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_cnn1d_branch_main_a", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "incept_b_ramp_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_b_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_cnn1d_branch_main_a", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_plus_shared", "Outputs", "Output"]}]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "incept_b_pool_25" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["KernelSize" -> {25}, "Stride" -> {1}, 
                    "PaddingSize" -> {12}, "Function" -> Max, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$Channels" -> 256, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "incept_b_75" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["incept_b_bnl_shared" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 128, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_ramp_shared" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_cnn1d_branch_main" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{256, 128, 75}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 256, "KernelSize" -> {75}, 
                    "Stride" -> {1}, "PaddingSize" -> {37}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_ramp_branch_main" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_cnn1d_branch_main_a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{256, 256, 75}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 256, "KernelSize" -> {75}, 
                    "Stride" -> {1}, "PaddingSize" -> {37}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_cnn1d_branch_1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{256, 128, 1}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1}, 
                    "Stride" -> {1}, "PaddingSize" -> {0}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    128, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_plus_shared" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "incept_b_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_cnn1d_branch_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_cnn1d_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_b_cnn1d_branch_main_a", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "incept_b_ramp_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_b_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_cnn1d_branch_main_a", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_b_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_cnn1d_branch_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_plus_shared", "Outputs", "Output"]}], 
                    "2" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["incept_b_bnl_shared" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 256, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_ramp_shared" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_cnn1d_branch_main" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{256, 256, 75}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 256, "KernelSize" -> {75}, 
                    "Stride" -> {1}, "PaddingSize" -> {37}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_bnl_main" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 256, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_ramp_branch_main" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_cnn1d_branch_main_a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{256, 256, 75}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 256, "KernelSize" -> {75}, 
                    "Stride" -> {1}, "PaddingSize" -> {37}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_plus_shared" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "incept_b_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_cnn1d_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_b_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_cnn1d_branch_main_a", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "incept_b_ramp_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_b_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_cnn1d_branch_main_a", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_plus_shared", "Outputs", "Output"]}], 
                    "3" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["incept_b_bnl_shared" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 256, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_ramp_shared" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_cnn1d_branch_main" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{256, 256, 75}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 256, "KernelSize" -> {75}, 
                    "Stride" -> {1}, "PaddingSize" -> {37}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_bnl_main" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 256, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_ramp_branch_main" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_cnn1d_branch_main_a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{256, 256, 75}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 256, "KernelSize" -> {75}, 
                    "Stride" -> {1}, "PaddingSize" -> {37}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_b_plus_shared" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "incept_b_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_cnn1d_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_b_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_cnn1d_branch_main_a", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "incept_b_ramp_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_b_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_cnn1d_branch_main_a", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_plus_shared", "Outputs", "Output"]}]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "incept_b_pool_75" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["KernelSize" -> {75}, "Stride" -> {1}, 
                    "PaddingSize" -> {37}, "Function" -> Max, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$Channels" -> 256, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "incept_b_thread" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{256, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT], "3" -> 
                    NeuralNetworks`TensorT[{256, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_batch_norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_25", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_batch_norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_batch_norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_75", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_batch_norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_pool_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_thread", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_pool_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_pool_25", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_25", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_thread", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_pool_25", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_pool_75", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_75", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_thread", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_pool_75", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_b_thread", "Outputs", "Output"]}], 
                    "ramp_2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_3" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Nodes" -> 
                    Association[
                    "incept_c_batch_norm" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 256, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "incept_c_3" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["incept_c_bnl_shared" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 256, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_ramp_shared" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_cnn1d_branch_main" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{512, 256, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_ramp_branch_main" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_cnn1d_branch_main_a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{512, 512, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_cnn1d_branch_1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{512, 256, 1}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 512, "KernelSize" -> {1}, 
                    "Stride" -> {1}, "PaddingSize" -> {0}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_plus_shared" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "incept_c_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_cnn1d_branch_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_cnn1d_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_c_cnn1d_branch_main_a", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "incept_c_ramp_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_c_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_cnn1d_branch_main_a", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_c_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_cnn1d_branch_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_plus_shared", "Outputs", "Output"]}], 
                    "2" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["incept_c_bnl_shared" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 512, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_ramp_shared" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_cnn1d_branch_main" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{512, 512, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_bnl_main" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 512, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_ramp_branch_main" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_cnn1d_branch_main_a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{512, 512, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_plus_shared" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "incept_c_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_cnn1d_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_c_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_cnn1d_branch_main_a", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "incept_c_ramp_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_c_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_cnn1d_branch_main_a", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_plus_shared", "Outputs", "Output"]}], 
                    "3" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["incept_c_bnl_shared" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 512, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_ramp_shared" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_cnn1d_branch_main" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{512, 512, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_bnl_main" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 512, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_ramp_branch_main" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_cnn1d_branch_main_a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{512, 512, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_plus_shared" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "incept_c_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_cnn1d_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_c_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_cnn1d_branch_main_a", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "incept_c_ramp_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_c_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_cnn1d_branch_main_a", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_plus_shared", "Outputs", "Output"]}]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "incept_c_pool_3" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["KernelSize" -> {3}, "Stride" -> {1}, 
                    "PaddingSize" -> {1}, "Function" -> Max, "Dimensionality" -> 
                    1, "Interleaving" -> False, "$Channels" -> 512, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "incept_c_25" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["incept_c_bnl_shared" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 256, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_ramp_shared" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_cnn1d_branch_main" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{512, 256, 25}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 512, "KernelSize" -> {25}, 
                    "Stride" -> {1}, "PaddingSize" -> {12}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_ramp_branch_main" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_cnn1d_branch_main_a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{512, 512, 25}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 512, "KernelSize" -> {25}, 
                    "Stride" -> {1}, "PaddingSize" -> {12}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_cnn1d_branch_1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{512, 256, 1}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 512, "KernelSize" -> {1}, 
                    "Stride" -> {1}, "PaddingSize" -> {0}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_plus_shared" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "incept_c_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_cnn1d_branch_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_cnn1d_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_c_cnn1d_branch_main_a", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "incept_c_ramp_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_c_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_cnn1d_branch_main_a", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_c_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_cnn1d_branch_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_plus_shared", "Outputs", "Output"]}], 
                    "2" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["incept_c_bnl_shared" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 512, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_ramp_shared" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_cnn1d_branch_main" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{512, 512, 25}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 512, "KernelSize" -> {25}, 
                    "Stride" -> {1}, "PaddingSize" -> {12}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_bnl_main" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 512, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_ramp_branch_main" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_cnn1d_branch_main_a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{512, 512, 25}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 512, "KernelSize" -> {25}, 
                    "Stride" -> {1}, "PaddingSize" -> {12}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_plus_shared" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "incept_c_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_cnn1d_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_c_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_cnn1d_branch_main_a", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "incept_c_ramp_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_c_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_cnn1d_branch_main_a", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_plus_shared", "Outputs", "Output"]}], 
                    "3" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["incept_c_bnl_shared" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 512, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_ramp_shared" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_cnn1d_branch_main" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{512, 512, 25}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 512, "KernelSize" -> {25}, 
                    "Stride" -> {1}, "PaddingSize" -> {12}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_bnl_main" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 512, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_ramp_branch_main" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_cnn1d_branch_main_a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{512, 512, 25}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 512, "KernelSize" -> {25}, 
                    "Stride" -> {1}, "PaddingSize" -> {12}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_plus_shared" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "incept_c_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_cnn1d_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_c_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_cnn1d_branch_main_a", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "incept_c_ramp_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_c_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_cnn1d_branch_main_a", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_plus_shared", "Outputs", "Output"]}]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "incept_c_pool_25" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["KernelSize" -> {25}, "Stride" -> {1}, 
                    "PaddingSize" -> {12}, "Function" -> Max, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$Channels" -> 512, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "incept_c_75" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["incept_c_bnl_shared" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 256, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_ramp_shared" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_cnn1d_branch_main" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{512, 256, 75}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 512, "KernelSize" -> {75}, 
                    "Stride" -> {1}, "PaddingSize" -> {37}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_ramp_branch_main" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_cnn1d_branch_main_a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{512, 512, 75}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 512, "KernelSize" -> {75}, 
                    "Stride" -> {1}, "PaddingSize" -> {37}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_cnn1d_branch_1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{512, 256, 1}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 512, "KernelSize" -> {1}, 
                    "Stride" -> {1}, "PaddingSize" -> {0}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_plus_shared" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "incept_c_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_cnn1d_branch_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_cnn1d_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_c_cnn1d_branch_main_a", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "incept_c_ramp_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_c_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_cnn1d_branch_main_a", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_c_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_cnn1d_branch_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_plus_shared", "Outputs", "Output"]}], 
                    "2" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["incept_c_bnl_shared" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 512, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_ramp_shared" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_cnn1d_branch_main" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{512, 512, 75}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 512, "KernelSize" -> {75}, 
                    "Stride" -> {1}, "PaddingSize" -> {37}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_bnl_main" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 512, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_ramp_branch_main" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_cnn1d_branch_main_a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{512, 512, 75}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 512, "KernelSize" -> {75}, 
                    "Stride" -> {1}, "PaddingSize" -> {37}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_plus_shared" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "incept_c_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_cnn1d_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_c_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_cnn1d_branch_main_a", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "incept_c_ramp_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_c_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_cnn1d_branch_main_a", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_plus_shared", "Outputs", "Output"]}], 
                    "3" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["incept_c_bnl_shared" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 512, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_ramp_shared" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_cnn1d_branch_main" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{512, 512, 75}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 512, "KernelSize" -> {75}, 
                    "Stride" -> {1}, "PaddingSize" -> {37}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_bnl_main" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 512, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_ramp_branch_main" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_cnn1d_branch_main_a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{512, 512, 75}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 512, "KernelSize" -> {75}, 
                    "Stride" -> {1}, "PaddingSize" -> {37}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_c_plus_shared" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "incept_c_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_cnn1d_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_c_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_cnn1d_branch_main_a", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "incept_c_ramp_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_c_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_cnn1d_branch_main_a", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_plus_shared", "Outputs", "Output"]}]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "incept_c_pool_75" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["KernelSize" -> {75}, "Stride" -> {1}, 
                    "PaddingSize" -> {37}, "Function" -> Max, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$Channels" -> 512, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "incept_c_thread" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT], "3" -> 
                    NeuralNetworks`TensorT[{512, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_batch_norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_25", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_batch_norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_batch_norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_75", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_batch_norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_pool_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_thread", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_pool_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_pool_25", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_25", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_thread", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_pool_25", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_pool_75", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_75", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_thread", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_pool_75", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_c_thread", "Outputs", "Output"]}], 
                    "ramp_3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_4" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Nodes" -> 
                    Association[
                    "incept_d_batch_norm" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 512, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "incept_d_3" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["incept_d_bnl_shared" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 512, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_ramp_shared" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_cnn1d_branch_main" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{1024, 512, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_ramp_branch_main" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_cnn1d_branch_main_a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{1024, 1024, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 1024, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_cnn1d_branch_1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{1024, 512, 1}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1}, 
                    "Stride" -> {1}, "PaddingSize" -> {0}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_plus_shared" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "incept_d_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_cnn1d_branch_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_cnn1d_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_d_cnn1d_branch_main_a", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "incept_d_ramp_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_d_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_cnn1d_branch_main_a", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_d_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_cnn1d_branch_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_plus_shared", "Outputs", "Output"]}], 
                    "2" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["incept_d_bnl_shared" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{1024}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{1024}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 1024, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_ramp_shared" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_cnn1d_branch_main" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{1024, 1024, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 1024, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_bnl_main" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{1024}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{1024}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 1024, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_ramp_branch_main" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_cnn1d_branch_main_a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{1024, 1024, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 1024, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_plus_shared" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "incept_d_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_cnn1d_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_d_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_cnn1d_branch_main_a", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "incept_d_ramp_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_d_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_cnn1d_branch_main_a", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_plus_shared", "Outputs", "Output"]}], 
                    "3" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["incept_d_bnl_shared" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{1024}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{1024}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 1024, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_ramp_shared" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_cnn1d_branch_main" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{1024, 1024, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 1024, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_bnl_main" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{1024}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{1024}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 1024, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_ramp_branch_main" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_cnn1d_branch_main_a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{1024, 1024, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 1024, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_plus_shared" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "incept_d_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_cnn1d_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_d_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_cnn1d_branch_main_a", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "incept_d_ramp_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_d_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_cnn1d_branch_main_a", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_plus_shared", "Outputs", "Output"]}]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "incept_d_pool_3" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["KernelSize" -> {3}, "Stride" -> {1}, 
                    "PaddingSize" -> {1}, "Function" -> Max, "Dimensionality" -> 
                    1, "Interleaving" -> False, "$Channels" -> 1024, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "incept_d_25" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["incept_d_bnl_shared" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 512, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_ramp_shared" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_cnn1d_branch_main" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> NeuralNetworks`TensorT[{1024, 
                    512, 25}, NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {25}, 
                    "Stride" -> {1}, "PaddingSize" -> {12}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_ramp_branch_main" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_cnn1d_branch_main_a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{1024, 1024, 25}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {25}, 
                    "Stride" -> {1}, "PaddingSize" -> {12}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 1024, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_cnn1d_branch_1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{1024, 512, 1}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1}, 
                    "Stride" -> {1}, "PaddingSize" -> {0}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_plus_shared" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "incept_d_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_cnn1d_branch_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_cnn1d_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_d_cnn1d_branch_main_a", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "incept_d_ramp_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_d_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_cnn1d_branch_main_a", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_d_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_cnn1d_branch_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_plus_shared", "Outputs", "Output"]}], 
                    "2" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["incept_d_bnl_shared" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{1024}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{1024}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 1024, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_ramp_shared" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_cnn1d_branch_main" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{1024, 1024, 25}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {25}, 
                    "Stride" -> {1}, "PaddingSize" -> {12}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 1024, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_bnl_main" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{1024}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{1024}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 1024, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_ramp_branch_main" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_cnn1d_branch_main_a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{1024, 1024, 25}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {25}, 
                    "Stride" -> {1}, "PaddingSize" -> {12}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 1024, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_plus_shared" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "incept_d_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_cnn1d_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_d_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_cnn1d_branch_main_a", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "incept_d_ramp_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_d_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_cnn1d_branch_main_a", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_plus_shared", "Outputs", "Output"]}], 
                    "3" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["incept_d_bnl_shared" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{1024}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{1024}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 1024, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_ramp_shared" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_cnn1d_branch_main" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{1024, 1024, 25}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {25}, 
                    "Stride" -> {1}, "PaddingSize" -> {12}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 1024, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_bnl_main" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{1024}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{1024}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 1024, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_ramp_branch_main" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_cnn1d_branch_main_a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{1024, 1024, 25}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {25}, 
                    "Stride" -> {1}, "PaddingSize" -> {12}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 1024, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_plus_shared" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "incept_d_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_cnn1d_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_d_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_cnn1d_branch_main_a", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "incept_d_ramp_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_d_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_cnn1d_branch_main_a", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_plus_shared", "Outputs", "Output"]}]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "incept_d_pool_25" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["KernelSize" -> {25}, "Stride" -> {1}, 
                    "PaddingSize" -> {12}, "Function" -> Max, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$Channels" -> 1024, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "incept_d_75" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["incept_d_bnl_shared" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 512, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_ramp_shared" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_cnn1d_branch_main" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{1024, 512, 75}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {75}, 
                    "Stride" -> {1}, "PaddingSize" -> {37}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_ramp_branch_main" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_cnn1d_branch_main_a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{1024, 1024, 75}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {75}, 
                    "Stride" -> {1}, "PaddingSize" -> {37}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 1024, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_cnn1d_branch_1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{1024, 512, 1}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1}, 
                    "Stride" -> {1}, "PaddingSize" -> {0}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    512, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_plus_shared" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "incept_d_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_cnn1d_branch_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_cnn1d_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_d_cnn1d_branch_main_a", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "incept_d_ramp_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_d_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_cnn1d_branch_main_a", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_d_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_cnn1d_branch_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_plus_shared", "Outputs", "Output"]}], 
                    "2" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["incept_d_bnl_shared" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{1024}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{1024}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 1024, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_ramp_shared" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_cnn1d_branch_main" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{1024, 1024, 75}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {75}, 
                    "Stride" -> {1}, "PaddingSize" -> {37}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 1024, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_bnl_main" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{1024}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{1024}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 1024, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_ramp_branch_main" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_cnn1d_branch_main_a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{1024, 1024, 75}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {75}, 
                    "Stride" -> {1}, "PaddingSize" -> {37}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 1024, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_plus_shared" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "incept_d_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_cnn1d_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_d_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_cnn1d_branch_main_a", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "incept_d_ramp_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_d_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_cnn1d_branch_main_a", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_plus_shared", "Outputs", "Output"]}], 
                    "3" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["incept_d_bnl_shared" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{1024}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{1024}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 1024, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_ramp_shared" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_cnn1d_branch_main" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{1024, 1024, 75}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {75}, 
                    "Stride" -> {1}, "PaddingSize" -> {37}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 1024, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_bnl_main" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> NeuralNetworks`TensorT[{1024}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT], 
                    "MovingMean" -> NeuralNetworks`TensorT[{1024}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 1024, 
                    "$SpatialDimensions" -> {NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_ramp_branch_main" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_cnn1d_branch_main_a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{1024, 1024, 75}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {75}, 
                    "Stride" -> {1}, "PaddingSize" -> {37}, "Dilation" -> {1},
                     "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 1024, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "incept_d_plus_shared" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "incept_d_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_cnn1d_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_d_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_cnn1d_branch_main_a", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "incept_d_ramp_branch_main", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "incept_d_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_cnn1d_branch_main_a", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_plus_shared", "Outputs", "Output"]}]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "incept_d_pool_75" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["KernelSize" -> {75}, "Stride" -> {1}, 
                    "PaddingSize" -> {37}, "Function" -> Max, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$Channels" -> 1024, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]], "incept_d_thread" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{1024, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT], "3" -> 
                    NeuralNetworks`TensorT[{1024, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_batch_norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_25", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_batch_norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_batch_norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_75", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_batch_norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_pool_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_thread", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_pool_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_pool_25", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_25", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_thread", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_pool_25", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_pool_75", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_75", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_thread", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_pool_75", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "incept_d_thread", "Outputs", "Output"]}], 
                    "ramp_4" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "dsc2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{256, 1024, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 1024, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{
                    1024, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "drmp2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "dsc4" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 256, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{
                    256, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    64, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "drmp4" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, NeuralNetworks`SizeT}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{
                    64, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    64, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], 
                    "pcnn" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{3, 64, 3}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{3}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 3, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {NeuralNetworks`SizeT}, "$OutputSize" -> 
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{
                    64, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    3, NeuralNetworks`SizeT}, NeuralNetworks`RealT]]], "trsp" -> 
                    Association[
                    "Type" -> "Transpose", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    TwoWayRule[1, 2]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{
                    3, NeuralNetworks`SizeT}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`SizeT, 3}, NeuralNetworks`RealT]]], "sfmx" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`SizeT, 3}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`SizeT, 3}, NeuralNetworks`RealT]]]]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"matrix\"", "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    "\"\[DottedSquare]\"", "\"3\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    ImageSizeCache -> {
                    331., {136.4169921875, 141.5830078125}}, 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.73987339125738*^9, 3.7398733951053333`*^9}, 
   3.739873439840664*^9, 3.739873482653055*^9, 3.739873677905299*^9, 
   3.7398737619830523`*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"73747b7d-5412-49fb-98f0-b9a82ed6f2a6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Net Crafting by hand", "Chapter",
 CellChangeTimes->{{3.739873158329555*^9, 
  3.739873163450742*^9}},ExpressionUUID->"103ce676-bc56-4475-9539-\
373707f2c667"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"<|", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<cnn\>\"", "\[Rule]", 
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"64", ",", 
        RowBox[{"{", "3", "}"}], ",", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", 
         RowBox[{"{", "1", "}"}]}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<pol\>\"", "\[Rule]", 
      RowBox[{"PoolingLayer", "[", 
       RowBox[{
        RowBox[{"{", "3", "}"}], ",", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", 
         RowBox[{"{", "1", "}"}]}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<cnn1a\>\"", "\[Rule]", 
      RowBox[{"AdemxappResidualCNN1DBlock", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"64", ",", "Automatic"}], "}"}], ",", " ", "\"\<1a\>\"", ",",
         " ", "True", ",", "3", ",", "1"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<cnn1b\>\"", "\[Rule]", 
      RowBox[{"AdemxappResidualCNN1DBlock", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"64", ",", "Automatic"}], "}"}], ",", " ", "\"\<1b\>\"", ",",
         " ", "True", ",", "25", ",", "12"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<cnn1c\>\"", "\[Rule]", 
      RowBox[{"AdemxappResidualCNN1DBlock", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"64", ",", "Automatic"}], "}"}], ",", " ", "\"\<1c\>\"", ",",
         " ", "True", ",", "75", ",", "37"}], "]"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"\"\<cnn1a1\>\"", "\[Rule]", " ", 
      RowBox[{"AdemxappResidualCNN1DBlock", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"128", ",", " ", "Automatic"}], "}"}], ",", " ", 
        "\"\<1a1\>\"", ",", " ", "False", ",", "3", ",", "1"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<cnn1b1\>\"", "\[Rule]", " ", 
      RowBox[{"AdemxappResidualCNN1DBlock", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"128", ",", " ", "Automatic"}], "}"}], ",", " ", 
        "\"\<1b1\>\"", ",", " ", "False", ",", "25", ",", "12"}], "]"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<cnn1c1\>\"", "\[Rule]", " ", 
      RowBox[{"AdemxappResidualCNN1DBlock", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"128", ",", " ", "Automatic"}], "}"}], ",", " ", 
        "\"\<1c1\>\"", ",", " ", "False", ",", "75", ",", "37"}], "]"}]}], 
     ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"\"\<cnn1a2\>\"", "\[Rule]", " ", 
      RowBox[{"AdemxappResidualCNN1DBlock", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"128", ",", " ", "Automatic"}], "}"}], ",", " ", 
        "\"\<1a2\>\"", ",", " ", "False", ",", "3", ",", "1"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<cnn1b2\>\"", "\[Rule]", " ", 
      RowBox[{"AdemxappResidualCNN1DBlock", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"128", ",", " ", "Automatic"}], "}"}], ",", " ", 
        "\"\<1b2\>\"", ",", " ", "False", ",", "25", ",", "12"}], "]"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<cnn1c2\>\"", "\[Rule]", " ", 
      RowBox[{"AdemxappResidualCNN1DBlock", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"128", ",", " ", "Automatic"}], "}"}], ",", " ", 
        "\"\<1c2\>\"", ",", " ", "False", ",", "75", ",", "37"}], "]"}]}], 
     ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"\"\<pol1a\>\"", "\[Rule]", 
      RowBox[{"PoolingLayer", "[", 
       RowBox[{
        RowBox[{"{", "3", "}"}], ",", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", 
         RowBox[{"{", "1", "}"}]}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<pol1b\>\"", "\[Rule]", 
      RowBox[{"PoolingLayer", "[", 
       RowBox[{
        RowBox[{"{", "25", "}"}], ",", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", 
         RowBox[{"{", "12", "}"}]}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<pol1c\>\"", "\[Rule]", 
      RowBox[{"PoolingLayer", "[", 
       RowBox[{
        RowBox[{"{", "75", "}"}], ",", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", 
         RowBox[{"{", "37", "}"}]}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"\"\<trd1\>\"", "\[Rule]", 
      RowBox[{"ThreadingLayer", "[", "Plus", "]"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"\"\<rmp1\>\"", "\[Rule]", "Ramp"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"\"\<bnl1\>\"", "\[Rule]", 
      RowBox[{"BatchNormalizationLayer", "[", "]"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"\"\<cnn2a\>\"", "\[Rule]", 
      RowBox[{"AdemxappResidualCNN1DBlock", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"128", ",", "Automatic"}], "}"}], ",", " ", "\"\<2a\>\"", 
        ",", " ", "True", ",", "3", ",", "1"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<cnn2b\>\"", "\[Rule]", 
      RowBox[{"AdemxappResidualCNN1DBlock", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"128", ",", "Automatic"}], "}"}], ",", " ", "\"\<2b\>\"", 
        ",", " ", "True", ",", "25", ",", "12"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<cnn2c\>\"", "\[Rule]", 
      RowBox[{"AdemxappResidualCNN1DBlock", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"128", ",", "Automatic"}], "}"}], ",", " ", "\"\<2c\>\"", 
        ",", " ", "True", ",", "75", ",", "37"}], "]"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"\"\<cnn2a1\>\"", "\[Rule]", 
      RowBox[{"AdemxappResidualCNN1DBlock", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"256", ",", "Automatic"}], "}"}], ",", " ", "\"\<2a1\>\"", 
        ",", " ", "False", ",", "3", ",", "1"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<cnn2b1\>\"", "\[Rule]", 
      RowBox[{"AdemxappResidualCNN1DBlock", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"256", ",", "Automatic"}], "}"}], ",", " ", "\"\<2b1\>\"", 
        ",", " ", "False", ",", "25", ",", "12"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<cnn2c1\>\"", "\[Rule]", 
      RowBox[{"AdemxappResidualCNN1DBlock", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"256", ",", "Automatic"}], "}"}], ",", " ", "\"\<2c1\>\"", 
        ",", " ", "False", ",", "75", ",", "37"}], "]"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"\"\<cnn2a2\>\"", "\[Rule]", 
      RowBox[{"AdemxappResidualCNN1DBlock", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"256", ",", "Automatic"}], "}"}], ",", " ", "\"\<2a2\>\"", 
        ",", " ", "False", ",", "3", ",", "1"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<cnn2b2\>\"", "\[Rule]", 
      RowBox[{"AdemxappResidualCNN1DBlock", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"256", ",", "Automatic"}], "}"}], ",", " ", "\"\<2b2\>\"", 
        ",", " ", "False", ",", "25", ",", "12"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<cnn2c2\>\"", "\[Rule]", 
      RowBox[{"AdemxappResidualCNN1DBlock", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"256", ",", "Automatic"}], "}"}], ",", " ", "\"\<2c2\>\"", 
        ",", " ", "False", ",", "75", ",", "37"}], "]"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<pol2a\>\"", "\[Rule]", 
      RowBox[{"PoolingLayer", "[", 
       RowBox[{
        RowBox[{"{", "3", "}"}], ",", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", 
         RowBox[{"{", "1", "}"}]}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<pol2b\>\"", "\[Rule]", 
      RowBox[{"PoolingLayer", "[", 
       RowBox[{
        RowBox[{"{", "25", "}"}], ",", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", 
         RowBox[{"{", "12", "}"}]}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<pol2c\>\"", "\[Rule]", 
      RowBox[{"PoolingLayer", "[", 
       RowBox[{
        RowBox[{"{", "75", "}"}], ",", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", 
         RowBox[{"{", "37", "}"}]}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<trd2\>\"", "\[Rule]", 
      RowBox[{"ThreadingLayer", "[", "Plus", "]"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"\"\<rmp2\>\"", "\[Rule]", "Ramp"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"\"\<bnl2\>\"", "\[Rule]", 
      RowBox[{"BatchNormalizationLayer", "[", "]"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"\"\<cnn3a\>\"", "\[Rule]", 
      RowBox[{"AdemxappResidualCNN1DBlock", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"256", ",", "Automatic"}], "}"}], ",", " ", "\"\<3a\>\"", 
        ",", " ", "True", ",", "3", ",", "1"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<cnn3b\>\"", "\[Rule]", 
      RowBox[{"AdemxappResidualCNN1DBlock", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"256", ",", "Automatic"}], "}"}], ",", " ", "\"\<3b\>\"", 
        ",", " ", "True", ",", "25", ",", "12"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<cnn3c\>\"", "\[Rule]", 
      RowBox[{"AdemxappResidualCNN1DBlock", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"256", ",", "Automatic"}], "}"}], ",", " ", "\"\<3c\>\"", 
        ",", " ", "True", ",", "75", ",", "37"}], "]"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"\"\<cnn3a1\>\"", "\[Rule]", 
      RowBox[{"AdemxappResidualCNN1DBlock", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"512", ",", "Automatic"}], "}"}], ",", " ", "\"\<3a1\>\"", 
        ",", " ", "False", ",", "3", ",", "1"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<cnn3b1\>\"", "\[Rule]", 
      RowBox[{"AdemxappResidualCNN1DBlock", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"512", ",", "Automatic"}], "}"}], ",", " ", "\"\<3b1\>\"", 
        ",", " ", "False", ",", "25", ",", "12"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<cnn3c1\>\"", "\[Rule]", 
      RowBox[{"AdemxappResidualCNN1DBlock", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"512", ",", "Automatic"}], "}"}], ",", " ", "\"\<3c1\>\"", 
        ",", " ", "False", ",", "75", ",", "37"}], "]"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"\"\<cnn3a2\>\"", "\[Rule]", 
      RowBox[{"AdemxappResidualCNN1DBlock", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"512", ",", "Automatic"}], "}"}], ",", " ", "\"\<3a2\>\"", 
        ",", " ", "False", ",", "3", ",", "1"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<cnn3b2\>\"", "\[Rule]", 
      RowBox[{"AdemxappResidualCNN1DBlock", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"512", ",", "Automatic"}], "}"}], ",", " ", "\"\<3b2\>\"", 
        ",", " ", "False", ",", "25", ",", "12"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<cnn3c2\>\"", "\[Rule]", 
      RowBox[{"AdemxappResidualCNN1DBlock", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"512", ",", "Automatic"}], "}"}], ",", " ", "\"\<3c2\>\"", 
        ",", " ", "False", ",", "75", ",", "37"}], "]"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"\"\<pol3a\>\"", "\[Rule]", 
      RowBox[{"PoolingLayer", "[", 
       RowBox[{
        RowBox[{"{", "3", "}"}], ",", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", 
         RowBox[{"{", "1", "}"}]}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<pol3b\>\"", "\[Rule]", 
      RowBox[{"PoolingLayer", "[", 
       RowBox[{
        RowBox[{"{", "25", "}"}], ",", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", 
         RowBox[{"{", "12", "}"}]}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<pol3c\>\"", "\[Rule]", 
      RowBox[{"PoolingLayer", "[", 
       RowBox[{
        RowBox[{"{", "75", "}"}], ",", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", 
         RowBox[{"{", "37", "}"}]}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<trd3\>\"", "\[Rule]", 
      RowBox[{"ThreadingLayer", "[", "Plus", "]"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"\"\<rmp3\>\"", "\[Rule]", "Ramp"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"\"\<bnl3\>\"", "\[Rule]", 
      RowBox[{"BatchNormalizationLayer", "[", "]"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"\"\<dsc1\>\"", "\[Rule]", 
        RowBox[{"ConvolutionLayer", "[", 
         RowBox[{"512", ",", 
          RowBox[{"{", "3", "}"}], ",", 
          RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", 
           RowBox[{"{", "1", "}"}]}]}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<rmp4\>\"", "\[Rule]", "Ramp"}], ","}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<dsc2\>\"", "\[Rule]", 
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"256", ",", 
        RowBox[{"{", "3", "}"}], ",", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", 
         RowBox[{"{", "1", "}"}]}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<drmp2\>\"", "\[Rule]", "Ramp"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"\"\<dsc3\>\"", "\[Rule]", 
        RowBox[{"ConvolutionLayer", "[", 
         RowBox[{"128", ",", 
          RowBox[{"{", "3", "}"}], ",", 
          RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", 
           RowBox[{"{", "1", "}"}]}]}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<rmp4\>\"", "\[Rule]", "Ramp"}], ","}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<dsc4\>\"", "\[Rule]", 
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"64", ",", 
        RowBox[{"{", "3", "}"}], ",", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", 
         RowBox[{"{", "1", "}"}]}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<drmp4\>\"", "\[Rule]", "Ramp"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"\"\<dsc5\>\"", "\[Rule]", 
        RowBox[{"ConvolutionLayer", "[", 
         RowBox[{"32", ",", 
          RowBox[{"{", "3", "}"}], ",", 
          RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", 
           RowBox[{"{", "1", "}"}]}]}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<rmp5\>\"", "\[Rule]", "Ramp"}], ","}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<pcnn\>\"", "\[Rule]", 
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"3", ",", 
        RowBox[{"{", "3", "}"}], ",", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", 
         RowBox[{"{", "1", "}"}]}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<trsp\>\"", "\[Rule]", 
      RowBox[{"TransposeLayer", "[", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<sfmx\>\"", "\[Rule]", 
      RowBox[{"SoftmaxLayer", "[", "]"}]}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "|>"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
      RowBox[{"\"\<cnn\>\"", "\[Rule]", "\"\<pol\>\""}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<pol\>\"", "\[Rule]", 
      RowBox[{"\"\<cnn1a\>\"", "\[Rule]", " ", 
       RowBox[{"\"\<cnn1a1\>\"", "\[Rule]", " ", 
        RowBox[{"\"\<cnn1a2\>\"", "\[Rule]", 
         RowBox[{"\"\<pol1a\>\"", "\[Rule]", 
          RowBox[{"\"\<trd1\>\"", "\[Rule]", 
           RowBox[{"\"\<rmp1\>\"", "\[Rule]", "\"\<bnl1\>\""}]}]}]}]}]}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<pol\>\"", "\[Rule]", 
      RowBox[{"\"\<cnn1b\>\"", "\[Rule]", " ", 
       RowBox[{"\"\<cnn1b1\>\"", "\[Rule]", " ", 
        RowBox[{"\"\<cnn1b2\>\"", "\[Rule]", 
         RowBox[{"\"\<pol1b\>\"", "\[Rule]", "\"\<trd1\>\""}]}]}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<pol\>\"", "\[Rule]", 
      RowBox[{"\"\<cnn1c\>\"", "\[Rule]", " ", 
       RowBox[{"\"\<cnn1c1\>\"", "\[Rule]", " ", 
        RowBox[{"\"\<cnn1c2\>\"", "\[Rule]", 
         RowBox[{"\"\<pol1c\>\"", "\[Rule]", "\"\<trd1\>\""}]}]}]}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"\"\<bnl1\>\"", "\[Rule]", 
      RowBox[{"\"\<cnn2a\>\"", "\[Rule]", " ", 
       RowBox[{"\"\<cnn2a1\>\"", "\[Rule]", " ", 
        RowBox[{"\"\<cnn2a2\>\"", "\[Rule]", 
         RowBox[{"\"\<pol2a\>\"", "\[Rule]", 
          RowBox[{"\"\<trd2\>\"", "\[Rule]", 
           RowBox[{"\"\<rmp2\>\"", "\[Rule]", "\"\<bnl2\>\""}]}]}]}]}]}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<bnl1\>\"", "\[Rule]", 
      RowBox[{"\"\<cnn2b\>\"", "\[Rule]", " ", 
       RowBox[{"\"\<cnn2b1\>\"", "\[Rule]", " ", 
        RowBox[{"\"\<cnn2b2\>\"", "\[Rule]", 
         RowBox[{"\"\<pol2b\>\"", "\[Rule]", "\"\<trd2\>\""}]}]}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<bnl1\>\"", "\[Rule]", 
      RowBox[{"\"\<cnn2c\>\"", "\[Rule]", " ", 
       RowBox[{"\"\<cnn2c1\>\"", "\[Rule]", " ", 
        RowBox[{"\"\<cnn2c2\>\"", "\[Rule]", 
         RowBox[{"\"\<pol2c\>\"", "\[Rule]", "\"\<trd2\>\""}]}]}]}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"\"\<bnl2\>\"", "\[Rule]", 
      RowBox[{"\"\<cnn3a\>\"", "\[Rule]", " ", 
       RowBox[{"\"\<cnn3a1\>\"", "\[Rule]", " ", 
        RowBox[{"\"\<cnn3a2\>\"", "\[Rule]", 
         RowBox[{"\"\<pol3a\>\"", "\[Rule]", "\"\<trd3\>\""}]}]}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<bnl2\>\"", "\[Rule]", 
      RowBox[{"\"\<cnn3b\>\"", "\[Rule]", " ", 
       RowBox[{"\"\<cnn3b1\>\"", "\[Rule]", " ", 
        RowBox[{"\"\<cnn3b2\>\"", "\[Rule]", 
         RowBox[{"\"\<pol3b\>\"", "\[Rule]", "\"\<trd3\>\""}]}]}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<bnl2\>\"", "\[Rule]", 
      RowBox[{"\"\<cnn3c\>\"", "\[Rule]", " ", 
       RowBox[{"\"\<cnn3c1\>\"", "\[Rule]", " ", 
        RowBox[{"\"\<cnn3c2\>\"", "\[Rule]", 
         RowBox[{"\"\<pol3c\>\"", "\[Rule]", 
          RowBox[{"\"\<trd3\>\"", "\[Rule]", 
           RowBox[{"\"\<rmp3\>\"", "\[Rule]", "\"\<bnl3\>\""}]}]}]}]}]}]}], 
     ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"\"\<bnl3\>\"", "\[Rule]", 
      RowBox[{"\"\<dsc2\>\"", "\[Rule]", "\"\<drmp2\>\""}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<drmp2\>\"", "\[Rule]", " ", 
      RowBox[{"\"\<dsc4\>\"", "\[Rule]", " ", "\"\<drmp4\>\""}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"\"\<drmp4\>\"", "\[Rule]", 
      RowBox[{"\"\<pcnn\>\"", "\[Rule]", 
       RowBox[{"\"\<trsp\>\"", "->", "\"\<sfmx\>\""}]}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{",", " ", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
        "\"\<trd1\>\""}]}], "*)"}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<cnn1a\>\"", "\[Rule]", "\"\<trd1\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<cnn1b\>\"", "\[Rule]", "\"\<trd1\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<cnn1c\>\"", "\[Rule]", "\"\<trd1\>\""}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"\"\<cnn2a\>\"", "\[Rule]", "\"\<trd2\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<cnn2b\>\"", "\[Rule]", "\"\<trd2\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<cnn2c\>\"", "\[Rule]", "\"\<trd2\>\""}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"\"\<cnn3a\>\"", "\[Rule]", "\"\<trd3\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<cnn3b\>\"", "\[Rule]", "\"\<trd3\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<cnn3c\>\"", "\[Rule]", "\"\<trd3\>\""}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"\"\<Input\>\"", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"4", ",", "300"}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.739828005240139*^9, 3.7398280072654343`*^9}, {
   3.7398280705144453`*^9, 3.739828650788512*^9}, {3.739828683681946*^9, 
   3.739829182246265*^9}, 3.73982922001402*^9, {3.7398292619861*^9, 
   3.739829337850456*^9}, {3.739853816914153*^9, 3.739853828831712*^9}, {
   3.739853886554614*^9, 3.739854033926403*^9}, {3.7398540707856092`*^9, 
   3.7398540712151957`*^9}, {3.7398541037378283`*^9, 3.739854298856452*^9}, {
   3.739866643064232*^9, 3.739866754512793*^9}, {3.739866785327636*^9, 
   3.739866828486652*^9}, {3.7398668696669893`*^9, 3.739866966263479*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"add34e33-007c-49a3-94f2-f8fa8efb180d"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = True}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.0149], {
                   GrayLevel[0.6], 
                   Thickness[0.03], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                    18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                   
                   JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                    49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                   
                   JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                    18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                   FaceForm[
                    GrayLevel[0.9]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                   FaceForm[
                    GrayLevel[0.6]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}, {
                   FaceForm[
                    GrayLevel[0.9]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                   FaceForm[
                    GrayLevel[0.6]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}, {
                   FaceForm[
                    GrayLevel[0.9]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                   FaceForm[
                    GrayLevel[0.6]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}, {
                   FaceForm[
                    GrayLevel[0.9]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    45.5, 40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 
                    33.5}}}]}, {
                   FaceForm[
                    GrayLevel[0.6]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {
                    45., 33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 
                    40.}, {52., 40.}}}]}}, BaseStyle -> GrayLevel[0.6], 
                 ImageMargins -> 0, ImageSize -> {36, Automatic}, 
                 PlotRangePadding -> 0], 
                StyleBox[
                "uninitialized", LineColor -> RGBColor[0.66, 0, 0], 
                 FrontFaceColor -> RGBColor[0.66, 0, 0], BackFaceColor -> 
                 RGBColor[0.66, 0, 0], GraphicsColor -> RGBColor[0.66, 0, 0], 
                 FontFamily -> "Roboto", FontSize -> 8, FontColor -> 
                 RGBColor[0.66, 0, 0], Background -> GrayLevel[1, 0.65]]}, 
               Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"4\"", "\"300\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"300\"", "\"3\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["54", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.0149], {
                   GrayLevel[0.6], 
                   Thickness[0.03], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                    18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                   
                   JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                    49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                   
                   JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                    18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                   FaceForm[
                    GrayLevel[0.9]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                   FaceForm[
                    GrayLevel[0.6]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}, {
                   FaceForm[
                    GrayLevel[0.9]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                   FaceForm[
                    GrayLevel[0.6]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}, {
                   FaceForm[
                    GrayLevel[0.9]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                   FaceForm[
                    GrayLevel[0.6]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}, {
                   FaceForm[
                    GrayLevel[0.9]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    45.5, 40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 
                    33.5}}}]}, {
                   FaceForm[
                    GrayLevel[0.6]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {
                    45., 33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 
                    40.}, {52., 40.}}}]}}, BaseStyle -> GrayLevel[0.6], 
                 ImageMargins -> 0, ImageSize -> {36, Automatic}, 
                 PlotRangePadding -> 0], 
                StyleBox[
                "uninitialized", LineColor -> RGBColor[0.66, 0, 0], 
                 FrontFaceColor -> RGBColor[0.66, 0, 0], BackFaceColor -> 
                 RGBColor[0.66, 0, 0], GraphicsColor -> RGBColor[0.66, 0, 0], 
                 FontFamily -> "Roboto", FontSize -> 8, FontColor -> 
                 RGBColor[0.66, 0, 0], Background -> GrayLevel[1, 0.65]]}, 
               Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    PaneBox[
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], 
                    
                    LineBox[{{-31., 
                    1.8982025386783976`*^-15}, {-30., \
-1.4436391420446515`*^-11}}], 
                    
                    LineBox[{{-30., -1.4436391420446515`*^-11}, {-29., \
-3.478639660495574*^-11}}], 
                    
                    LineBox[{{-29., -3.478639660495574*^-11}, {-28., \
-1.4969973982130096`}}], 
                    
                    LineBox[{{-29., -3.478639660495574*^-11}, {-28., \
-4.8286769816737604`*^-11}}], 
                    
                    LineBox[{{-29., -3.478639660495574*^-11}, {-28., 
                    1.5030026034292536`}}], 
                    
                    LineBox[{{-28., -1.4969973982130096`}, {-27., \
-2.4969973979582374`}}], 
                    LineBox[CompressedData["
1:eJxN0m1IU1EYwPFt4T7kqGHO8CVNram1zdSyc+8ZVCiLhaabZo5ladQyTaUa
NnSQVBQWKFHQyyB7WelKY1RqUnAespoRJM5RGtTIkZURVs7NmYPc2Zf7cA6X
34eH8/9wk/c3aA8KeDyeYvGGvuFRwpwOXXg84yc/Yp+ZgjMY3qZvpo7JWFLU
P4mh5cMm6jPysVPyMQwxho3UG9LY6MohDOdd2dRJdAGDOyWLunjeWjRvxSDR
ZFLDaE+g6iKGdfvk1MbbefyzZgzJheupDXQwzMVlUAdC60UYZNvTqNs8aPFg
2FIspU5NCQ0GeW7YfZWRiweDby7sHR1edYeXhetX06k/fwoNC/GS8HvHEhxH
ExwsmOoV1EK9PUJvZ+GRNZvTw4IsPp/Tw0L+NjWnh4VWeyH1GtrDQqBaw+lh
4XJNKaeHAX1vGaeHgZ3qck4PA0ekOk4PA/0FOk4PAypbeH9vzuzJrGIG2l2i
3xEeP1m9atgqwQzsUmQlBu1+Ykv1uqLSGLjSNyi5VuEnC6oD4oxoBkrqXr4f
/+4jK88l7S4XMNCmzakiWh9Z8Ky13fyDIM8g7lVbZklXxQmhYAKBsUvvNL3w
kkTvigbzKIKUWMlAwdAM2dP5b2L5awQFT5WHX3X/JXd9SdWWewiUdsfPnhvT
pLFOYDndioDfOV/r10yRd5F3mofqEXwrjSo5dPwreTjCX1pThuDXwLJbQcEX
EkMSVdVbEUi73Q+M/I8kwhXIHJQheKKt9bDjTmIWX3I0xSMQDreMWOLekCbj
lKhdhEB7v3m6r/E5Cf/PCGTu3Emn1kr+A+XoiwA=
                    "]], 
                    
                    LineBox[{{-27., -2.4969973979582374`}, {-26., \
-2.4969973975771307`}}], 
                    
                    LineBox[{{-26., -2.4969973975771307`}, {-25., \
-2.496997397772502}}], 
                    
                    LineBox[{{-25., -2.496997397772502}, {-24., \
-0.039694395639740726`}}], 
                    
                    LineBox[{{-28., -4.8286769816737604`*^-11}, {-27., \
-0.4969973981805521}}], 
                    LineBox[CompressedData["
1:eJwl0n0s1AEYB3DKSboiXdvFVXNqyEvGxu+leuqPEJ0rtaSTrssVk+QqNdoq
6w91Ssu8DHNap7etdsvlbZpn6Jiwy3HE3bkc8tKal8uIXvj57nn27LM9fzx/
PO6S1GjpGhsbG//lXpmr2YekIINqlLd9fBlusvbP0qhNGM9OSS0C9nAu+I3S
KKDc46/9fg1+XRzznJ7GaLVg1FWpBoctKfoQDY01ZdPr7jh/BMWLIv5UJY0+
/n/XB7k3gTWnsHlnOY2Fc8GsMV4r2GmS6jUPaSz3en4jPrMDtMedHEeu0egh
eeYXWfYFYgKy32aIaGwedhwIU3XDqZNua+3CaLQkVYhiXXtB22M9Fh5Io1tF
EldNf4VWNacwbDuNSQUxm09zBiBkOqPH1oHG9v2poYeVBuDLPdk3ZygML1FV
Z04aITvLlX5poLD/nZt0cdwEib0nJE81FN6/pYpqVgxC8wPdPUJFIf92CJVs
b4aLTCjcFOE1WcQ1w4JS+FsppLD7327Gjy3EclEY6sxnvIu/EgoTMnmMq8Qb
lotCn0NbGUcorEcUVhJLz7MZm4wrIbHWYMtYxmtJ47WQePf9r4kV24tULJGK
xJmh74xX7yFxU0clY6dDt/a0C0m8wnHhC1hmGDkxEHWXJPHcbPETXcEgWMpy
dVkeJJYsfK4z9phgIz+/RreRxDy6urGmxQgS4+Qf2TyBkbVxrxIuG2BIm/dc
bCEQZfXJ35r64fFSzuvSTgKnL+nZezv74IK418mzjkBz0Ru5QK6HhCWZ/l8F
gTkscmzfog4mJBaH0EcEyisLY2TlWjjD5h7YkU7gdW5itHS+DarmndOzxQT6
7+TVLfI+wYJnp+r+UQIfzhW0C882gGex8KcLtbwf++Ot7swHAGG+f5A3gYGd
VwPspa/gYJgibWQbgZrFPtEUPxd8s1KqvdkExk2KGgdu5zSs/jOBvoPBo13R
yob/jP9rGw==
                    "]], 
                    
                    LineBox[{{-27., -0.4969973981805521}, {-26., \
-0.4969973987113276}}], 
                    
                    LineBox[{{-26., -0.4969973987113276}, {-25., \
-0.49699739873949356`}}], 
                    
                    LineBox[{{-25., -0.49699739873949356`}, {-24., \
-0.039694395639740726`}}], 
                    
                    LineBox[{{-28., 1.5030026034292536`}, {-27., 
                    1.5030026036688484`}}], 
                    LineBox[CompressedData["
1:eJwl0n1MzHEcB/DrfkUqY60mt8NQ1tPE2s739/td+35HOHchhaUj9GB1WQ+n
1sNCNianhZwi0kzlqZ1c1K2oT5HTA9GZ1K266UGm3ajDyVXq7r33Z5+9/vv8
8VkdnRwWx+VwOOvnZn7bIgTHMyg9xMWMc2PjVLcnWYj0+1JwtNuMU8KrvIQj
LCj9T/AUmr+4q/Nj3OePLGjOfl/2unEKl7wfSDrRwkJzoOS8+8g/rItqJ4tV
LDyjC+Mz/aZxTkaxvqKYhctF0GC8MoMLedtw0GkWfL0SidCFQzxEnxJ1sSzk
PvymVwxyiBNHdDRexIJYL90w1GJHbou/xE5sYuFN9M/ZdCGXHPH9oGtcx0K3
k3pnwz0uCS1zU711Y0GmK11eY0+RxAdVkyu5LOQ/fxpzKJwiatGNcrWRAeHr
3371Vynie7IP8voYyPwRI29rpUjnthTRnVYGCGsRXPxGkdKKSNbymIGiyqas
2RmKHLOGgQ+pdcy6Bfbkb/nuqfLdDOwKbbC6YAjNlYGMmkarPdfMh4GQm81W
1x5xnisDHQtfWS0uM+0oM9Hwy9xq9UD/fGjoSNJaLedrU/laGkIS3li9QFrt
IK2mIWvMZts9NAhkNr/K6fGRh9JQGaNrf26hSN3miBAPIQ0lL03ZuQaKCDVj
byN8aHBX+EtSn1Bkf3+eKtCDBte6bPZSMkUc1Mh435EGpXhQ0sejiEhgztdM
IbgVHJkTVsMlq2RaRbQRgXfF984/iEsu7Kz8WjmEgDl+Naj9kR3JMyjvnutD
0HVjz7s2ZzuyJFRtaK1FUGwyrdiYYMHjWWGrhq8h8FTWS9IC/mB+VPphQwaC
ra4mr0OyCVxq4d2pP4hgvH/zgZ7AcZyyb8uwPBhB2t5zTThnGF+PN3ovCkCw
fenh6VGpHrsK+Mkn+Qh6hxyk7Wu7sOFFZ22XC4JTm3qDxhJqse2fEfgPCka7
w8qb/gPodlVp
                    "]], 
                    
                    LineBox[{{-27., 1.5030026036688484`}, {-26., 
                    1.5030026038355417`}}], 
                    
                    LineBox[{{-26., 1.5030026038355417`}, {-25., 
                    1.5030026048402207`}}], 
                    
                    LineBox[{{-25., 
                    1.5030026048402207`}, {-24., -0.039694395639740726`}}], 
                    
                    LineBox[{{-24., -0.039694395639740726`}, {-23., \
-0.03969439514241772}}], 
                    
                    LineBox[{{-23., -0.03969439514241772}, {-22., \
-0.03969439514045668}}], 
                    
                    LineBox[{{-22., -0.03969439514045668}, {-21., \
-1.5141362306974018`}}], 
                    
                    LineBox[{{-22., -0.03969439514045668}, {-21., \
-0.0396943954014533}}], 
                    
                    LineBox[{{-22., -0.03969439514045668}, {-21., 
                    1.4858637698420138`}}], 
                    
                    LineBox[{{-21., -1.5141362306974018`}, {-20., \
-2.514136230992476}}], 
                    LineBox[CompressedData["
1:eJxN0l9IU1EcwPGlqIEphSutJKslKjrbufdMbL0UppCJG0I5UnRlSUUoNR1l
cw6XWmq2ZVbYVHRSZCRmtRUa5/eSC0tSFuSfspymTR9Mc04tJXf2cn+cw+XD
4Ry+D3fP6fy0s148Hi92fbu/nhFDUdUNx+SBJeLY3nVl9Q+GqdcV1FujvKWW
SQzR/eXUOuFgqXAQQ+JAGbUoQsJXvMfAdF+nDtvmvoDBpddRy1ZapSutGPTS
UmqwPVs+ZcDAW9JSK1sSNpSrMSRVllDn0sGg8NVQ0+tSDDqipq4Zj19fGOwb
PRbsdQ8Gjf0atUXhb1b4Y0hL8ZwfbVpYXyycSSqmHv3mHhY6+j3vXw61Xgq1
shA/4+nxzejwyehg4W+djtPDwoqlhtPDQjr/DqeHhThBHaeHhXsT96nNtIeF
Ank9dTLtYeCzxsjpYcCS3sjpYWDHeBOnh4HV3c2cHgb4X0zUKdLJRSRjwJj8
Kw5HLZGR6lpt8EEGZra83BXqcpHAsDzv4AgGvIR+zY0mF5nyUZWI+Ax8fTj2
tivWRXIPP13I8WJAm5VQqHywSKoHAnKezyFwFMRY3/1wErm5oTfEjiDku/FF
p5+T9M6ejK63IQhsuCuRBCyQseLEMnEPgg/tQZmZc/NENp+7780jBKnHbE7V
5t8kvCcyu/4mgpaKi6rRvmmSvVwpHspD0Ca6Kq90/CSrVbceF55A0Gn4aJhT
jhGeRvQq/xCCouN9RyKHh8m5T8osawyCWlcNf+KJjcRp003qnQgyg7rDhe29
5Lx+RHd7EwK8f3ptrZwQz/+M4MKsYOhfahv5D8PPljs=
                    "]], 
                    
                    LineBox[{{-20., -2.514136230992476}, {-19., \
-2.5141362311150304`}}], 
                    
                    LineBox[{{-19., -2.5141362311150304`}, {-18., \
-2.514136231030931}}], 
                    
                    LineBox[{{-18., -2.514136231030931}, {-17., \
-0.05138387823714548}}], 
                    
                    LineBox[{{-21., -0.0396943954014533}, {-20., \
-0.514136230075478}}], 
                    LineBox[CompressedData["
1:eJwlknlI03EYxk3SRNMKkjRMTQ2PsvY7ZiqDrwnmtZTEvKaxvCus1A6lpYmz
zDwyykhEO5bpkDWaWat0b2xumbl5tJmpW0xZlqZkFrWmNreH5+Xlw8vL+/zx
7kw/HZdlaWFhsddYa90sKoRr/KaH4zii5Brbwx9/kpDa01AWT6kVKX+H8D10
JPz9SquUFV5HhbSHOzQqEvRqwjN0phVRjmJ37aUkLLiyh75HdaJNqbMePAEJ
t3dLKZrFbrQ5YOgltJDQZcu/o6dKEGVOywyrIoE236bbNt6HCkrcHWmFJDDg
UIVsRoGUc9dGOSkkVIUohOx9I0h/eY8D4yAJU5VSec4TJVr5l/dLipFQLMta
tZweRdq0mJoZFxKiDB3RCQNjqLV1QCnaQEKCd5Pg2MlxFKmaldMXCWiOIPbv
6plA8rm2oroJAjyYBap7vZMI/7Z+5KqUAG1ecv2HMjU6L1+dpPIJUOfP5MCi
GmWbRIDj1sCUTCcN0nNijSbAjnfAxLVTgUYTEF4fYWJPjzURIO2mm7iLaWc0
AZVEjImjWpYiW5ZwqF00z9WTa8JhVG/eL3CR5bvIcMikh5rYmsG3YvBxoH4x
3zfnwUFb4mDi58np7P5YHHyiCZ6zMS+7q7zrUhAOt5pfc4NK1WiA9c7A8sTB
q5gbKxFNorqOgMQ+exxUnwxNQsEEeh/2tjf9DwZcseCmM2McVUSURkROYcAh
FJTpZ2PoRSdDw5JjAH6xF5wloyi3Kq1qWYjBunYiW1ihRPV97Mj+Rxhk8ljL
Yv0wmq8+Xu5Sg4GbTVK+T7wCXZHoClfOYbBZBDZ5rn0o6Yxhez4Tg4Yy4s2R
eDHKuMEtOkvHILuFSe2dfYXavH5U2wRjMBh3ys/b+iny9h9M9PfFYDjYXfxg
4T763B4+pnXGwEYnSrrolItGGhO3+G7EIMMNHluxGkXmf8bgxILnmCGGK/oP
5htwNg==
                    "]], 
                    
                    LineBox[{{-20., -0.514136230075478}, {-19., \
-0.5141362303010044}}], 
                    
                    LineBox[{{-19., -0.5141362303010044}, {-18., \
-0.5141362302740606}}], 
                    
                    LineBox[{{-18., -0.5141362302740606}, {-17., \
-0.05138387823714548}}], 
                    
                    LineBox[{{-21., 1.4858637698420138`}, {-20., 
                    1.4858637696042094`}}], 
                    LineBox[CompressedData["
1:eJwl0n0s1HEcB/BzvxGl1DyUslqdSk34PdTZwvcbOdIT1qg8hN2VZJ07S3nY
VSYMqTRJ85C4MhlWHmrn4TMtymOOwnnY0C2thrgiLjp3772/++z1x2f7/vHZ
GSb0FbBZLJad5q1OXQ6CQXKehWXLPArkCyoK5hgoF/Ic7DIW0Lhv+W4nJQOZ
jf0yP/FfdL+9TzDQx8BzsffbrBuLiN81ejW6mQFVepXNeMESCglow+srGJCs
XTByV6pRkjhnSJrDgMvUniDZ8WX0yZSHnG8ywOU673KXryA39OVKL5+BanG+
raiehUdUHqHhngxcVpvc/lioh9uOjPNnuQwExUq9Ay3ZOJ/T09u4hwFThaCg
KImN/Z+YVXSaMZC23Scid4yNF6Tlc9vZDDTzLlW7ORBYwssteTVFg8y3NOFp
FIF/xisgVUHDNVezd5XPCIx4UZ5F72mYMX+ZImohcJz0/GF1JQ22nZFtyiEC
X9SGBiv94HTjCQIvlpzWlIY70xe0zpxw1JQGIjtUa86u1dDw6HeY1rUh6zSl
AW/ia+1VqDpWqKJg+ZvOoyOroUAeK9BabNUqsmqloL5FZ4OAKv2AKo27dNb9
h4JDMt0+pzvml8ibgheBep3FgwTmZnyO2OxEQdNK/4PLDQQuyE+U++2jIL5k
cjAok8BnCYmNwxYKhrxo6a0TBA5vaI0sNqRgbLZurmeejdvbLxRWLZKQkRfz
3uc+Gyfa8cB/ioRhD+FWlgUb31PGdT+eIEGuKpodTtXD0zP/OqIVJEQWbzg1
OcnC5pPJH+pqSZhX1hhZ71Ujb5eeM4PZJHTbz7i2z/xB+XPDooHrJARYd3i0
2M2i5TVlO2oCSeCmPHTY3/wDieMdg4VHSeBsk4cLTb6ihZOpB9bYk7BkWBr1
Jk2Bsm7m3k2wImHFWJDQfK8T4Y2Rkm5jEiSyDd/5514j3T2TEDHNGVSfKmv6
DxNaYDM=
                    "]], 
                    
                    LineBox[{{-20., 1.4858637696042094`}, {-19., 
                    1.485863770143227}}], 
                    
                    LineBox[{{-19., 1.485863770143227}, {-18., 
                    1.48586377021232}}], 
                    LineBox[{{-18., 
                    1.48586377021232}, {-17., -0.05138387823714548}}], 
                    
                    LineBox[{{-17., -0.05138387823714548}, {-16., \
-0.0513838787861677}}], 
                    
                    LineBox[{{-16., -0.0513838787861677}, {-15., \
-0.0513838786796432}}], 
                    
                    LineBox[{{-15., -0.0513838786796432}, {-14., \
-1.5187114847219894`}}], 
                    
                    LineBox[{{-15., -0.0513838786796432}, {-14., \
-0.051383878660572285`}}], 
                    
                    LineBox[{{-15., -0.0513838786796432}, {-14., 
                    1.4812885150881252`}}], 
                    
                    LineBox[{{-14., -1.5187114847219894`}, {-13., \
-2.5187114843412237`}}], 
                    LineBox[CompressedData["
1:eJxN0ntIU3EUwPEhNYNZuRybikXJdne3u0wUbaBkxZA2SnJiSCPRgaEoWiku
xB4moSVYkYlUNh8zLWoY0jSKfqemucwHpgwrbJZOnVqWj+Yjo+3snx3O5fKB
+4Mv99492jx1hg+LxQpzXe67Z2RQ7DefZTi6QoYjC3+vTTEAqp/ovWr2g9w+
BhoKfqDZmtbNmlYGdl+fQ6cnFNBwk4Hoiln0QZn7AAMO3Qy6bkmpX1IyID/u
QF9p1iyaQxkI5U2jpxRlPn6rUmgxT6L7et0jhfepdjQe10thfWgcHdJ91rVS
6OB+R8cr3COFDcEYOucN37VS6JkcRd8+4HCtBHZd/IJ+9dI9Evg7OoKekFeO
yysloGVb0X6mNI4pTQJq50c05vTS0BpgQS9iDw1Pkru8emiQjZnRmKOgIazN
42zsoeFZfye6CnvE0B7R7dUjhjhbj1ePGJTDA2gO9ojByrV6vR8K+E7P9zpk
KNuRX0dBemPjqfqYFXIsPKAqu5CCh0lGec0WV++ZvERTAgXjvv7r5W1OEn76
vipJQkEgWAz5sU7C9r976TCbgvjikaiUxj+kIDfzV6ldBDmxccbo6WVSVOJb
K+gWQTlrY+t2zjIJVuqubjwWgd7CTf7GWSKJXe2Pom6JwFh1ofTpzAIRJ9zQ
xSSKYF/IkefTtfOEV7/zXTBfBB1rTauBNgcJeq29M2QTwmInb3i2ZoJENKXa
M4xCIMv0tbfVNqI9wTUNlgjhn1xVvTBnJS2DRb6Ck0JQNQfrBzL7ySbBvU9R
+4WQWjGRpfgMREedk4UFuZ4/b4nc9sJAPP+zEFIuL3z9kNMQ9x+JlYwS
                    
                    "]], 
                    
                    LineBox[{{-13., -2.5187114843412237`}, {-12., \
-2.5187114840805114`}}], 
                    
                    LineBox[{{-12., -2.5187114840805114`}, {-11., \
-2.5187114846038687`}}], 
                    
                    LineBox[{{-11., -2.5187114846038687`}, {-10., 
                    0.03598630043529799}}], 
                    
                    LineBox[{{-14., -0.051383878660572285`}, {-13., \
-0.5187114850758682}}], 
                    LineBox[CompressedData["
1:eJwl0nlI0wEUB/DZOlZmI5JZaaKw+xeWhWlZe1jztlhSISZmcyrmlVqkGWXM
ytusJTlFM6+wZipm1rS9YaKzOcg8mpsj2/AkEy3zj67168v38fj89/54ruKU
0Jg1FArFzTr/9v/sxhx6n/HniSbVRV34cvM0gWJJvJbdIVdVdj2sF2gJlD2w
bPTmSSB74BXjuYJAR3Nr3GpeDTivdvtRCgnMt5OeK+puhQzfeo99cQTWZhw/
+ytfCfltKWYhEJiwo3JbA6MHzsAukZc9gfZVNZOHh/rBOK/I2jzFx4Cglw7H
VnXg1Okaq27n4/qShfCIt0Mwt9ibFFTIxxHDksgmeAQWI/dnekfzsbxCabp3
awz2rrmQKzvIR5EuYO3WS3qoG4+vOE3n40q6XJ3FMEDozL626xYe3i1sYXxI
NMIBoldLf8VD5+0FVIcrE3Cq1mWeVsTDKgY/19/DBE9EvnYXonhIzy2qkzSa
QEuGi417tGHJgyZYDqz+FljNxczBYdJOfanWcvFQwjhpIRkuTtEmSCeoGYlq
BhevNRhJywSz9wWzHKQI9aS7lP/CweTJIdIWr2KzVzEH+69rSNt2RFnLwS1O
3aQHyXvYqH99h/QjafjCzWo2ElRORc4zE2gUkdTGNDaO1bCj+wJNEBSstz3s
Z3XZ7ZYD9RPgHDGwwWcnG90++0mH3hgh5JP7jxcLLDRI4wzyMgPoxujj8h4W
fsqa6SzZPQ4NRyUtXx+y8NCAxrE1+yOMuuy52p7Mwi/Jtmv/3BuFs2kXPWeF
LPwer0jNjB4GM8s/ccmehd9K3RWUzvfgI76qX5pmonNev8ODJB2kczbdmOtm
Yim1wLFZpYErl1ci9GVMFNxvigmJ7YXQEEhXpTGR48VZSTmvht9PLerKk0yU
WWzk7mIlZMumAlL3M1EkTRkuamqH0XW+tCPbmUgrd/Oc9VTA/39mYlj2kuld
4mP4CxuCbGc=
                    "]], 
                    
                    LineBox[{{-13., -0.5187114850758682}, {-12., \
-0.5187114838329868}}], 
                    
                    LineBox[{{-12., -0.5187114838329868}, {-11., \
-0.518711485864997}}], 
                    
                    LineBox[{{-11., -0.518711485864997}, {-10., 
                    0.03598630043529799}}], 
                    
                    LineBox[{{-14., 1.4812885150881252`}, {-13., 
                    1.4812885158103777`}}], 
                    LineBox[CompressedData["
1:eJwl0nsslXEYB/Djfa2amltDVKeL9xznvOeEzHQifr9cVodqUcnlIMU0d7WE
SO6kIUkpC2WEXAqxpfW4z6UlyiWX2nKZLiyM4x7v+e559uzzx7M9fzwHLgfY
eRIsFkt3ozenLEKQnyAznSsX0O6WdonphAAC6YrywFApsn7qYBPSLoCdzpYm
WW6LKCmyqKOiSAB/QkD01XMJDVx7PzweKwBpDPWSureMjG9kRGlJBGAcHpiU
0L2CSuN1a2z0BPDaPX9oVbSG9AuTb4et0eBqCHkJH9ZRc29JX0EbDfuX3H1V
K1nYRy21oSuNhpKuPvDOlMPdg41towE0VMj7p60qEbijJa8w4jQNQhW9EfNb
BD7Xy5M85dOwZ16r2LifwF4KjhOm8jREVh6eG+WSePsVA7HnMB/sxdfrjnuR
GP+oilKp5sOLmu+EbRaJiegfaebJfPBYC25VfU/i8yerg6VufMjae1QhoZvE
nUx4QAQLOkoHSDwrzpkT5/BA8f4hxntagzaKB35aeowtmfBgn6o+Y596dd96
dR4cDJE5w2zygdmkDtw8JXPdu83oADtVtj8qSvkpStGBXViX8fa3lzZKBzzc
hIw/MvdwoaFVm/HZ1HTRUC4X2HX+EtsuEt8dMhMqh3ChSOmC8rEqEodXfS68
ascFl4becb84Emtr2JSM6XHB7Mvs93ELEsfIlxglKHPBxurVcsE0gR+H/xOf
nuNArBrLuCyRwJ6R7LEjgxyYtJx+sqJI4MkdBttONHMgrCeUnR4th7U5wsqw
Nxwwqs9p8v/JwvMq1kuxPhywstXUqHVaQevPDBVNaA44tNVLYlwWkGnn76ns
KQryf4mc0KcZVJ4VkF1cS8EZ71V2v9tfZL8V1D0SKWi05S6qro8hA7VhlzYX
Ci5qDMS5SkeQeWNL0DcRBVv0c6WOZT0oXiXC7pEmBQaDFg/1cROS/TMFDndm
Rjp8n6P/EeFaCw==
                    "]], 
                    
                    LineBox[{{-13., 1.4812885158103777`}, {-12., 
                    1.481288516016236}}], 
                    
                    LineBox[{{-12., 1.481288516016236}, {-11., 
                    1.4812885158052616`}}], 
                    
                    LineBox[{{-11., 1.4812885158052616`}, {-10., 
                    0.03598630043529799}}], 
                    
                    LineBox[{{-10., 0.03598630043529799}, {-9., 
                    0.035986300893285354`}}], 
                    
                    LineBox[{{-9., 0.035986300893285354`}, {-8., 
                    0.03598630094296645}}], 
                    
                    LineBox[{{-8., 0.03598630094296645}, {-7., 
                    0.035986300984518924`}}], 
                    
                    LineBox[{{-7., 0.035986300984518924`}, {-6., 
                    0.035986301016692236`}}], 
                    
                    LineBox[{{-6., 0.035986301016692236`}, {-5., 
                    0.03598630104059483}}], 
                    
                    LineBox[{{-5., 0.03598630104059483}, {-4., 
                    0.03598630105727831}}], 
                    
                    LineBox[{{-4., 0.03598630105727831}, {-3., 
                    0.03598630106844798}}], 
                    
                    LineBox[{{-3., 0.03598630106844798}, {-2., 
                    0.035986301075752306`}}], 
                    
                    LineBox[{{-2., 0.035986301075752306`}, {-1., 
                    0.035986301080100765`}}], 
                    
                    LineBox[{{-1., 0.035986301080100765`}, {
                    2.2035254216632553`*^-18, 0.03598630108203338}}]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-30.4, \
-8.661075571252438*^-12}, {-0.25, 0}, 
                    Offset[8], {1., -1.4438289622985194`*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"4\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"4", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-29.4, \
-2.664639453115205*^-11}, {-0.25, 0}, 
                    Offset[8], {1., -2.0350005184509223`*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"64", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-28.400000000000002`, \
-0.8981984389417202}, {-0.25, 0}, 
                    Offset[8], {1., -1.4969973981782232`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"64", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-28.400000000000002`, \
-4.288662053202486*^-11}, {-0.25, 0}, 
                    Offset[8], {1., -1.3500373211781864`*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"64", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-28.400000000000002`,
                     0.9018015620436376}, {-0.25, 0}, 
                    Offset[8], {1., 1.50300260346404}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"64", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-27.4, -2.096997398060146}, \
{-0.25, 0}, 
                    Offset[8], {1., -0.9999999997452278}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-26.31111111111111, \
-1.4969973984537917`}, {-0.25, 0}, 
                    Offset[8], {
                    0.17777777777777715`, -1.394575566138201*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-26.4, -2.496997397729573}, \
{-0.25, 0}, 
                    Offset[8], {1., 3.8110670175228734`*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-25.4, -2.4969973976943534`}, \
{-0.25, 0}, 
                    Offset[8], {1., -1.95371274713807*^-10}], 
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-24.448973997042668`, \
-1.142959546452231}, {-0.25, 0}, 
                    Offset[8], {1., 2.457303002132761}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-27.4, -0.29819843892764597`}, \
{-0.25, 0}, 
                    Offset[8], {1., -0.49699739813226534`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-26.22222222222222, 
                    0.5030026047115146}, {-0.25, 0}, 
                    Offset[8], {0.1777777777777665, -6.924771867033996*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-26.4, -0.4969973984990174}, \
{-0.25, 0}, 
                    Offset[8], {1., -5.307754791239461*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-25.4, -0.4969973987282271}, \
{-0.25, 0}, 
                    Offset[8], {1., -2.8165969556681603`*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-24.4, -0.22261559687964186`}, \
{-0.25, 0}, 
                    Offset[8], {1., 0.4573030030997528}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-27.4, 
                    1.5030026035730106`}, {-0.25, 0}, 
                    Offset[8], {1., 2.3959478845370086`*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-26.31111111111111, 
                    2.503002604326257}, {-0.25, 0}, 
                    Offset[8], {0.17777777777777715`, 
                    2.1119017645787608`*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-26.4, 
                    1.5030026037688644`}, {-0.25, 0}, 
                    Offset[8], {1., 1.666933258093195*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-25.4, 
                    1.503002604438349}, {-0.25, 0}, 
                    Offset[8], {1., 1.0046790066553513`*^-9}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-24.4, 
                    0.5773844045522439}, {-0.25, 0}, 
                    Offset[8], {1., -1.5426970004799614`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-23.4, -0.03969439534134692}, \
{-0.25, 0}, 
                    Offset[8], {1., 4.973230091631642*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-22.4, -0.039694395141241096`}, \
{-0.25, 0}, 
                    Offset[8], {1., 1.9610355006527413`*^-12}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-21.4, -0.9243594964746237}, \
{-0.25, 0}, 
                    Offset[8], {1., -1.474441835556945}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-21.4, -0.03969439529705465}, \
{-0.25, 0}, 
                    Offset[8], {1., -2.6099662014944514`*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-21.4, 
                    0.8756405038490257}, {-0.25, 0}, 
                    Offset[8], {1., 1.5255581649824705`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-20.4, -2.1141362308744465`}, \
{-0.25, 0}, 
                    Offset[8], {1., -1.0000000002950742`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-19.31111111111111, \
-1.5141362308339463`}, {-0.25, 0}, 
                    Offset[8], {
                    0.17777777777777715`, -9.340705986460307*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-19.4, -2.5141362310660087`}, \
{-0.25, 0}, 
                    Offset[8], {1., -1.2255441106390208`*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-18.4, -2.5141362310645707`}, \
{-0.25, 0}, 
                    Offset[8], {1., 8.409939411535561*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-17.449352612161093`, \
-1.1580280810709112`}, {-0.25, 0}, 
                    Offset[8], {1., 2.4627523527937853`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-20.4, -0.3243594962058682}, \
{-0.25, 0}, 
                    Offset[8], {1., -0.47444183467402473`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-19.22222222222222, 
                    0.4858637696860044}, {-0.25, 0}, 
                    Offset[8], {0.1777777777777736, 4.024131028401712*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-19.4, -0.5141362302107939}, \
{-0.25, 0}, 
                    Offset[8], {1., -2.2552637535255826`*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-18.4, -0.5141362302848381}, \
{-0.25, 0}, 
                    Offset[8], {1., 2.6943780540023*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-17.4, -0.23648481905191157`}, \
{-0.25, 0}, 
                    Offset[8], {1., 0.46275235203691517`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-20.4, 
                    1.485863769699331}, {-0.25, 0}, 
                    Offset[8], {1., -2.3780444280419033`*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-19.31111111111111, 
                    2.4858637703524735`}, {-0.25, 0}, 
                    Offset[8], {0.17777777777777715`, 
                    1.0367129377186757`*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-19.4, 
                    1.48586376992762}, {-0.25, 0}, 
                    Offset[8], {1., 5.390174973030071*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-18.4, 
                    1.4858637701846829`}, {-0.25, 0}, 
                    Offset[8], {1., 6.909317562531214*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-17.4, 
                    0.5635151811426408}, {-0.25, 0}, 
                    Offset[8], {1., -1.5372476484494655`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-16.4, -0.05138387856655881}, \
{-0.25, 0}, 
                    Offset[8], {1., -5.490222235171593*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-15.4, -0.051383878722253}, \
{-0.25, 0}, 
                    Offset[8], {1., 1.0652450449510908`*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-14.4, -0.9317804423050509}, \
{-0.25, 0}, 
                    Offset[8], {1., -1.4673276060423461`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-14.4, -0.05138387866820065}, \
{-0.25, 0}, 
                    Offset[8], {1., 1.9070911516649858`*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-14.4, 
                    0.8682195575810179}, {-0.25, 0}, 
                    Offset[8], {1., 1.5326723937677684`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-13.4, -2.11871148449353}, \
{-0.25, 0}, 
                    Offset[8], {1., -0.9999999996192344}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-12.31111111111111, \
-1.5187114841243061`}, {-0.25, 0}, 
                    Offset[8], {0.17777777777777715`, 
                    6.113598516321872*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-12.399999999999999`, \
-2.5187114841847964`}, {-0.25, 0}, 
                    Offset[8], {1., 2.6071234060509596`*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-11.4, -2.518711484394526}, \
{-0.25, 0}, 
                    Offset[8], {1., -5.233573574514594*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-10.455758242477604`, \
-1.1283382721355815`}, {-0.25, 0}, 
                    Offset[8], {1., 2.5546977850391666`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-13.4, -0.3317804425097498}, \
{-0.25, 0}, 
                    Offset[8], {1., -0.4673276064152959}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-12.222222222222221`,
                     0.4812885158204834}, {-0.25, 0}, 
                    Offset[8], {0.17777777777777537`, 
                    2.994832160041483*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-12.399999999999999`, \
-0.5187114843301394}, {-0.25, 0}, 
                    Offset[8], {1., 1.2428813533915672`*^-9}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-11.4, -0.518711485052193}, \
{-0.25, 0}, 
                    Offset[8], {1., -2.032010226749037*^-9}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-10.4, -0.18589281408482003`}, \
{-0.25, 0}, 
                    Offset[8], {1., 0.5546977863002951}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-13.4, 
                    1.4812885155214768`}, {-0.25, 0}, 
                    Offset[8], {1., 7.222524800454266*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-12.31111111111111, 
                    2.4812885163492204`}, {-0.25, 0}, 
                    Offset[8], {0.17777777777777715`, 
                    1.060036503020001*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-12.399999999999999`,
                     1.4812885159338927`}, {-0.25, 0}, 
                    Offset[8], {1., 2.058582193598113*^-10}], 
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-11.4, 
                    1.4812885158896512`}, {-0.25, 0}, 
                    Offset[8], {1., -2.1097434910188895`*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-10.4, 
                    0.6141071865832834}, {-0.25, 0}, 
                    Offset[8], {1., -1.4453022153699635`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-9.399999999999999, 
                    0.03598630071009041}, {-0.25, 0}, 
                    Offset[8], {1., 4.5798736331148504`*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-8.4, 
                    0.03598630092309401}, {-0.25, 0}, 
                    Offset[8], {1., 4.9681092573194974`*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-7.4, 
                    0.035986300967897934`}, {-0.25, 0}, 
                    Offset[8], {1., 4.1552476737205524`*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-6.4, 
                    0.03598630100382291}, {-0.25, 0}, 
                    Offset[8], {1., 3.21733126251722*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-5.4, 
                    0.03598630103103379}, {-0.25, 0}, 
                    Offset[8], {1., 2.3902595180924635`*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-4.4, 
                    0.03598630105060492}, {-0.25, 0}, 
                    Offset[8], {1., 1.6683480985602017`*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"64", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-3.4, 
                    0.03598630106398011}, {-0.25, 0}, 
                    Offset[8], {1., 1.116966935610364*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"64", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-2.4000000000000004`,
                     0.03598630107283057}, {-0.25, 0}, 
                    Offset[8], {1., 7.304323812462599*^-12}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"3\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"3", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.4, 
                    0.03598630107836138}, {-0.25, 0}, 
                    Offset[8], {1., 4.348459092806678*^-12}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"300\"", "\"3\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"300", "3"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-0.4, 
                    0.03598630108126033}, {-0.25, 0}, 
                    Offset[8], {1., 1.9326137912223373`*^-12}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"300\"", "\"3\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"300", "3"}, "\[Cross]"], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], 
                    StyleBox[{
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-31., 1.8982025386783976`*^-15}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-30., -1.4436391420446515`*^-11}], 
                    Offset[{10, 10}, {-30., -1.4436391420446515`*^-11}]]}, 
                    InsetBox[
                    PaneBox[
                    StyleBox[
                    "\"\:2217\"", StripOnInput -> False, FontSize -> 20], 
                    ImageSize -> {11, 
                    28}], {-30., -1.4436391420446515`*^-11}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConvolutionLayer", "[", 
                    RowBox[{"64", ",", 
                    RowBox[{"{", "3", "}"}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", "1", "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn", Bold], 
                    Style[
                    HoldForm[
                    ConvolutionLayer[
                    64, {3}, "PaddingSize" -> {1}, "Input" -> {4, 300}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-29., -3.478639660495574*^-11}], 
                    Offset[{10, 10}, {-29., -3.478639660495574*^-11}]]}, 
                    InsetBox["\"P\"", 
                    Offset[{0, -1}, {-29., -3.478639660495574*^-11}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"pol\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"PoolingLayer", "[", 
                    RowBox[{
                    RowBox[{"{", "3", "}"}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", "1", "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["pol", Bold], 
                    Style[
                    HoldForm[
                    
                    PoolingLayer[{3}, "PaddingSize" -> {1}, 
                    "Input" -> {64, 300}]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-28., -1.4969973982130096`}], 
                    Offset[{12, 12}, {-28., -1.4969973982130096`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, BaseStyle -> GrayLevel[0.4], 
                    ImageMargins -> 0., ImagePadding -> 0, ImageSize -> 15, 
                    PlotRange -> All, PlotRangePadding -> 
                    0], {-28., -1.4969973982130096`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn1a\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn1a", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-28., -4.8286769816737604`*^-11}], 
                    Offset[{12, 12}, {-28., -4.8286769816737604`*^-11}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, BaseStyle -> GrayLevel[0.4], 
                    ImageMargins -> 0., ImagePadding -> 0, ImageSize -> 15, 
                    PlotRange -> All, PlotRangePadding -> 
                    0], {-28., -4.8286769816737604`*^-11}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn1b\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn1b", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-28., 1.5030026034292536`}], 
                    Offset[{12, 12}, {-28., 1.5030026034292536`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, BaseStyle -> GrayLevel[0.4], 
                    ImageMargins -> 0., ImagePadding -> 0, ImageSize -> 15, 
                    PlotRange -> All, PlotRangePadding -> 0], {-28., 
                    1.5030026034292536`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn1c\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn1c", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-27., -2.4969973979582374`}], 
                    Offset[{12, 12}, {-27., -2.4969973979582374`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, BaseStyle -> GrayLevel[0.4], 
                    ImageMargins -> 0., ImagePadding -> 0, ImageSize -> 15, 
                    PlotRange -> All, PlotRangePadding -> 
                    0], {-27., -2.4969973979582374`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn1a1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn1a1", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-24., -0.039694395639740726`}], 
                    Offset[{10, 10}, {-24., -0.039694395639740726`}]]}, 
                    InsetBox[
                    StyleBox[
                    "\"+\"", StripOnInput -> False, FontSize -> 
                    14], {-24., -0.039694395639740726`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"trd1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Plus", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"128", ",", "300"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"128", ",", "300"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"128", ",", "300"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"128", ",", "300"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"128", ",", "300"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"128", ",", "300"}], "}"}]}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["trd1", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[
                    Plus, "Inputs" -> {{128, 300}, {128, 300}, {128, 300}, {
                    128, 300}, {128, 300}, {128, 300}}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-26., -2.4969973975771307`}], 
                    Offset[{12, 12}, {-26., -2.4969973975771307`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, BaseStyle -> GrayLevel[0.4], 
                    ImageMargins -> 0., ImagePadding -> 0, ImageSize -> 15, 
                    PlotRange -> All, PlotRangePadding -> 
                    0], {-26., -2.4969973975771307`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn1a2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn1a2", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-25., -2.496997397772502}], 
                    Offset[{10, 10}, {-25., -2.496997397772502}]]}, 
                    InsetBox["\"P\"", 
                    Offset[{0, -1}, {-25., -2.496997397772502}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"pol1a\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"PoolingLayer", "[", 
                    RowBox[{
                    RowBox[{"{", "3", "}"}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", "1", "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"128", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["pol1a", Bold], 
                    Style[
                    HoldForm[
                    
                    PoolingLayer[{3}, "PaddingSize" -> {1}, 
                    "Input" -> {128, 300}]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 10), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-27., -0.4969973981805521}], 
                    Offset[{12, 12}, {-27., -0.4969973981805521}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, BaseStyle -> GrayLevel[0.4], 
                    ImageMargins -> 0., ImagePadding -> 0, ImageSize -> 15, 
                    PlotRange -> All, PlotRangePadding -> 
                    0], {-27., -0.4969973981805521}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn1b1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn1b1", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 11), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-26., -0.4969973987113276}], 
                    Offset[{12, 12}, {-26., -0.4969973987113276}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, BaseStyle -> GrayLevel[0.4], 
                    ImageMargins -> 0., ImagePadding -> 0, ImageSize -> 15, 
                    PlotRange -> All, PlotRangePadding -> 
                    0], {-26., -0.4969973987113276}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn1b2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn1b2", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 12), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-25., -0.49699739873949356`}], 
                    Offset[{10, 10}, {-25., -0.49699739873949356`}]]}, 
                    InsetBox["\"P\"", 
                    Offset[{0, -1}, {-25., -0.49699739873949356`}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"pol1b\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"PoolingLayer", "[", 
                    RowBox[{
                    RowBox[{"{", "25", "}"}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", "12", "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"128", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["pol1b", Bold], 
                    Style[
                    HoldForm[
                    
                    PoolingLayer[{25}, "PaddingSize" -> {12}, 
                    "Input" -> {128, 300}]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 13), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-27., 1.5030026036688484`}], 
                    Offset[{12, 12}, {-27., 1.5030026036688484`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, BaseStyle -> GrayLevel[0.4], 
                    ImageMargins -> 0., ImagePadding -> 0, ImageSize -> 15, 
                    PlotRange -> All, PlotRangePadding -> 0], {-27., 
                    1.5030026036688484`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn1c1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn1c1", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 14), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-26., 1.5030026038355417`}], 
                    Offset[{12, 12}, {-26., 1.5030026038355417`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, BaseStyle -> GrayLevel[0.4], 
                    ImageMargins -> 0., ImagePadding -> 0, ImageSize -> 15, 
                    PlotRange -> All, PlotRangePadding -> 0], {-26., 
                    1.5030026038355417`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn1c2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn1c2", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 15), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-25., 1.5030026048402207`}], 
                    Offset[{10, 10}, {-25., 1.5030026048402207`}]]}, 
                    InsetBox["\"P\"", 
                    Offset[{0, -1}, {-25., 1.5030026048402207`}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"pol1c\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"PoolingLayer", "[", 
                    RowBox[{
                    RowBox[{"{", "75", "}"}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", "37", "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"128", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["pol1c", Bold], 
                    Style[
                    HoldForm[
                    
                    PoolingLayer[{75}, "PaddingSize" -> {37}, 
                    "Input" -> {128, 300}]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 16), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-23., -0.03969439514241772}], 
                    Offset[{10, 10}, {-23., -0.03969439514241772}]]}, 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzF1s9LG0EUB/CNtpKLtvVmC4q3loooolgqBUUjHnIwNhSiRnZ+iSARkoh4
MeBJCJ7Egyi0Je5MD+JdSr3Yf6A92HMFPVr0YitofOtO7DRaE83s5gtvIXsY
Pnmz83Yb0VSIVRiGkfDDJWTOdMfj5uzQY/gRjiUmxmOUDMSSdJzGO1El3KyD
eg71wNCeoK6FEFqr1rWWEi0+1rbykBDxWcdaedHh81EiMox+ympYKz8l+yjm
C7YNjMc6QHkpyUexmLRtjIhThkRAF0rJvX0YixD07Mz2EWJFdaKU3MvHTKsL
bCeX+4r5rG6Ukjv7oG8vwHbo9E0su4FScicfQvwpPGs/nb6JTcNIVbgFkyna
NzycqYG+fZNn9evY2Hu/mzCZonzhcKoK+vVFntUfGK/Wug2TKcbnY4Rb0naA
0HqD66q/KegjhKdz85eQ9RYvUEpu9THMY7n5S02r1yuUkv/6oG9v7fkLdY4x
H/ESpeRGHzxjb8D1W864Ga9RSq75oG8vwfbLsfGlcqCU/OOLRj88o4Tvyb5t
eDB/C+XKx8Irj+AcfJfnYcej+Vsolz57/oJp25kjfDcSsZ6UGyZj+3ywl0LO
uH02+rG+3CglQfg+WpS2I5gjzaUuCO/BOV31+pW5JW1/4Kz26PjD/YHprK5q
bRnMBvqS501NA2nD2euSC97V87qqoz0i4HvznY6+5XIBTGFFng==
                    
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSize -> 20, ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}], 
                    TraditionalForm], {-23., -0.03969439514241772}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"rmp1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{"Ramp", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"128", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["rmp1", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[Ramp, "Input" -> {128, 300}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 17), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-22., -0.03969439514045668}], 
                    Offset[{10, 10}, {-22., -0.03969439514045668}]]}, 
                    InsetBox["\"BN\"", 
                    Offset[{0, -1}, {-22., -0.03969439514045668}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"bnl1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"BatchNormalizationLayer", "[", 
                    RowBox[{
                    RowBox[{"\"Channels\"", "\[Rule]", "128"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"128", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["bnl1", Bold], 
                    Style[
                    HoldForm[
                    BatchNormalizationLayer[
                    "Channels" -> 128, "Input" -> {128, 300}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 18), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-21., -1.5141362306974018`}], 
                    Offset[{12, 12}, {-21., -1.5141362306974018`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, BaseStyle -> GrayLevel[0.4], 
                    ImageMargins -> 0., ImagePadding -> 0, ImageSize -> 15, 
                    PlotRange -> All, PlotRangePadding -> 
                    0], {-21., -1.5141362306974018`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn2a\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn2a", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 19), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-21., -0.0396943954014533}], 
                    Offset[{12, 12}, {-21., -0.0396943954014533}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, BaseStyle -> GrayLevel[0.4], 
                    ImageMargins -> 0., ImagePadding -> 0, ImageSize -> 15, 
                    PlotRange -> All, PlotRangePadding -> 
                    0], {-21., -0.0396943954014533}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn2b\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn2b", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 20), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-21., 1.4858637698420138`}], 
                    Offset[{12, 12}, {-21., 1.4858637698420138`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, BaseStyle -> GrayLevel[0.4], 
                    ImageMargins -> 0., ImagePadding -> 0, ImageSize -> 15, 
                    PlotRange -> All, PlotRangePadding -> 0], {-21., 
                    1.4858637698420138`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn2c\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn2c", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 21), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-20., -2.514136230992476}], 
                    Offset[{12, 12}, {-20., -2.514136230992476}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, BaseStyle -> GrayLevel[0.4], 
                    ImageMargins -> 0., ImagePadding -> 0, ImageSize -> 15, 
                    PlotRange -> All, PlotRangePadding -> 
                    0], {-20., -2.514136230992476}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn2a1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn2a1", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 22), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-17., -0.05138387823714548}], 
                    Offset[{10, 10}, {-17., -0.05138387823714548}]]}, 
                    InsetBox[
                    StyleBox[
                    "\"+\"", StripOnInput -> False, FontSize -> 
                    14], {-17., -0.05138387823714548}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"trd2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Plus", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"256", ",", "300"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "300"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "300"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "300"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "300"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "300"}], "}"}]}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["trd2", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[
                    Plus, "Inputs" -> {{256, 300}, {256, 300}, {256, 300}, {
                    256, 300}, {256, 300}, {256, 300}}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 23), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-19., -2.5141362311150304`}], 
                    Offset[{12, 12}, {-19., -2.5141362311150304`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, BaseStyle -> GrayLevel[0.4], 
                    ImageMargins -> 0., ImagePadding -> 0, ImageSize -> 15, 
                    PlotRange -> All, PlotRangePadding -> 
                    0], {-19., -2.5141362311150304`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn2a2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn2a2", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 24), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-18., -2.514136231030931}], 
                    Offset[{10, 10}, {-18., -2.514136231030931}]]}, 
                    InsetBox["\"P\"", 
                    Offset[{0, -1}, {-18., -2.514136231030931}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"pol2a\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"PoolingLayer", "[", 
                    RowBox[{
                    RowBox[{"{", "3", "}"}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", "1", "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["pol2a", Bold], 
                    Style[
                    HoldForm[
                    
                    PoolingLayer[{3}, "PaddingSize" -> {1}, 
                    "Input" -> {256, 300}]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 25), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-20., -0.514136230075478}], 
                    Offset[{12, 12}, {-20., -0.514136230075478}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, BaseStyle -> GrayLevel[0.4], 
                    ImageMargins -> 0., ImagePadding -> 0, ImageSize -> 15, 
                    PlotRange -> All, PlotRangePadding -> 
                    0], {-20., -0.514136230075478}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn2b1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn2b1", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 26), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-19., -0.5141362303010044}], 
                    Offset[{12, 12}, {-19., -0.5141362303010044}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 
                    1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, BaseStyle -> GrayLevel[0.4], 
                    ImageMargins -> 0., ImagePadding -> 0, ImageSize -> 15, 
                    PlotRange -> All, PlotRangePadding -> 
                    0], {-19., -0.5141362303010044}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn2b2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn2b2", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 27), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-18., -0.5141362302740606}], 
                    Offset[{10, 10}, {-18., -0.5141362302740606}]]}, 
                    InsetBox["\"P\"", 
                    Offset[{0, -1}, {-18., -0.5141362302740606}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"pol2b\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"PoolingLayer", "[", 
                    RowBox[{
                    RowBox[{"{", "25", "}"}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", "12", "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["pol2b", Bold], 
                    Style[
                    HoldForm[
                    
                    PoolingLayer[{25}, "PaddingSize" -> {12}, 
                    "Input" -> {256, 300}]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 28), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-20., 1.4858637696042094`}], 
                    Offset[{12, 12}, {-20., 1.4858637696042094`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 
                    1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, BaseStyle -> GrayLevel[0.4], 
                    ImageMargins -> 0., ImagePadding -> 0, ImageSize -> 15, 
                    PlotRange -> All, PlotRangePadding -> 0], {-20., 
                    1.4858637696042094`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn2c1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn2c1", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 29), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-19., 1.485863770143227}], 
                    Offset[{12, 12}, {-19., 1.485863770143227}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 
                    1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, BaseStyle -> GrayLevel[0.4], 
                    ImageMargins -> 0., ImagePadding -> 0, ImageSize -> 15, 
                    PlotRange -> All, PlotRangePadding -> 0], {-19., 
                    1.485863770143227}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn2c2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn2c2", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 30), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-18., 1.48586377021232}], 
                    Offset[{10, 10}, {-18., 1.48586377021232}]]}, 
                    InsetBox["\"P\"", 
                    Offset[{0, -1}, {-18., 1.48586377021232}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"pol2c\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"PoolingLayer", "[", 
                    RowBox[{
                    RowBox[{"{", "75", "}"}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", "37", "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["pol2c", Bold], 
                    Style[
                    HoldForm[
                    
                    PoolingLayer[{75}, "PaddingSize" -> {37}, 
                    "Input" -> {256, 300}]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 31), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-16., -0.0513838787861677}], 
                    Offset[{10, 10}, {-16., -0.0513838787861677}]]}, 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzF1s9LG0EUB/CNtpKLtvVmC4q3loooolgqBUUjHnIwNhSiRnZ+iSARkoh4
MeBJCJ7Egyi0Je5MD+JdSr3Yf6A92HMFPVr0YitofOtO7DRaE83s5gtvIXsY
Pnmz83Yb0VSIVRiGkfDDJWTOdMfj5uzQY/gRjiUmxmOUDMSSdJzGO1El3KyD
eg71wNCeoK6FEFqr1rWWEi0+1rbykBDxWcdaedHh81EiMox+ympYKz8l+yjm
C7YNjMc6QHkpyUexmLRtjIhThkRAF0rJvX0YixD07Mz2EWJFdaKU3MvHTKsL
bCeX+4r5rG6Ukjv7oG8vwHbo9E0su4FScicfQvwpPGs/nb6JTcNIVbgFkyna
NzycqYG+fZNn9evY2Hu/mzCZonzhcKoK+vVFntUfGK/Wug2TKcbnY4Rb0naA
0HqD66q/KegjhKdz85eQ9RYvUEpu9THMY7n5S02r1yuUkv/6oG9v7fkLdY4x
H/ESpeRGHzxjb8D1W864Ga9RSq75oG8vwfbLsfGlcqCU/OOLRj88o4Tvyb5t
eDB/C+XKx8Irj+AcfJfnYcej+Vsolz57/oJp25kjfDcSsZ6UGyZj+3ywl0LO
uH02+rG+3CglQfg+WpS2I5gjzaUuCO/BOV31+pW5JW1/4Kz26PjD/YHprK5q
bRnMBvqS501NA2nD2euSC97V87qqoz0i4HvznY6+5XIBTGFFng==
                    
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSize -> 20, ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}], 
                    TraditionalForm], {-16., -0.0513838787861677}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"rmp2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{"Ramp", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["rmp2", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[Ramp, "Input" -> {256, 300}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 32), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-15., -0.0513838786796432}], 
                    Offset[{10, 10}, {-15., -0.0513838786796432}]]}, 
                    InsetBox["\"BN\"", 
                    Offset[{0, -1}, {-15., -0.0513838786796432}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"bnl2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"BatchNormalizationLayer", "[", 
                    RowBox[{
                    RowBox[{"\"Channels\"", "\[Rule]", "256"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["bnl2", Bold], 
                    Style[
                    HoldForm[
                    BatchNormalizationLayer[
                    "Channels" -> 256, "Input" -> {256, 300}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 33), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-14., -1.5187114847219894`}], 
                    Offset[{12, 12}, {-14., -1.5187114847219894`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, BaseStyle -> GrayLevel[0.4], 
                    ImageMargins -> 0., ImagePadding -> 0, ImageSize -> 15, 
                    PlotRange -> All, PlotRangePadding -> 
                    0], {-14., -1.5187114847219894`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn3a\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn3a", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 34), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-14., -0.051383878660572285`}], 
                    Offset[{12, 12}, {-14., -0.051383878660572285`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, BaseStyle -> GrayLevel[0.4], 
                    ImageMargins -> 0., ImagePadding -> 0, ImageSize -> 15, 
                    PlotRange -> All, PlotRangePadding -> 
                    0], {-14., -0.051383878660572285`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn3b\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn3b", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 35), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-14., 1.4812885150881252`}], 
                    Offset[{12, 12}, {-14., 1.4812885150881252`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, BaseStyle -> GrayLevel[0.4], 
                    ImageMargins -> 0., ImagePadding -> 0, ImageSize -> 15, 
                    PlotRange -> All, PlotRangePadding -> 0], {-14., 
                    1.4812885150881252`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn3c\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn3c", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 36), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-13., -2.5187114843412237`}], 
                    Offset[{12, 12}, {-13., -2.5187114843412237`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, BaseStyle -> GrayLevel[0.4], 
                    ImageMargins -> 0., ImagePadding -> 0, ImageSize -> 15, 
                    PlotRange -> All, PlotRangePadding -> 
                    0], {-13., -2.5187114843412237`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn3a1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn3a1", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 37), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-10., 0.03598630043529799}], 
                    Offset[{10, 10}, {-10., 0.03598630043529799}]]}, 
                    InsetBox[
                    StyleBox[
                    "\"+\"", StripOnInput -> False, FontSize -> 14], {-10., 
                    0.03598630043529799}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"trd3\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Plus", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"512", ",", "300"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "300"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "300"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "300"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "300"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "300"}], "}"}]}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["trd3", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[
                    Plus, "Inputs" -> {{512, 300}, {512, 300}, {512, 300}, {
                    512, 300}, {512, 300}, {512, 300}}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 38), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-12., -2.5187114840805114`}], 
                    Offset[{12, 12}, {-12., -2.5187114840805114`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 
                    1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, BaseStyle -> GrayLevel[0.4], 
                    ImageMargins -> 0., ImagePadding -> 0, ImageSize -> 15, 
                    PlotRange -> All, PlotRangePadding -> 
                    0], {-12., -2.5187114840805114`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn3a2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn3a2", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 39), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-11., -2.5187114846038687`}], 
                    Offset[{10, 10}, {-11., -2.5187114846038687`}]]}, 
                    InsetBox["\"P\"", 
                    Offset[{0, -1}, {-11., -2.5187114846038687`}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"pol3a\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"PoolingLayer", "[", 
                    RowBox[{
                    RowBox[{"{", "3", "}"}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", "1", "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["pol3a", Bold], 
                    Style[
                    HoldForm[
                    
                    PoolingLayer[{3}, "PaddingSize" -> {1}, 
                    "Input" -> {512, 300}]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 40), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-13., -0.5187114850758682}], 
                    Offset[{12, 12}, {-13., -0.5187114850758682}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 
                    1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, BaseStyle -> GrayLevel[0.4], 
                    ImageMargins -> 0., ImagePadding -> 0, ImageSize -> 15, 
                    PlotRange -> All, PlotRangePadding -> 
                    0], {-13., -0.5187114850758682}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn3b1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn3b1", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 41), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-12., -0.5187114838329868}], 
                    Offset[{12, 12}, {-12., -0.5187114838329868}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 
                    1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, BaseStyle -> GrayLevel[0.4], 
                    ImageMargins -> 0., ImagePadding -> 0, ImageSize -> 15, 
                    PlotRange -> All, PlotRangePadding -> 
                    0], {-12., -0.5187114838329868}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn3b2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn3b2", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 42), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-11., -0.518711485864997}], 
                    Offset[{10, 10}, {-11., -0.518711485864997}]]}, 
                    InsetBox["\"P\"", 
                    Offset[{0, -1}, {-11., -0.518711485864997}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"pol3b\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"PoolingLayer", "[", 
                    RowBox[{
                    RowBox[{"{", "25", "}"}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", "12", "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["pol3b", Bold], 
                    Style[
                    HoldForm[
                    
                    PoolingLayer[{25}, "PaddingSize" -> {12}, 
                    "Input" -> {512, 300}]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 43), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-13., 1.4812885158103777`}], 
                    Offset[{12, 12}, {-13., 1.4812885158103777`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, BaseStyle -> GrayLevel[0.4], 
                    ImageMargins -> 0., ImagePadding -> 0, ImageSize -> 15, 
                    PlotRange -> All, PlotRangePadding -> 0], {-13., 
                    1.4812885158103777`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn3c1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn3c1", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 44), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-12., 1.481288516016236}], 
                    Offset[{12, 12}, {-12., 1.481288516016236}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, BaseStyle -> GrayLevel[0.4], 
                    ImageMargins -> 0., ImagePadding -> 0, ImageSize -> 15, 
                    PlotRange -> All, PlotRangePadding -> 0], {-12., 
                    1.481288516016236}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn3c2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn3c2", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 45), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-11., 1.4812885158052616`}], 
                    Offset[{10, 10}, {-11., 1.4812885158052616`}]]}, 
                    InsetBox["\"P\"", 
                    Offset[{0, -1}, {-11., 1.4812885158052616`}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"pol3c\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"PoolingLayer", "[", 
                    RowBox[{
                    RowBox[{"{", "75", "}"}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", "37", "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["pol3c", Bold], 
                    Style[
                    HoldForm[
                    
                    PoolingLayer[{75}, "PaddingSize" -> {37}, 
                    "Input" -> {512, 300}]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 46), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-9., 0.035986300893285354`}], 
                    Offset[{10, 10}, {-9., 0.035986300893285354`}]]}, 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzF1s9LG0EUB/CNtpKLtvVmC4q3loooolgqBUUjHnIwNhSiRnZ+iSARkoh4
MeBJCJ7Egyi0Je5MD+JdSr3Yf6A92HMFPVr0YitofOtO7DRaE83s5gtvIXsY
Pnmz83Yb0VSIVRiGkfDDJWTOdMfj5uzQY/gRjiUmxmOUDMSSdJzGO1El3KyD
eg71wNCeoK6FEFqr1rWWEi0+1rbykBDxWcdaedHh81EiMox+ympYKz8l+yjm
C7YNjMc6QHkpyUexmLRtjIhThkRAF0rJvX0YixD07Mz2EWJFdaKU3MvHTKsL
bCeX+4r5rG6Ukjv7oG8vwHbo9E0su4FScicfQvwpPGs/nb6JTcNIVbgFkyna
NzycqYG+fZNn9evY2Hu/mzCZonzhcKoK+vVFntUfGK/Wug2TKcbnY4Rb0naA
0HqD66q/KegjhKdz85eQ9RYvUEpu9THMY7n5S02r1yuUkv/6oG9v7fkLdY4x
H/ESpeRGHzxjb8D1W864Ga9RSq75oG8vwfbLsfGlcqCU/OOLRj88o4Tvyb5t
eDB/C+XKx8Irj+AcfJfnYcej+Vsolz57/oJp25kjfDcSsZ6UGyZj+3ywl0LO
uH02+rG+3CglQfg+WpS2I5gjzaUuCO/BOV31+pW5JW1/4Kz26PjD/YHprK5q
bRnMBvqS501NA2nD2euSC97V87qqoz0i4HvznY6+5XIBTGFFng==
                    
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSize -> 20, ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}], TraditionalForm], {-9., 
                    0.035986300893285354`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"rmp3\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{"Ramp", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["rmp3", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[Ramp, "Input" -> {512, 300}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 47), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-8., 0.03598630094296645}], 
                    Offset[{10, 10}, {-8., 0.03598630094296645}]]}, 
                    InsetBox["\"BN\"", 
                    Offset[{0, -1}, {-8., 0.03598630094296645}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"bnl3\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"BatchNormalizationLayer", "[", 
                    RowBox[{
                    RowBox[{"\"Channels\"", "\[Rule]", "512"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["bnl3", Bold], 
                    Style[
                    HoldForm[
                    BatchNormalizationLayer[
                    "Channels" -> 512, "Input" -> {512, 300}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 48), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-7., 0.035986300984518924`}], 
                    Offset[{10, 10}, {-7., 0.035986300984518924`}]]}, 
                    InsetBox[
                    PaneBox[
                    StyleBox[
                    "\"\:2217\"", StripOnInput -> False, FontSize -> 20], 
                    ImageSize -> {11, 28}], {-7., 0.035986300984518924`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"dsc2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConvolutionLayer", "[", 
                    RowBox[{"256", ",", 
                    RowBox[{"{", "3", "}"}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", "1", "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["dsc2", Bold], 
                    Style[
                    HoldForm[
                    ConvolutionLayer[
                    256, {3}, "PaddingSize" -> {1}, "Input" -> {512, 300}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 49), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-6., 0.035986301016692236`}], 
                    Offset[{10, 10}, {-6., 0.035986301016692236`}]]}, 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzF1s9LG0EUB/CNtpKLtvVmC4q3loooolgqBUUjHnIwNhSiRnZ+iSARkoh4
MeBJCJ7Egyi0Je5MD+JdSr3Yf6A92HMFPVr0YitofOtO7DRaE83s5gtvIXsY
Pnmz83Yb0VSIVRiGkfDDJWTOdMfj5uzQY/gRjiUmxmOUDMSSdJzGO1El3KyD
eg71wNCeoK6FEFqr1rWWEi0+1rbykBDxWcdaedHh81EiMox+ympYKz8l+yjm
C7YNjMc6QHkpyUexmLRtjIhThkRAF0rJvX0YixD07Mz2EWJFdaKU3MvHTKsL
bCeX+4r5rG6Ukjv7oG8vwHbo9E0su4FScicfQvwpPGs/nb6JTcNIVbgFkyna
NzycqYG+fZNn9evY2Hu/mzCZonzhcKoK+vVFntUfGK/Wug2TKcbnY4Rb0naA
0HqD66q/KegjhKdz85eQ9RYvUEpu9THMY7n5S02r1yuUkv/6oG9v7fkLdY4x
H/ESpeRGHzxjb8D1W864Ga9RSq75oG8vwfbLsfGlcqCU/OOLRj88o4Tvyb5t
eDB/C+XKx8Irj+AcfJfnYcej+Vsolz57/oJp25kjfDcSsZ6UGyZj+3ywl0LO
uH02+rG+3CglQfg+WpS2I5gjzaUuCO/BOV31+pW5JW1/4Kz26PjD/YHprK5q
bRnMBvqS501NA2nD2euSC97V87qqoz0i4HvznY6+5XIBTGFFng==
                    
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSize -> 20, ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}], TraditionalForm], {-6., 
                    0.035986301016692236`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"drmp2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{"Ramp", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["drmp2", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[Ramp, "Input" -> {256, 300}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 50), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-5., 0.03598630104059483}], 
                    Offset[{10, 10}, {-5., 0.03598630104059483}]]}, 
                    InsetBox[
                    PaneBox[
                    StyleBox[
                    "\"\:2217\"", StripOnInput -> False, FontSize -> 20], 
                    ImageSize -> {11, 28}], {-5., 0.03598630104059483}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"dsc4\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConvolutionLayer", "[", 
                    RowBox[{"64", ",", 
                    RowBox[{"{", "3", "}"}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", "1", "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["dsc4", Bold], 
                    Style[
                    HoldForm[
                    ConvolutionLayer[
                    64, {3}, "PaddingSize" -> {1}, "Input" -> {256, 300}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 51), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-4., 0.03598630105727831}], 
                    Offset[{10, 10}, {-4., 0.03598630105727831}]]}, 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzF1s9LG0EUB/CNtpKLtvVmC4q3loooolgqBUUjHnIwNhSiRnZ+iSARkoh4
MeBJCJ7Egyi0Je5MD+JdSr3Yf6A92HMFPVr0YitofOtO7DRaE83s5gtvIXsY
Pnmz83Yb0VSIVRiGkfDDJWTOdMfj5uzQY/gRjiUmxmOUDMSSdJzGO1El3KyD
eg71wNCeoK6FEFqr1rWWEi0+1rbykBDxWcdaedHh81EiMox+ympYKz8l+yjm
C7YNjMc6QHkpyUexmLRtjIhThkRAF0rJvX0YixD07Mz2EWJFdaKU3MvHTKsL
bCeX+4r5rG6Ukjv7oG8vwHbo9E0su4FScicfQvwpPGs/nb6JTcNIVbgFkyna
NzycqYG+fZNn9evY2Hu/mzCZonzhcKoK+vVFntUfGK/Wug2TKcbnY4Rb0naA
0HqD66q/KegjhKdz85eQ9RYvUEpu9THMY7n5S02r1yuUkv/6oG9v7fkLdY4x
H/ESpeRGHzxjb8D1W864Ga9RSq75oG8vwfbLsfGlcqCU/OOLRj88o4Tvyb5t
eDB/C+XKx8Irj+AcfJfnYcej+Vsolz57/oJp25kjfDcSsZ6UGyZj+3ywl0LO
uH02+rG+3CglQfg+WpS2I5gjzaUuCO/BOV31+pW5JW1/4Kz26PjD/YHprK5q
bRnMBvqS501NA2nD2euSC97V87qqoz0i4HvznY6+5XIBTGFFng==
                    
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSize -> 20, ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}], TraditionalForm], {-4., 
                    0.03598630105727831}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"drmp4\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{"Ramp", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["drmp4", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[Ramp, "Input" -> {64, 300}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 52), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-3., 0.03598630106844798}], 
                    Offset[{10, 10}, {-3., 0.03598630106844798}]]}, 
                    InsetBox[
                    PaneBox[
                    StyleBox[
                    "\"\:2217\"", StripOnInput -> False, FontSize -> 20], 
                    ImageSize -> {11, 28}], {-3., 0.03598630106844798}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"pcnn\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConvolutionLayer", "[", 
                    RowBox[{"3", ",", 
                    RowBox[{"{", "3", "}"}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", "1", "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["pcnn", Bold], 
                    Style[
                    HoldForm[
                    ConvolutionLayer[
                    3, {3}, "PaddingSize" -> {1}, "Input" -> {64, 300}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 53), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-2., 0.035986301075752306`}], 
                    Offset[{10, 10}, {-2., 0.035986301075752306`}]]}, 
                    InsetBox["\"T\"", 
                    Offset[{0, -1}, {-2., 0.035986301075752306`}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"trsp\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"TransposeLayer", "[", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "300"}], "}"}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["trsp", Bold], 
                    Style[
                    HoldForm[
                    TransposeLayer["Input" -> {3, 300}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 54), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-1., 0.035986301080100765`}], 
                    Offset[{10, 10}, {-1., 0.035986301080100765`}]]}, 
                    InsetBox["\"S\"", 
                    Offset[{0, -1}, {-1., 0.035986301080100765`}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"sfmx\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"SoftmaxLayer", "[", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"300", ",", "3"}], "}"}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["sfmx", Bold], 
                    Style[
                    HoldForm[
                    SoftmaxLayer["Input" -> {300, 3}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 55), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{2.2035254216632553`*^-18, 0.03598630108203338}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 56), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, FontSize -> 10]}, {}, {
                    EdgeForm[{
                    GrayLevel[0.5], 
                    Thickness[Large], 
                    Dashing[{0, Small}]}], 
                    FaceForm[None], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    Part[CompressedData["
1:eJxVz11IU3EYBvCjm18hFSJhImhZa4xpNjfd2aegoIQZrC4Kr1S60IREC8GN
UKxVTEEIAkkwwisvyjAvYqUPiQWJU5ZIprVNh2IY04buTMSPPGfnvB44HH48
7/m/z/9c7T3bnXiGYfSH7/8v/1hx6YM9bisjYOJtwXTceGlk9O0n3mbMOUcS
kD0u2ATutt41HI6MxcxeazN8dn0T8+QO/YPKVM7K24jdu88n5qMy8NZD7Sta
8doGhP8N+HjDSXIW5hPdxEYs2X+oPR6fOL9c05AnmUUwu5nYiCSuguw34Enj
TWIWSa29xMXQWTcDUp8iWELrxDq0uZ6urbCc6HKfKkjzRGffmbNfIsJ5Wpjr
PffDWXKh/xU0hHLnd6sGhflCmPu9JNfgoXuaWIutPrd3qsUvzm+//Emswfbq
HLEWzvwusr8QCew7Yg0ecyPEBWixLvyS+uTDsb+xKFkNR2qofqCSE/3o1Ndj
uXxV9qJ6OHaeCntNf7Q2Raz/Bdxq//d7svG1kCsxag+QXAFLa5hYhaj75GxF
b+w+SkTX6r5LVmCnwE5yFeTPdGS/Ep1vSokVkF2m+XlcfxVYkvrkoNxftSw5
C5aSQeIM6JhN4nSoey4GJZ9GbslV4mRkztQSM0jzNxNvjKU0OY78fr2m7q+t
zMQMtR/5ABseMcI=
                    "], 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 20, 20, 24, 24, 24, 24, 20, 24, 20, 24, 24, 20, 
                    24, 24, 20, 20, 20, 24, 24, 24, 24, 20, 24, 20, 24, 24, 
                    20, 24, 24, 20, 20, 20, 24, 24, 24, 24, 20, 24, 20, 24, 
                    24, 20, 24, 24, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 
                    8}, NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, AspectRatio -> Full, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    ImagePadding -> {{28., 28.}, {28., 18.}}, 
                    ImageSize -> {1141., 221.7599931125544}, PlotRangePadding -> 
                    0], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], ImageSize -> {800, Automatic}, ImageSizeAction -> 
                    "Scrollable", ScrollPosition -> {0., 0.}, 
                    Scrollbars -> {True, False}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "cnn"], 
                    NeuralNetworks`NetPath["Nodes", "pol"], 
                    NeuralNetworks`NetPath["Nodes", "cnn1a"], 
                    NeuralNetworks`NetPath["Nodes", "cnn1b"], 
                    NeuralNetworks`NetPath["Nodes", "cnn1c"], 
                    NeuralNetworks`NetPath["Nodes", "cnn1a1"], 
                    NeuralNetworks`NetPath["Nodes", "trd1"], 
                    NeuralNetworks`NetPath["Nodes", "cnn1a2"], 
                    NeuralNetworks`NetPath["Nodes", "pol1a"], 
                    NeuralNetworks`NetPath["Nodes", "cnn1b1"], 
                    NeuralNetworks`NetPath["Nodes", "cnn1b2"], 
                    NeuralNetworks`NetPath["Nodes", "pol1b"], 
                    NeuralNetworks`NetPath["Nodes", "cnn1c1"], 
                    NeuralNetworks`NetPath["Nodes", "cnn1c2"], 
                    NeuralNetworks`NetPath["Nodes", "pol1c"], 
                    NeuralNetworks`NetPath["Nodes", "rmp1"], 
                    NeuralNetworks`NetPath["Nodes", "bnl1"], 
                    NeuralNetworks`NetPath["Nodes", "cnn2a"], 
                    NeuralNetworks`NetPath["Nodes", "cnn2b"], 
                    NeuralNetworks`NetPath["Nodes", "cnn2c"], 
                    NeuralNetworks`NetPath["Nodes", "cnn2a1"], 
                    NeuralNetworks`NetPath["Nodes", "trd2"], 
                    NeuralNetworks`NetPath["Nodes", "cnn2a2"], 
                    NeuralNetworks`NetPath["Nodes", "pol2a"], 
                    NeuralNetworks`NetPath["Nodes", "cnn2b1"], 
                    NeuralNetworks`NetPath["Nodes", "cnn2b2"], 
                    NeuralNetworks`NetPath["Nodes", "pol2b"], 
                    NeuralNetworks`NetPath["Nodes", "cnn2c1"], 
                    NeuralNetworks`NetPath["Nodes", "cnn2c2"], 
                    NeuralNetworks`NetPath["Nodes", "pol2c"], 
                    NeuralNetworks`NetPath["Nodes", "rmp2"], 
                    NeuralNetworks`NetPath["Nodes", "bnl2"], 
                    NeuralNetworks`NetPath["Nodes", "cnn3a"], 
                    NeuralNetworks`NetPath["Nodes", "cnn3b"], 
                    NeuralNetworks`NetPath["Nodes", "cnn3c"], 
                    NeuralNetworks`NetPath["Nodes", "cnn3a1"], 
                    NeuralNetworks`NetPath["Nodes", "trd3"], 
                    NeuralNetworks`NetPath["Nodes", "cnn3a2"], 
                    NeuralNetworks`NetPath["Nodes", "pol3a"], 
                    NeuralNetworks`NetPath["Nodes", "cnn3b1"], 
                    NeuralNetworks`NetPath["Nodes", "cnn3b2"], 
                    NeuralNetworks`NetPath["Nodes", "pol3b"], 
                    NeuralNetworks`NetPath["Nodes", "cnn3c1"], 
                    NeuralNetworks`NetPath["Nodes", "cnn3c2"], 
                    NeuralNetworks`NetPath["Nodes", "pol3c"], 
                    NeuralNetworks`NetPath["Nodes", "rmp3"], 
                    NeuralNetworks`NetPath["Nodes", "bnl3"], 
                    NeuralNetworks`NetPath["Nodes", "dsc2"], 
                    NeuralNetworks`NetPath["Nodes", "drmp2"], 
                    NeuralNetworks`NetPath["Nodes", "dsc4"], 
                    NeuralNetworks`NetPath["Nodes", "drmp4"], 
                    NeuralNetworks`NetPath["Nodes", "pcnn"], 
                    NeuralNetworks`NetPath["Nodes", "trsp"], 
                    NeuralNetworks`NetPath["Nodes", "sfmx"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4, 300}, NeuralNetworks`RealT]], 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{300, 3}, NeuralNetworks`RealT]], 
                    Association[
                    "cnn" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 4, 3}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 4, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{4, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 300}, 
                    NeuralNetworks`RealT]]], "pol" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3}, "Stride" -> {1}, 
                    "PaddingSize" -> {1}, "Function" -> Max, "Dimensionality" -> 
                    1, "Interleaving" -> False, "$Channels" -> 64, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 300}, 
                    NeuralNetworks`RealT]]], "cnn1a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1a_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 64, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 300}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 300}, 
                    NeuralNetworks`RealT]]], "1a_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 300}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 300}, 
                    NeuralNetworks`RealT]]], "1a_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 64, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 300}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1a_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1a_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1a_cnn1d_branch_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 64, 1}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {1}, 
                    "Stride" -> {1}, "PaddingSize" -> {0}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 300}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1a_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "1a_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a_cnn1d_branch_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a_cnn1d_branch_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a_plus_shared", "Outputs", "Output"]}], 
                    "cnn1a1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1a1_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 128, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1a1_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1a1_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1a1_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 128, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1a1_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1a1_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1a1_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "1a1_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a1_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a1_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a1_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a1_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a1_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a1_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a1_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a1_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a1_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a1_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a1_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a1_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a1_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a1_plus_shared", "Outputs", "Output"]}], 
                    "cnn1a2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1a2_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 128, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1a2_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1a2_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1a2_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 128, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1a2_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1a2_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1a2_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "1a2_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a2_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a2_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a2_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a2_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a2_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a2_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a2_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a2_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a2_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a2_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a2_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a2_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a2_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a2_plus_shared", "Outputs", "Output"]}], 
                    "pol1a" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3}, "Stride" -> {1}, 
                    "PaddingSize" -> {1}, "Function" -> Max, "Dimensionality" -> 
                    1, "Interleaving" -> False, "$Channels" -> 128, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "cnn1b" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1b_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 64, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 300}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 300}, 
                    NeuralNetworks`RealT]]], "1b_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 300}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 300}, 
                    NeuralNetworks`RealT]]], "1b_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 64, 25}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 300}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1b_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1b_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 25}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1b_cnn1d_branch_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 64, 1}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {1}, 
                    "Stride" -> {1}, "PaddingSize" -> {0}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 300}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1b_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "1b_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b_cnn1d_branch_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b_cnn1d_branch_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b_plus_shared", "Outputs", "Output"]}], 
                    "cnn1b1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1b1_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 128, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1b1_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1b1_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 25}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1b1_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 128, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1b1_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1b1_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 25}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1b1_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "1b1_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b1_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b1_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b1_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b1_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b1_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b1_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b1_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b1_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b1_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b1_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b1_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b1_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b1_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b1_plus_shared", "Outputs", "Output"]}], 
                    "cnn1b2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1b2_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 128, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1b2_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1b2_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 25}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1b2_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 128, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1b2_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1b2_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 25}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1b2_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "1b2_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b2_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b2_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b2_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b2_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b2_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b2_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b2_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b2_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b2_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b2_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b2_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b2_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b2_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b2_plus_shared", "Outputs", "Output"]}], 
                    "pol1b" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {25}, "Stride" -> {1}, 
                    "PaddingSize" -> {12}, "Function" -> Max, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$Channels" -> 128, "$InputSize" -> {300}, 
                    "$OutputSize" -> {300}, "$MXPoolingConvention" -> "valid",
                     "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "cnn1c" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1c_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 64, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 300}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 300}, 
                    NeuralNetworks`RealT]]], "1c_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 300}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 300}, 
                    NeuralNetworks`RealT]]], "1c_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 64, 75}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 300}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1c_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1c_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 75}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1c_cnn1d_branch_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 64, 1}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {1}, 
                    "Stride" -> {1}, "PaddingSize" -> {0}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 300}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1c_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "1c_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c_cnn1d_branch_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c_cnn1d_branch_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c_plus_shared", "Outputs", "Output"]}], 
                    "cnn1c1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1c1_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 128, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1c1_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1c1_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 75}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1c1_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 128, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1c1_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1c1_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 75}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1c1_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "1c1_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c1_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c1_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c1_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c1_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c1_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c1_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c1_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c1_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c1_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c1_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c1_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c1_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c1_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c1_plus_shared", "Outputs", "Output"]}], 
                    "cnn1c2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1c2_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 128, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1c2_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1c2_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 75}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1c2_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 128, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1c2_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1c2_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 75}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1c2_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "1c2_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c2_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c2_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c2_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c2_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c2_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c2_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c2_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c2_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c2_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c2_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c2_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c2_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c2_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c2_plus_shared", "Outputs", "Output"]}], 
                    "pol1c" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {75}, "Stride" -> {1}, 
                    "PaddingSize" -> {37}, "Function" -> Max, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$Channels" -> 128, "$InputSize" -> {300}, 
                    "$OutputSize" -> {300}, "$MXPoolingConvention" -> "valid",
                     "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "trd1" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT], 
                    "3" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT], "4" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT], 
                    "5" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT], "6" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "rmp1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "bnl1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 128, "$SpatialDimensions" -> {300}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "cnn2a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "2a_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 128, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "2a_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "2a_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{256, 128, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2a_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2a_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{256, 256, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2a_cnn1d_branch_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{256, 128, 1}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {1}, 
                    "Stride" -> {1}, "PaddingSize" -> {0}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2a_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_cnn1d_branch_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_cnn1d_branch_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_plus_shared", "Outputs", "Output"]}], 
                    "cnn2a1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "2a1_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 256, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2a1_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2a1_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{256, 256, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2a1_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 256, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2a1_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2a1_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{256, 256, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2a1_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "2a1_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a1_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a1_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a1_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a1_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a1_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a1_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a1_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a1_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a1_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a1_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a1_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a1_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a1_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a1_plus_shared", "Outputs", "Output"]}], 
                    "cnn2a2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "2a2_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 256, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2a2_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2a2_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{256, 256, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2a2_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 256, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2a2_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2a2_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{256, 256, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2a2_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "2a2_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a2_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a2_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a2_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a2_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a2_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a2_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a2_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a2_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a2_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a2_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a2_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a2_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a2_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a2_plus_shared", "Outputs", "Output"]}], 
                    "pol2a" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3}, "Stride" -> {1}, 
                    "PaddingSize" -> {1}, "Function" -> Max, "Dimensionality" -> 
                    1, "Interleaving" -> False, "$Channels" -> 256, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "cnn2b" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "2b_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 128, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "2b_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "2b_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{256, 128, 25}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2b_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2b_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{256, 256, 25}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2b_cnn1d_branch_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{256, 128, 1}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {1}, 
                    "Stride" -> {1}, "PaddingSize" -> {0}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2b_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "2b_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b_cnn1d_branch_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b_cnn1d_branch_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b_plus_shared", "Outputs", "Output"]}], 
                    "cnn2b1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "2b1_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 256, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2b1_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2b1_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{256, 256, 25}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2b1_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 256, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2b1_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2b1_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{256, 256, 25}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2b1_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_plus_shared", "Outputs", "Output"]}], 
                    "cnn2b2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "2b2_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 256, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2b2_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2b2_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{256, 256, 25}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2b2_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 256, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2b2_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2b2_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{256, 256, 25}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2b2_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_plus_shared", "Outputs", "Output"]}], 
                    "pol2b" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {25}, "Stride" -> {1}, 
                    "PaddingSize" -> {12}, "Function" -> Max, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$Channels" -> 256, "$InputSize" -> {300}, 
                    "$OutputSize" -> {300}, "$MXPoolingConvention" -> "valid",
                     "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "cnn2c" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "2c_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 128, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "2c_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "2c_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{256, 128, 75}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2c_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2c_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{256, 256, 75}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2c_cnn1d_branch_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{256, 128, 1}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {1}, 
                    "Stride" -> {1}, "PaddingSize" -> {0}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2c_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "2c_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c_cnn1d_branch_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c_cnn1d_branch_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c_plus_shared", "Outputs", "Output"]}], 
                    "cnn2c1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "2c1_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 256, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2c1_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2c1_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{256, 256, 75}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2c1_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 256, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2c1_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2c1_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{256, 256, 75}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2c1_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "2c1_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c1_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c1_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c1_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c1_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c1_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c1_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c1_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c1_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c1_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c1_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c1_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c1_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c1_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c1_plus_shared", "Outputs", "Output"]}], 
                    "cnn2c2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "2c2_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 256, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2c2_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2c2_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{256, 256, 75}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2c2_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 256, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2c2_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2c2_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{256, 256, 75}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2c2_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "2c2_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c2_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c2_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c2_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c2_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c2_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c2_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c2_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c2_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c2_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c2_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c2_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c2_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c2_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c2_plus_shared", "Outputs", "Output"]}], 
                    "pol2c" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {75}, "Stride" -> {1}, 
                    "PaddingSize" -> {37}, "Function" -> Max, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$Channels" -> 256, "$InputSize" -> {300}, 
                    "$OutputSize" -> {300}, "$MXPoolingConvention" -> "valid",
                     "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "trd2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT], 
                    "3" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT], "4" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT], 
                    "5" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT], "6" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "rmp2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "bnl2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 256, "$SpatialDimensions" -> {300}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "cnn3a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "3a_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 256, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "3a_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "3a_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{512, 256, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3a_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3a_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{512, 512, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3a_cnn1d_branch_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{512, 256, 1}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {1}, 
                    "Stride" -> {1}, "PaddingSize" -> {0}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3a_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_cnn1d_branch_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_cnn1d_branch_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_plus_shared", "Outputs", "Output"]}], 
                    "cnn3a1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "3a1_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 512, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3a1_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3a1_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{512, 512, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3a1_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 512, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3a1_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3a1_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{512, 512, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3a1_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "3a1_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a1_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a1_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a1_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a1_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a1_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a1_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a1_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a1_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a1_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a1_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a1_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a1_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a1_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a1_plus_shared", "Outputs", "Output"]}], 
                    "cnn3a2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "3a2_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 512, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3a2_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3a2_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{512, 512, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3a2_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 512, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3a2_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3a2_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{512, 512, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3a2_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "3a2_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a2_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a2_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a2_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a2_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a2_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a2_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a2_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a2_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a2_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a2_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a2_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a2_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a2_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a2_plus_shared", "Outputs", "Output"]}], 
                    "pol3a" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3}, "Stride" -> {1}, 
                    "PaddingSize" -> {1}, "Function" -> Max, "Dimensionality" -> 
                    1, "Interleaving" -> False, "$Channels" -> 512, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "cnn3b" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "3b_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 256, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "3b_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "3b_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{512, 256, 25}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3b_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3b_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{512, 512, 25}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3b_cnn1d_branch_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{512, 256, 1}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {1}, 
                    "Stride" -> {1}, "PaddingSize" -> {0}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3b_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "3b_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b_cnn1d_branch_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b_cnn1d_branch_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b_plus_shared", "Outputs", "Output"]}], 
                    "cnn3b1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "3b1_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 512, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3b1_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3b1_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{512, 512, 25}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3b1_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 512, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3b1_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3b1_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{512, 512, 25}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3b1_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_plus_shared", "Outputs", "Output"]}], 
                    "cnn3b2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "3b2_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 512, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3b2_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3b2_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{512, 512, 25}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3b2_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 512, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3b2_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3b2_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{512, 512, 25}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3b2_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_plus_shared", "Outputs", "Output"]}], 
                    "pol3b" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {25}, "Stride" -> {1}, 
                    "PaddingSize" -> {12}, "Function" -> Max, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$Channels" -> 512, "$InputSize" -> {300}, 
                    "$OutputSize" -> {300}, "$MXPoolingConvention" -> "valid",
                     "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "cnn3c" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "3c_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 256, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "3c_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "3c_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{512, 256, 75}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3c_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3c_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{512, 512, 75}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3c_cnn1d_branch_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{512, 256, 1}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {1}, 
                    "Stride" -> {1}, "PaddingSize" -> {0}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3c_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "3c_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c_cnn1d_branch_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c_cnn1d_branch_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c_plus_shared", "Outputs", "Output"]}], 
                    "cnn3c1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "3c1_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 512, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3c1_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3c1_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{512, 512, 75}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3c1_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 512, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3c1_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3c1_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{512, 512, 75}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3c1_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "3c1_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c1_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c1_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c1_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c1_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c1_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c1_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c1_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c1_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c1_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c1_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c1_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c1_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c1_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c1_plus_shared", "Outputs", "Output"]}], 
                    "cnn3c2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "3c2_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 512, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3c2_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3c2_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{512, 512, 75}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3c2_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "Channels" -> 512, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3c2_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3c2_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{512, 512, 75}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3c2_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "3c2_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c2_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c2_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c2_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c2_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c2_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c2_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c2_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c2_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c2_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c2_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c2_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c2_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c2_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c2_plus_shared", "Outputs", "Output"]}], 
                    "pol3c" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {75}, "Stride" -> {1}, 
                    "PaddingSize" -> {37}, "Function" -> Max, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$Channels" -> 512, "$InputSize" -> {300}, 
                    "$OutputSize" -> {300}, "$MXPoolingConvention" -> "valid",
                     "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "trd3" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT], 
                    "3" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT], "4" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT], 
                    "5" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT], "6" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "rmp3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 300}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "bnl3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT], "Beta" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "Channels" -> 512, "$SpatialDimensions" -> {300}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "dsc2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{256, 512, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "drmp2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "dsc4" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 256, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 300}, 
                    NeuralNetworks`RealT]]], "drmp4" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 300}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 300}, 
                    NeuralNetworks`RealT]]], "pcnn" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{3, 64, 3}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{3}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 3, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{3, 300}, 
                    NeuralNetworks`RealT]]], "trsp" -> 
                    Association[
                    "Type" -> "Transpose", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    TwoWayRule[1, 2]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{3, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{300, 3}, 
                    NeuralNetworks`RealT]]], "sfmx" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{300, 3}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{300, 3}, 
                    NeuralNetworks`RealT]]]]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\"", 
                    "\"300\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"300\"", 
                    "\"3\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    ImageSizeCache -> {308., {13.1669921875, 18.3330078125}}, 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.739828120710384*^9, 3.739828147480126*^9}, 
   3.739828184775599*^9, {3.739828218003378*^9, 3.739828466701281*^9}, {
   3.739828550437887*^9, 3.739828579534445*^9}, {3.739828644852413*^9, 
   3.7398286514399157`*^9}, {3.7398287026424932`*^9, 3.739828705586176*^9}, 
   3.739828816758963*^9, {3.739828858992629*^9, 3.7398288904087143`*^9}, 
   3.739828936913549*^9, {3.7398289812427464`*^9, 3.739829075744931*^9}, 
   3.7398291833207197`*^9, 3.739829221563443*^9, {3.739829280142096*^9, 
   3.739829339403446*^9}, {3.739853821670072*^9, 3.739853829887879*^9}, {
   3.7398539589588013`*^9, 3.739853965229107*^9}, {3.739854016039719*^9, 
   3.739854051555705*^9}, 3.739866895998486*^9, 3.739866938106616*^9, 
   3.739866968150237*^9},
 CellLabel->
  "Out[100]=",ExpressionUUID->"eada5056-2314-456e-b02d-08c350a3bb80"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1280, 687},
WindowMargins->{{0, Automatic}, {Automatic, -1}},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 7, \
2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[583, 22, 158, 3, 69, "Chapter",ExpressionUUID->"b220ef68-2855-4e1e-916e-16f2a6f9138e"],
Cell[CellGroupData[{
Cell[766, 29, 158, 3, 45, "Subsubsection",ExpressionUUID->"df6adf0a-b476-4bfe-9974-38ff4c2ce536"],
Cell[927, 34, 340, 8, 30, "Input",ExpressionUUID->"3de431fe-d481-4b7d-b610-b2d37bf3672a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1304, 47, 158, 3, 67, "Section",ExpressionUUID->"9a908645-aa6a-4267-95af-dffcb2b7f318"],
Cell[1465, 52, 7080, 150, 913, "Input",ExpressionUUID->"ca1dc16c-b68d-466e-b89b-c27b13998b05"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8582, 207, 165, 3, 67, "Section",ExpressionUUID->"4d0a9321-b418-4c19-aa65-042d6da064a8"],
Cell[8750, 212, 1724, 39, 304, "Input",ExpressionUUID->"61f3dd8a-06e6-4f9f-a558-21d836e94f8e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10511, 256, 166, 3, 67, "Section",ExpressionUUID->"10734e6d-c728-4362-a7f7-a325224eae22"],
Cell[10680, 261, 3689, 81, 451, "Input",ExpressionUUID->"bdf80e35-b006-4fbe-85a7-e7f11e12121d"],
Cell[CellGroupData[{
Cell[14394, 346, 422, 9, 30, "Input",ExpressionUUID->"07b9f347-2f4e-437d-b331-da2e5fbe4d12"],
Cell[14819, 357, 154815, 2814, 77, "Output",ExpressionUUID->"b3d3bc66-3c98-42e5-be8b-8461678fdda9"]
}, Open  ]],
Cell[169649, 3174, 174, 3, 30, "Input",ExpressionUUID->"4adf7d40-bdb5-4795-9e52-d7fd6f3fa44e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[169872, 3183, 164, 3, 69, "Chapter",ExpressionUUID->"32756ebb-efd1-4f16-a578-606339eccf54"],
Cell[CellGroupData[{
Cell[170061, 3190, 5106, 113, 577, "Input",ExpressionUUID->"bd54eb3a-029f-4122-b8a5-b0df0f348f83"],
Cell[175170, 3305, 488680, 8243, 368, "Output",ExpressionUUID->"73747b7d-5412-49fb-98f0-b9a82ed6f2a6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[663899, 11554, 165, 3, 69, "Chapter",ExpressionUUID->"103ce676-bc56-4475-9539-373707f2c667"],
Cell[CellGroupData[{
Cell[664089, 11561, 21238, 459, 2782, "Input",ExpressionUUID->"add34e33-007c-49a3-94f2-f8fa8efb180d"],
Cell[685330, 12022, 587845, 11237, 313, "Output",ExpressionUUID->"eada5056-2314-456e-b02d-08c350a3bb80"]
}, Open  ]]
}, Open  ]]
}
]
*)

