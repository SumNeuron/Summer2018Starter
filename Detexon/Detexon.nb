(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='WolframDesktop 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       161,          7]
NotebookDataLength[   1211813,      23045]
NotebookOptionsPosition[   1209969,      23002]
NotebookOutlinePosition[   1210322,      23018]
CellTagsIndexPosition[   1210279,      23015]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Detexon", "Title",
 CellChangeTimes->{{3.7396273985718184`*^9, 
  3.7396273995489264`*^9}},ExpressionUUID->"06c67e32-f6d6-4b78-b84a-\
0c800a6f0bac"],

Cell[BoxData[
 RowBox[{"Quit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.739627428528594*^9, 3.739627430747601*^9}, 
   3.740266610879738*^9},ExpressionUUID->"a0642404-0e51-41e3-a297-\
deb8e1ad2119"],

Cell[CellGroupData[{

Cell["Import Test Data", "Chapter",
 CellChangeTimes->{{3.740266616023779*^9, 
  3.7402666184961576`*^9}},ExpressionUUID->"16c3d95b-fa1e-4328-b30a-\
8bb64f5dff75"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ds", "=", 
   RowBox[{"Import", "@", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<data\>\"", ",", 
       "\"\<test_set.mx\>\""}], "}"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.740266606779746*^9},ExpressionUUID->"5b4d247c-a8b2-4588-a2a0-\
245adf4114cf"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Import Net", "Chapter",
 CellChangeTimes->{{3.740266627158955*^9, 
  3.74026662838659*^9}},ExpressionUUID->"61cd4726-fd48-4cd7-b64d-\
a06f3cc484a4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tNet", "=", 
  RowBox[{
  "Import", "[", 
   "\"\<~/Downloads/latest_ec2/checkpoints_y2018_m7_d6_h13_s2/net.wlnet\>\"", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.73973330604206*^9, 3.739733338112792*^9}, {
  3.739785772953168*^9, 3.7397857785687447`*^9}, {3.7400384825722733`*^9, 
  3.740038484700911*^9}, {3.74003851587189*^9, 3.740038525241416*^9}, {
  3.740038572908124*^9, 3.740038596927033*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"e5cc72fb-c7be-4240-ab26-3a5d05f2298e"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"4\"", "\"300\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"300\"", "\"3\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["54", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    PaneBox[
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], 
                    
                    LineBox[{{-31., 
                    1.8982025386783976`*^-15}, {-30., \
-1.4436391420446515`*^-11}}], 
                    
                    LineBox[{{-30., -1.4436391420446515`*^-11}, {-29., \
-3.478639660495574*^-11}}], 
                    
                    LineBox[{{-29., -3.478639660495574*^-11}, {-28., \
-1.4969973982130096`}}], 
                    
                    LineBox[{{-29., -3.478639660495574*^-11}, {-28., \
-4.8286769816737604`*^-11}}], 
                    
                    LineBox[{{-29., -3.478639660495574*^-11}, {-28., 
                    1.5030026034292536`}}], 
                    
                    LineBox[{{-28., -1.4969973982130096`}, {-27., \
-2.4969973979582374`}}], 
                    LineBox[CompressedData["
1:eJxN0m1IU1EYwPFt4T7kqGHO8CVNram1zdSyc+8ZVCiLhaabZo5ladQyTaUa
NnSQVBQWKFHQyyB7WelKY1RqUnAespoRJM5RGtTIkZURVs7NmYPc2Zf7cA6X
34eH8/9wk/c3aA8KeDyeYvGGvuFRwpwOXXg84yc/Yp+ZgjMY3qZvpo7JWFLU
P4mh5cMm6jPysVPyMQwxho3UG9LY6MohDOdd2dRJdAGDOyWLunjeWjRvxSDR
ZFLDaE+g6iKGdfvk1MbbefyzZgzJheupDXQwzMVlUAdC60UYZNvTqNs8aPFg
2FIspU5NCQ0GeW7YfZWRiweDby7sHR1edYeXhetX06k/fwoNC/GS8HvHEhxH
ExwsmOoV1EK9PUJvZ+GRNZvTw4IsPp/Tw0L+NjWnh4VWeyH1GtrDQqBaw+lh
4XJNKaeHAX1vGaeHgZ3qck4PA0ekOk4PA/0FOk4PAypbeH9vzuzJrGIG2l2i
3xEeP1m9atgqwQzsUmQlBu1+Ykv1uqLSGLjSNyi5VuEnC6oD4oxoBkrqXr4f
/+4jK88l7S4XMNCmzakiWh9Z8Ky13fyDIM8g7lVbZklXxQmhYAKBsUvvNL3w
kkTvigbzKIKUWMlAwdAM2dP5b2L5awQFT5WHX3X/JXd9SdWWewiUdsfPnhvT
pLFOYDndioDfOV/r10yRd5F3mofqEXwrjSo5dPwreTjCX1pThuDXwLJbQcEX
EkMSVdVbEUi73Q+M/I8kwhXIHJQheKKt9bDjTmIWX3I0xSMQDreMWOLekCbj
lKhdhEB7v3m6r/E5Cf/PCGTu3Emn1kr+A+XoiwA=
                    "]], 
                    
                    LineBox[{{-27., -2.4969973979582374`}, {-26., \
-2.4969973975771307`}}], 
                    
                    LineBox[{{-26., -2.4969973975771307`}, {-25., \
-2.496997397772502}}], 
                    
                    LineBox[{{-25., -2.496997397772502}, {-24., \
-0.039694395639740726`}}], 
                    
                    LineBox[{{-28., -4.8286769816737604`*^-11}, {-27., \
-0.4969973981805521}}], 
                    LineBox[CompressedData["
1:eJwl0n0s1AEYB3DKSboiXdvFVXNqyEvGxu+leuqPEJ0rtaSTrssVk+QqNdoq
6w91Ssu8DHNap7etdsvlbZpn6Jiwy3HE3bkc8tKal8uIXvj57nn27LM9fzx/
PO6S1GjpGhsbG//lXpmr2YekIINqlLd9fBlusvbP0qhNGM9OSS0C9nAu+I3S
KKDc46/9fg1+XRzznJ7GaLVg1FWpBoctKfoQDY01ZdPr7jh/BMWLIv5UJY0+
/n/XB7k3gTWnsHlnOY2Fc8GsMV4r2GmS6jUPaSz3en4jPrMDtMedHEeu0egh
eeYXWfYFYgKy32aIaGwedhwIU3XDqZNua+3CaLQkVYhiXXtB22M9Fh5Io1tF
EldNf4VWNacwbDuNSQUxm09zBiBkOqPH1oHG9v2poYeVBuDLPdk3ZygML1FV
Z04aITvLlX5poLD/nZt0cdwEib0nJE81FN6/pYpqVgxC8wPdPUJFIf92CJVs
b4aLTCjcFOE1WcQ1w4JS+FsppLD7327Gjy3EclEY6sxnvIu/EgoTMnmMq8Qb
lotCn0NbGUcorEcUVhJLz7MZm4wrIbHWYMtYxmtJ47WQePf9r4kV24tULJGK
xJmh74xX7yFxU0clY6dDt/a0C0m8wnHhC1hmGDkxEHWXJPHcbPETXcEgWMpy
dVkeJJYsfK4z9phgIz+/RreRxDy6urGmxQgS4+Qf2TyBkbVxrxIuG2BIm/dc
bCEQZfXJ35r64fFSzuvSTgKnL+nZezv74IK418mzjkBz0Ru5QK6HhCWZ/l8F
gTkscmzfog4mJBaH0EcEyisLY2TlWjjD5h7YkU7gdW5itHS+DarmndOzxQT6
7+TVLfI+wYJnp+r+UQIfzhW0C882gGex8KcLtbwf++Ot7swHAGG+f5A3gYGd
VwPspa/gYJgibWQbgZrFPtEUPxd8s1KqvdkExk2KGgdu5zSs/jOBvoPBo13R
yob/jP9rGw==
                    "]], 
                    
                    LineBox[{{-27., -0.4969973981805521}, {-26., \
-0.4969973987113276}}], 
                    
                    LineBox[{{-26., -0.4969973987113276}, {-25., \
-0.49699739873949356`}}], 
                    
                    LineBox[{{-25., -0.49699739873949356`}, {-24., \
-0.039694395639740726`}}], 
                    
                    LineBox[{{-28., 1.5030026034292536`}, {-27., 
                    1.5030026036688484`}}], 
                    LineBox[CompressedData["
1:eJwl0n1MzHEcB/DrfkUqY60mt8NQ1tPE2s739/td+35HOHchhaUj9GB1WQ+n
1sNCNianhZwi0kzlqZ1c1K2oT5HTA9GZ1K266UGm3ajDyVXq7r33Z5+9/vv8
8VkdnRwWx+VwOOvnZn7bIgTHMyg9xMWMc2PjVLcnWYj0+1JwtNuMU8KrvIQj
LCj9T/AUmr+4q/Nj3OePLGjOfl/2unEKl7wfSDrRwkJzoOS8+8g/rItqJ4tV
LDyjC+Mz/aZxTkaxvqKYhctF0GC8MoMLedtw0GkWfL0SidCFQzxEnxJ1sSzk
PvymVwxyiBNHdDRexIJYL90w1GJHbou/xE5sYuFN9M/ZdCGXHPH9oGtcx0K3
k3pnwz0uCS1zU711Y0GmK11eY0+RxAdVkyu5LOQ/fxpzKJwiatGNcrWRAeHr
3371Vynie7IP8voYyPwRI29rpUjnthTRnVYGCGsRXPxGkdKKSNbymIGiyqas
2RmKHLOGgQ+pdcy6Bfbkb/nuqfLdDOwKbbC6YAjNlYGMmkarPdfMh4GQm81W
1x5xnisDHQtfWS0uM+0oM9Hwy9xq9UD/fGjoSNJaLedrU/laGkIS3li9QFrt
IK2mIWvMZts9NAhkNr/K6fGRh9JQGaNrf26hSN3miBAPIQ0lL03ZuQaKCDVj
byN8aHBX+EtSn1Bkf3+eKtCDBte6bPZSMkUc1Mh435EGpXhQ0sejiEhgztdM
IbgVHJkTVsMlq2RaRbQRgXfF984/iEsu7Kz8WjmEgDl+Naj9kR3JMyjvnutD
0HVjz7s2ZzuyJFRtaK1FUGwyrdiYYMHjWWGrhq8h8FTWS9IC/mB+VPphQwaC
ra4mr0OyCVxq4d2pP4hgvH/zgZ7AcZyyb8uwPBhB2t5zTThnGF+PN3ovCkCw
fenh6VGpHrsK+Mkn+Qh6hxyk7Wu7sOFFZ22XC4JTm3qDxhJqse2fEfgPCka7
w8qb/gPodlVp
                    "]], 
                    
                    LineBox[{{-27., 1.5030026036688484`}, {-26., 
                    1.5030026038355417`}}], 
                    
                    LineBox[{{-26., 1.5030026038355417`}, {-25., 
                    1.5030026048402207`}}], 
                    
                    LineBox[{{-25., 
                    1.5030026048402207`}, {-24., -0.039694395639740726`}}], 
                    
                    LineBox[{{-24., -0.039694395639740726`}, {-23., \
-0.03969439514241772}}], 
                    
                    LineBox[{{-23., -0.03969439514241772}, {-22., \
-0.03969439514045668}}], 
                    
                    LineBox[{{-22., -0.03969439514045668}, {-21., \
-1.5141362306974018`}}], 
                    
                    LineBox[{{-22., -0.03969439514045668}, {-21., \
-0.0396943954014533}}], 
                    
                    LineBox[{{-22., -0.03969439514045668}, {-21., 
                    1.4858637698420138`}}], 
                    
                    LineBox[{{-21., -1.5141362306974018`}, {-20., \
-2.514136230992476}}], 
                    LineBox[CompressedData["
1:eJxN0l9IU1EcwPGlqIEphSutJKslKjrbufdMbL0UppCJG0I5UnRlSUUoNR1l
cw6XWmq2ZVbYVHRSZCRmtRUa5/eSC0tSFuSfspymTR9Mc04tJXf2cn+cw+XD
4Ry+D3fP6fy0s148Hi92fbu/nhFDUdUNx+SBJeLY3nVl9Q+GqdcV1FujvKWW
SQzR/eXUOuFgqXAQQ+JAGbUoQsJXvMfAdF+nDtvmvoDBpddRy1ZapSutGPTS
UmqwPVs+ZcDAW9JSK1sSNpSrMSRVllDn0sGg8NVQ0+tSDDqipq4Zj19fGOwb
PRbsdQ8Gjf0atUXhb1b4Y0hL8ZwfbVpYXyycSSqmHv3mHhY6+j3vXw61Xgq1
shA/4+nxzejwyehg4W+djtPDwoqlhtPDQjr/DqeHhThBHaeHhXsT96nNtIeF
Ank9dTLtYeCzxsjpYcCS3sjpYWDHeBOnh4HV3c2cHgb4X0zUKdLJRSRjwJj8
Kw5HLZGR6lpt8EEGZra83BXqcpHAsDzv4AgGvIR+zY0mF5nyUZWI+Ax8fTj2
tivWRXIPP13I8WJAm5VQqHywSKoHAnKezyFwFMRY3/1wErm5oTfEjiDku/FF
p5+T9M6ejK63IQhsuCuRBCyQseLEMnEPgg/tQZmZc/NENp+7780jBKnHbE7V
5t8kvCcyu/4mgpaKi6rRvmmSvVwpHspD0Ca6Kq90/CSrVbceF55A0Gn4aJhT
jhGeRvQq/xCCouN9RyKHh8m5T8osawyCWlcNf+KJjcRp003qnQgyg7rDhe29
5Lx+RHd7EwK8f3ptrZwQz/+M4MKsYOhfahv5D8PPljs=
                    "]], 
                    
                    LineBox[{{-20., -2.514136230992476}, {-19., \
-2.5141362311150304`}}], 
                    
                    LineBox[{{-19., -2.5141362311150304`}, {-18., \
-2.514136231030931}}], 
                    
                    LineBox[{{-18., -2.514136231030931}, {-17., \
-0.05138387823714548}}], 
                    
                    LineBox[{{-21., -0.0396943954014533}, {-20., \
-0.514136230075478}}], 
                    LineBox[CompressedData["
1:eJwlknlI03EYxk3SRNMKkjRMTQ2PsvY7ZiqDrwnmtZTEvKaxvCus1A6lpYmz
zDwyykhEO5bpkDWaWat0b2xumbl5tJmpW0xZlqZkFrWmNreH5+Xlw8vL+/zx
7kw/HZdlaWFhsddYa90sKoRr/KaH4zii5Brbwx9/kpDa01AWT6kVKX+H8D10
JPz9SquUFV5HhbSHOzQqEvRqwjN0phVRjmJ37aUkLLiyh75HdaJNqbMePAEJ
t3dLKZrFbrQ5YOgltJDQZcu/o6dKEGVOywyrIoE236bbNt6HCkrcHWmFJDDg
UIVsRoGUc9dGOSkkVIUohOx9I0h/eY8D4yAJU5VSec4TJVr5l/dLipFQLMta
tZweRdq0mJoZFxKiDB3RCQNjqLV1QCnaQEKCd5Pg2MlxFKmaldMXCWiOIPbv
6plA8rm2oroJAjyYBap7vZMI/7Z+5KqUAG1ecv2HMjU6L1+dpPIJUOfP5MCi
GmWbRIDj1sCUTCcN0nNijSbAjnfAxLVTgUYTEF4fYWJPjzURIO2mm7iLaWc0
AZVEjImjWpYiW5ZwqF00z9WTa8JhVG/eL3CR5bvIcMikh5rYmsG3YvBxoH4x
3zfnwUFb4mDi58np7P5YHHyiCZ6zMS+7q7zrUhAOt5pfc4NK1WiA9c7A8sTB
q5gbKxFNorqOgMQ+exxUnwxNQsEEeh/2tjf9DwZcseCmM2McVUSURkROYcAh
FJTpZ2PoRSdDw5JjAH6xF5wloyi3Kq1qWYjBunYiW1ihRPV97Mj+Rxhk8ljL
Yv0wmq8+Xu5Sg4GbTVK+T7wCXZHoClfOYbBZBDZ5rn0o6Yxhez4Tg4Yy4s2R
eDHKuMEtOkvHILuFSe2dfYXavH5U2wRjMBh3ys/b+iny9h9M9PfFYDjYXfxg
4T763B4+pnXGwEYnSrrolItGGhO3+G7EIMMNHluxGkXmf8bgxILnmCGGK/oP
5htwNg==
                    "]], 
                    
                    LineBox[{{-20., -0.514136230075478}, {-19., \
-0.5141362303010044}}], 
                    
                    LineBox[{{-19., -0.5141362303010044}, {-18., \
-0.5141362302740606}}], 
                    
                    LineBox[{{-18., -0.5141362302740606}, {-17., \
-0.05138387823714548}}], 
                    
                    LineBox[{{-21., 1.4858637698420138`}, {-20., 
                    1.4858637696042094`}}], 
                    LineBox[CompressedData["
1:eJwl0n0s1HEcB/BzvxGl1DyUslqdSk34PdTZwvcbOdIT1qg8hN2VZJ07S3nY
VSYMqTRJ85C4MhlWHmrn4TMtymOOwnnY0C2thrgiLjp3772/++z1x2f7/vHZ
GSb0FbBZLJad5q1OXQ6CQXKehWXLPArkCyoK5hgoF/Ic7DIW0Lhv+W4nJQOZ
jf0yP/FfdL+9TzDQx8BzsffbrBuLiN81ejW6mQFVepXNeMESCglow+srGJCs
XTByV6pRkjhnSJrDgMvUniDZ8WX0yZSHnG8ywOU673KXryA39OVKL5+BanG+
raiehUdUHqHhngxcVpvc/lioh9uOjPNnuQwExUq9Ay3ZOJ/T09u4hwFThaCg
KImN/Z+YVXSaMZC23Scid4yNF6Tlc9vZDDTzLlW7ORBYwssteTVFg8y3NOFp
FIF/xisgVUHDNVezd5XPCIx4UZ5F72mYMX+ZImohcJz0/GF1JQ22nZFtyiEC
X9SGBiv94HTjCQIvlpzWlIY70xe0zpxw1JQGIjtUa86u1dDw6HeY1rUh6zSl
AW/ia+1VqDpWqKJg+ZvOoyOroUAeK9BabNUqsmqloL5FZ4OAKv2AKo27dNb9
h4JDMt0+pzvml8ibgheBep3FgwTmZnyO2OxEQdNK/4PLDQQuyE+U++2jIL5k
cjAok8BnCYmNwxYKhrxo6a0TBA5vaI0sNqRgbLZurmeejdvbLxRWLZKQkRfz
3uc+Gyfa8cB/ioRhD+FWlgUb31PGdT+eIEGuKpodTtXD0zP/OqIVJEQWbzg1
OcnC5pPJH+pqSZhX1hhZ71Ujb5eeM4PZJHTbz7i2z/xB+XPDooHrJARYd3i0
2M2i5TVlO2oCSeCmPHTY3/wDieMdg4VHSeBsk4cLTb6ihZOpB9bYk7BkWBr1
Jk2Bsm7m3k2wImHFWJDQfK8T4Y2Rkm5jEiSyDd/5514j3T2TEDHNGVSfKmv6
DxNaYDM=
                    "]], 
                    
                    LineBox[{{-20., 1.4858637696042094`}, {-19., 
                    1.485863770143227}}], 
                    
                    LineBox[{{-19., 1.485863770143227}, {-18., 
                    1.48586377021232}}], 
                    
                    LineBox[{{-18., 
                    1.48586377021232}, {-17., -0.05138387823714548}}], 
                    
                    LineBox[{{-17., -0.05138387823714548}, {-16., \
-0.0513838787861677}}], 
                    
                    LineBox[{{-16., -0.0513838787861677}, {-15., \
-0.0513838786796432}}], 
                    
                    LineBox[{{-15., -0.0513838786796432}, {-14., \
-1.5187114847219894`}}], 
                    
                    LineBox[{{-15., -0.0513838786796432}, {-14., \
-0.051383878660572285`}}], 
                    
                    LineBox[{{-15., -0.0513838786796432}, {-14., 
                    1.4812885150881252`}}], 
                    
                    LineBox[{{-14., -1.5187114847219894`}, {-13., \
-2.5187114843412237`}}], 
                    LineBox[CompressedData["
1:eJxN0ntIU3EUwPEhNYNZuRybikXJdne3u0wUbaBkxZA2SnJiSCPRgaEoWiku
xB4moSVYkYlUNh8zLWoY0jSKfqemucwHpgwrbJZOnVqWj+Yjo+3snx3O5fKB
+4Mv99492jx1hg+LxQpzXe67Z2RQ7DefZTi6QoYjC3+vTTEAqp/ovWr2g9w+
BhoKfqDZmtbNmlYGdl+fQ6cnFNBwk4Hoiln0QZn7AAMO3Qy6bkmpX1IyID/u
QF9p1iyaQxkI5U2jpxRlPn6rUmgxT6L7et0jhfepdjQe10thfWgcHdJ91rVS
6OB+R8cr3COFDcEYOucN37VS6JkcRd8+4HCtBHZd/IJ+9dI9Evg7OoKekFeO
yysloGVb0X6mNI4pTQJq50c05vTS0BpgQS9iDw1Pkru8emiQjZnRmKOgIazN
42zsoeFZfye6CnvE0B7R7dUjhjhbj1ePGJTDA2gO9ojByrV6vR8K+E7P9zpk
KNuRX0dBemPjqfqYFXIsPKAqu5CCh0lGec0WV++ZvERTAgXjvv7r5W1OEn76
vipJQkEgWAz5sU7C9r976TCbgvjikaiUxj+kIDfzV6ldBDmxccbo6WVSVOJb
K+gWQTlrY+t2zjIJVuqubjwWgd7CTf7GWSKJXe2Pom6JwFh1ofTpzAIRJ9zQ
xSSKYF/IkefTtfOEV7/zXTBfBB1rTauBNgcJeq29M2QTwmInb3i2ZoJENKXa
M4xCIMv0tbfVNqI9wTUNlgjhn1xVvTBnJS2DRb6Ck0JQNQfrBzL7ySbBvU9R
+4WQWjGRpfgMREedk4UFuZ4/b4nc9sJAPP+zEFIuL3z9kNMQ9x+JlYwS
                    
                    "]], 
                    
                    LineBox[{{-13., -2.5187114843412237`}, {-12., \
-2.5187114840805114`}}], 
                    
                    LineBox[{{-12., -2.5187114840805114`}, {-11., \
-2.5187114846038687`}}], 
                    
                    LineBox[{{-11., -2.5187114846038687`}, {-10., 
                    0.03598630043529799}}], 
                    
                    LineBox[{{-14., -0.051383878660572285`}, {-13., \
-0.5187114850758682}}], 
                    LineBox[CompressedData["
1:eJwl0nlI0wEUB/DZOlZmI5JZaaKw+xeWhWlZe1jztlhSISZmcyrmlVqkGWXM
ytusJTlFM6+wZipm1rS9YaKzOcg8mpsj2/AkEy3zj67168v38fj89/54ruKU
0Jg1FArFzTr/9v/sxhx6n/HniSbVRV34cvM0gWJJvJbdIVdVdj2sF2gJlD2w
bPTmSSB74BXjuYJAR3Nr3GpeDTivdvtRCgnMt5OeK+puhQzfeo99cQTWZhw/
+ytfCfltKWYhEJiwo3JbA6MHzsAukZc9gfZVNZOHh/rBOK/I2jzFx4Cglw7H
VnXg1Okaq27n4/qShfCIt0Mwt9ibFFTIxxHDksgmeAQWI/dnekfzsbxCabp3
awz2rrmQKzvIR5EuYO3WS3qoG4+vOE3n40q6XJ3FMEDozL626xYe3i1sYXxI
NMIBoldLf8VD5+0FVIcrE3Cq1mWeVsTDKgY/19/DBE9EvnYXonhIzy2qkzSa
QEuGi417tGHJgyZYDqz+FljNxczBYdJOfanWcvFQwjhpIRkuTtEmSCeoGYlq
BhevNRhJywSz9wWzHKQI9aS7lP/CweTJIdIWr2KzVzEH+69rSNt2RFnLwS1O
3aQHyXvYqH99h/QjafjCzWo2ElRORc4zE2gUkdTGNDaO1bCj+wJNEBSstz3s
Z3XZ7ZYD9RPgHDGwwWcnG90++0mH3hgh5JP7jxcLLDRI4wzyMgPoxujj8h4W
fsqa6SzZPQ4NRyUtXx+y8NCAxrE1+yOMuuy52p7Mwi/Jtmv/3BuFs2kXPWeF
LPwer0jNjB4GM8s/ccmehd9K3RWUzvfgI76qX5pmonNev8ODJB2kczbdmOtm
Yim1wLFZpYErl1ci9GVMFNxvigmJ7YXQEEhXpTGR48VZSTmvht9PLerKk0yU
WWzk7mIlZMumAlL3M1EkTRkuamqH0XW+tCPbmUgrd/Oc9VTA/39mYlj2kuld
4mP4CxuCbGc=
                    "]], 
                    
                    LineBox[{{-13., -0.5187114850758682}, {-12., \
-0.5187114838329868}}], 
                    
                    LineBox[{{-12., -0.5187114838329868}, {-11., \
-0.518711485864997}}], 
                    
                    LineBox[{{-11., -0.518711485864997}, {-10., 
                    0.03598630043529799}}], 
                    
                    LineBox[{{-14., 1.4812885150881252`}, {-13., 
                    1.4812885158103777`}}], 
                    LineBox[CompressedData["
1:eJwl0nsslXEYB/Djfa2amltDVKeL9xznvOeEzHQifr9cVodqUcnlIMU0d7WE
SO6kIUkpC2WEXAqxpfW4z6UlyiWX2nKZLiyM4x7v+e559uzzx7M9fzwHLgfY
eRIsFkt3ozenLEKQnyAznSsX0O6WdonphAAC6YrywFApsn7qYBPSLoCdzpYm
WW6LKCmyqKOiSAB/QkD01XMJDVx7PzweKwBpDPWSureMjG9kRGlJBGAcHpiU
0L2CSuN1a2z0BPDaPX9oVbSG9AuTb4et0eBqCHkJH9ZRc29JX0EbDfuX3H1V
K1nYRy21oSuNhpKuPvDOlMPdg41towE0VMj7p60qEbijJa8w4jQNQhW9EfNb
BD7Xy5M85dOwZ16r2LifwF4KjhOm8jREVh6eG+WSePsVA7HnMB/sxdfrjnuR
GP+oilKp5sOLmu+EbRaJiegfaebJfPBYC25VfU/i8yerg6VufMjae1QhoZvE
nUx4QAQLOkoHSDwrzpkT5/BA8f4hxntagzaKB35aeowtmfBgn6o+Y596dd96
dR4cDJE5w2zygdmkDtw8JXPdu83oADtVtj8qSvkpStGBXViX8fa3lzZKBzzc
hIw/MvdwoaFVm/HZ1HTRUC4X2HX+EtsuEt8dMhMqh3ChSOmC8rEqEodXfS68
ascFl4becb84Emtr2JSM6XHB7Mvs93ELEsfIlxglKHPBxurVcsE0gR+H/xOf
nuNArBrLuCyRwJ6R7LEjgxyYtJx+sqJI4MkdBttONHMgrCeUnR4th7U5wsqw
Nxwwqs9p8v/JwvMq1kuxPhywstXUqHVaQevPDBVNaA44tNVLYlwWkGnn76ns
KQryf4mc0KcZVJ4VkF1cS8EZ71V2v9tfZL8V1D0SKWi05S6qro8hA7VhlzYX
Ci5qDMS5SkeQeWNL0DcRBVv0c6WOZT0oXiXC7pEmBQaDFg/1cROS/TMFDndm
Rjp8n6P/EeFaCw==
                    "]], 
                    
                    LineBox[{{-13., 1.4812885158103777`}, {-12., 
                    1.481288516016236}}], 
                    
                    LineBox[{{-12., 1.481288516016236}, {-11., 
                    1.4812885158052616`}}], 
                    
                    LineBox[{{-11., 1.4812885158052616`}, {-10., 
                    0.03598630043529799}}], 
                    
                    LineBox[{{-10., 0.03598630043529799}, {-9., 
                    0.035986300893285354`}}], 
                    
                    LineBox[{{-9., 0.035986300893285354`}, {-8., 
                    0.03598630094296645}}], 
                    
                    LineBox[{{-8., 0.03598630094296645}, {-7., 
                    0.035986300984518924`}}], 
                    
                    LineBox[{{-7., 0.035986300984518924`}, {-6., 
                    0.035986301016692236`}}], 
                    
                    LineBox[{{-6., 0.035986301016692236`}, {-5., 
                    0.03598630104059483}}], 
                    
                    LineBox[{{-5., 0.03598630104059483}, {-4., 
                    0.03598630105727831}}], 
                    
                    LineBox[{{-4., 0.03598630105727831}, {-3., 
                    0.03598630106844798}}], 
                    
                    LineBox[{{-3., 0.03598630106844798}, {-2., 
                    0.035986301075752306`}}], 
                    
                    LineBox[{{-2., 0.035986301075752306`}, {-1., 
                    0.035986301080100765`}}], 
                    
                    LineBox[{{-1., 0.035986301080100765`}, {
                    2.2035254216632553`*^-18, 0.03598630108203338}}]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-30.4, \
-8.661075571252438*^-12}, {-0.25, 0}, 
                    Offset[8], {1., -1.4438289622985194`*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"4\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"4", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-29.4, \
-2.664639453115205*^-11}, {-0.25, 0}, 
                    Offset[8], {1., -2.0350005184509223`*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"64", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-28.400000000000002`, \
-0.8981984389417202}, {-0.25, 0}, 
                    Offset[8], {1., -1.4969973981782232`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"64", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-28.400000000000002`, \
-4.288662053202486*^-11}, {-0.25, 0}, 
                    Offset[8], {1., -1.3500373211781864`*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"64", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-28.400000000000002`,
                     0.9018015620436376}, {-0.25, 0}, 
                    Offset[8], {1., 1.50300260346404}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"64", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-27.4, -2.096997398060146}, \
{-0.25, 0}, 
                    Offset[8], {1., -0.9999999997452278}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-26.31111111111111, \
-1.4969973984537917`}, {-0.25, 0}, 
                    Offset[8], {
                    0.17777777777777715`, -1.394575566138201*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-26.4, -2.496997397729573}, \
{-0.25, 0}, 
                    Offset[8], {1., 3.8110670175228734`*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-25.4, -2.4969973976943534`}, \
{-0.25, 0}, 
                    Offset[8], {1., -1.95371274713807*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-24.448973997042668`, \
-1.142959546452231}, {-0.25, 0}, 
                    Offset[8], {1., 2.457303002132761}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-27.4, -0.29819843892764597`}, \
{-0.25, 0}, 
                    Offset[8], {1., -0.49699739813226534`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-26.22222222222222, 
                    0.5030026047115146}, {-0.25, 0}, 
                    Offset[8], {0.1777777777777665, -6.924771867033996*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-26.4, -0.4969973984990174}, \
{-0.25, 0}, 
                    Offset[8], {1., -5.307754791239461*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-25.4, -0.4969973987282271}, \
{-0.25, 0}, 
                    Offset[8], {1., -2.8165969556681603`*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-24.4, -0.22261559687964186`}, \
{-0.25, 0}, 
                    Offset[8], {1., 0.4573030030997528}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-27.4, 
                    1.5030026035730106`}, {-0.25, 0}, 
                    Offset[8], {1., 2.3959478845370086`*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-26.31111111111111, 
                    2.503002604326257}, {-0.25, 0}, 
                    Offset[8], {0.17777777777777715`, 
                    2.1119017645787608`*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-26.4, 
                    1.5030026037688644`}, {-0.25, 0}, 
                    Offset[8], {1., 1.666933258093195*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-25.4, 
                    1.503002604438349}, {-0.25, 0}, 
                    Offset[8], {1., 1.0046790066553513`*^-9}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-24.4, 
                    0.5773844045522439}, {-0.25, 0}, 
                    Offset[8], {1., -1.5426970004799614`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-23.4, -0.03969439534134692}, \
{-0.25, 0}, 
                    Offset[8], {1., 4.973230091631642*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-22.4, -0.039694395141241096`}, \
{-0.25, 0}, 
                    Offset[8], {1., 1.9610355006527413`*^-12}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-21.4, -0.9243594964746237}, \
{-0.25, 0}, 
                    Offset[8], {1., -1.474441835556945}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-21.4, -0.03969439529705465}, \
{-0.25, 0}, 
                    Offset[8], {1., -2.6099662014944514`*^-10}], 
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-21.4, 
                    0.8756405038490257}, {-0.25, 0}, 
                    Offset[8], {1., 1.5255581649824705`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-20.4, -2.1141362308744465`}, \
{-0.25, 0}, 
                    Offset[8], {1., -1.0000000002950742`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-19.31111111111111, \
-1.5141362308339463`}, {-0.25, 0}, 
                    Offset[8], {
                    0.17777777777777715`, -9.340705986460307*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-19.4, -2.5141362310660087`}, \
{-0.25, 0}, 
                    Offset[8], {1., -1.2255441106390208`*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-18.4, -2.5141362310645707`}, \
{-0.25, 0}, 
                    Offset[8], {1., 8.409939411535561*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-17.449352612161093`, \
-1.1580280810709112`}, {-0.25, 0}, 
                    Offset[8], {1., 2.4627523527937853`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-20.4, -0.3243594962058682}, \
{-0.25, 0}, 
                    Offset[8], {1., -0.47444183467402473`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-19.22222222222222, 
                    0.4858637696860044}, {-0.25, 0}, 
                    Offset[8], {0.1777777777777736, 4.024131028401712*^-11}], 
                    
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-19.4, -0.5141362302107939}, \
{-0.25, 0}, 
                    Offset[8], {1., -2.2552637535255826`*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-18.4, -0.5141362302848381}, \
{-0.25, 0}, 
                    Offset[8], {1., 2.6943780540023*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-17.4, -0.23648481905191157`}, \
{-0.25, 0}, 
                    Offset[8], {1., 0.46275235203691517`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-20.4, 
                    1.485863769699331}, {-0.25, 0}, 
                    Offset[8], {1., -2.3780444280419033`*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-19.31111111111111, 
                    2.4858637703524735`}, {-0.25, 0}, 
                    Offset[8], {0.17777777777777715`, 
                    1.0367129377186757`*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-19.4, 
                    1.48586376992762}, {-0.25, 0}, 
                    Offset[8], {1., 5.390174973030071*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-18.4, 
                    1.4858637701846829`}, {-0.25, 0}, 
                    Offset[8], {1., 6.909317562531214*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-17.4, 
                    0.5635151811426408}, {-0.25, 0}, 
                    Offset[8], {1., -1.5372476484494655`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-16.4, -0.05138387856655881}, \
{-0.25, 0}, 
                    Offset[8], {1., -5.490222235171593*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-15.4, -0.051383878722253}, \
{-0.25, 0}, 
                    Offset[8], {1., 1.0652450449510908`*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-14.4, -0.9317804423050509}, \
{-0.25, 0}, 
                    Offset[8], {1., -1.4673276060423461`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-14.4, -0.05138387866820065}, \
{-0.25, 0}, 
                    Offset[8], {1., 1.9070911516649858`*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-14.4, 
                    0.8682195575810179}, {-0.25, 0}, 
                    Offset[8], {1., 1.5326723937677684`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-13.4, -2.11871148449353}, \
{-0.25, 0}, 
                    Offset[8], {1., -0.9999999996192344}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-12.31111111111111, \
-1.5187114841243061`}, {-0.25, 0}, 
                    Offset[8], {0.17777777777777715`, 
                    6.113598516321872*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-12.399999999999999`, \
-2.5187114841847964`}, {-0.25, 0}, 
                    Offset[8], {1., 2.6071234060509596`*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-11.4, -2.518711484394526}, \
{-0.25, 0}, 
                    Offset[8], {1., -5.233573574514594*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-10.455758242477604`, \
-1.1283382721355815`}, {-0.25, 0}, 
                    Offset[8], {1., 2.5546977850391666`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-13.4, -0.3317804425097498}, \
{-0.25, 0}, 
                    Offset[8], {1., -0.4673276064152959}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-12.222222222222221`,
                     0.4812885158204834}, {-0.25, 0}, 
                    Offset[8], {0.17777777777777537`, 
                    2.994832160041483*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-12.399999999999999`, \
-0.5187114843301394}, {-0.25, 0}, 
                    Offset[8], {1., 1.2428813533915672`*^-9}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-11.4, -0.518711485052193}, \
{-0.25, 0}, 
                    Offset[8], {1., -2.032010226749037*^-9}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-10.4, -0.18589281408482003`}, \
{-0.25, 0}, 
                    Offset[8], {1., 0.5546977863002951}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-13.4, 
                    1.4812885155214768`}, {-0.25, 0}, 
                    Offset[8], {1., 7.222524800454266*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-12.31111111111111, 
                    2.4812885163492204`}, {-0.25, 0}, 
                    Offset[8], {0.17777777777777715`, 
                    1.060036503020001*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-12.399999999999999`,
                     1.4812885159338927`}, {-0.25, 0}, 
                    Offset[8], {1., 2.058582193598113*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-11.4, 
                    1.4812885158896512`}, {-0.25, 0}, 
                    Offset[8], {1., -2.1097434910188895`*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-10.4, 
                    0.6141071865832834}, {-0.25, 0}, 
                    Offset[8], {1., -1.4453022153699635`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-9.399999999999999, 
                    0.03598630071009041}, {-0.25, 0}, 
                    Offset[8], {1., 4.5798736331148504`*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-8.4, 
                    0.03598630092309401}, {-0.25, 0}, 
                    Offset[8], {1., 4.9681092573194974`*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-7.4, 
                    0.035986300967897934`}, {-0.25, 0}, 
                    Offset[8], {1., 4.1552476737205524`*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-6.4, 
                    0.03598630100382291}, {-0.25, 0}, 
                    Offset[8], {1., 3.21733126251722*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-5.4, 
                    0.03598630103103379}, {-0.25, 0}, 
                    Offset[8], {1., 2.3902595180924635`*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-4.4, 
                    0.03598630105060492}, {-0.25, 0}, 
                    Offset[8], {1., 1.6683480985602017`*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"64", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-3.4, 
                    0.03598630106398011}, {-0.25, 0}, 
                    Offset[8], {1., 1.116966935610364*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"64", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-2.4000000000000004`,
                     0.03598630107283057}, {-0.25, 0}, 
                    Offset[8], {1., 7.304323812462599*^-12}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"3\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"3", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.4, 
                    0.03598630107836138}, {-0.25, 0}, 
                    Offset[8], {1., 4.348459092806678*^-12}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"300\"", "\"3\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"300", "3"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-0.4, 
                    0.03598630108126033}, {-0.25, 0}, 
                    Offset[8], {1., 1.9326137912223373`*^-12}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"300\"", "\"3\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"300", "3"}, "\[Cross]"], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], 
                    StyleBox[{
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-31., 1.8982025386783976`*^-15}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-30., -1.4436391420446515`*^-11}], 
                    Offset[{10, 10}, {-30., -1.4436391420446515`*^-11}]]}, 
                    InsetBox[
                    PaneBox[
                    StyleBox[
                    "\"\:2217\"", StripOnInput -> False, FontSize -> 20], 
                    ImageSize -> {11, 
                    28}], {-30., -1.4436391420446515`*^-11}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConvolutionLayer", "[", 
                    RowBox[{"64", ",", 
                    RowBox[{"{", "3", "}"}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", "1", "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn", Bold], 
                    Style[
                    HoldForm[
                    ConvolutionLayer[
                    64, {3}, "PaddingSize" -> {1}, "Input" -> {4, 300}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-29., -3.478639660495574*^-11}], 
                    Offset[{10, 10}, {-29., -3.478639660495574*^-11}]]}, 
                    InsetBox["\"P\"", 
                    Offset[{0, -1}, {-29., -3.478639660495574*^-11}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"pol\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"PoolingLayer", "[", 
                    RowBox[{
                    RowBox[{"{", "3", "}"}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", "1", "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["pol", Bold], 
                    Style[
                    HoldForm[
                    
                    PoolingLayer[{3}, "PaddingSize" -> {1}, 
                    "Input" -> {64, 300}]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-28., -1.4969973982130096`}], 
                    Offset[{12, 12}, {-28., -1.4969973982130096`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-28., -1.4969973982130096`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn1a\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn1a", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-28., -4.8286769816737604`*^-11}], 
                    Offset[{12, 12}, {-28., -4.8286769816737604`*^-11}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-28., -4.8286769816737604`*^-11}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn1b\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn1b", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-28., 1.5030026034292536`}], 
                    Offset[{12, 12}, {-28., 1.5030026034292536`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-28., 1.5030026034292536`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn1c\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn1c", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-27., -2.4969973979582374`}], 
                    Offset[{12, 12}, {-27., -2.4969973979582374`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-27., -2.4969973979582374`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn1a1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn1a1", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-24., -0.039694395639740726`}], 
                    Offset[{10, 10}, {-24., -0.039694395639740726`}]]}, 
                    InsetBox[
                    StyleBox[
                    "\"+\"", StripOnInput -> False, FontSize -> 
                    14], {-24., -0.039694395639740726`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"trd1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Plus", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"128", ",", "300"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"128", ",", "300"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"128", ",", "300"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"128", ",", "300"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"128", ",", "300"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"128", ",", "300"}], "}"}]}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["trd1", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[
                    Plus, "Inputs" -> {{128, 300}, {128, 300}, {128, 300}, {
                    128, 300}, {128, 300}, {128, 300}}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-26., -2.4969973975771307`}], 
                    Offset[{12, 12}, {-26., -2.4969973975771307`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-26., -2.4969973975771307`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn1a2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn1a2", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-25., -2.496997397772502}], 
                    Offset[{10, 10}, {-25., -2.496997397772502}]]}, 
                    InsetBox["\"P\"", 
                    Offset[{0, -1}, {-25., -2.496997397772502}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"pol1a\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"PoolingLayer", "[", 
                    RowBox[{
                    RowBox[{"{", "3", "}"}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", "1", "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"128", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["pol1a", Bold], 
                    Style[
                    HoldForm[
                    
                    PoolingLayer[{3}, "PaddingSize" -> {1}, 
                    "Input" -> {128, 300}]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 10), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-27., -0.4969973981805521}], 
                    Offset[{12, 12}, {-27., -0.4969973981805521}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-27., -0.4969973981805521}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn1b1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn1b1", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 11), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-26., -0.4969973987113276}], 
                    Offset[{12, 12}, {-26., -0.4969973987113276}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-26., -0.4969973987113276}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn1b2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn1b2", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 12), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-25., -0.49699739873949356`}], 
                    Offset[{10, 10}, {-25., -0.49699739873949356`}]]}, 
                    InsetBox["\"P\"", 
                    Offset[{0, -1}, {-25., -0.49699739873949356`}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"pol1b\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"PoolingLayer", "[", 
                    RowBox[{
                    RowBox[{"{", "25", "}"}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", "12", "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"128", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["pol1b", Bold], 
                    Style[
                    HoldForm[
                    
                    PoolingLayer[{25}, "PaddingSize" -> {12}, 
                    "Input" -> {128, 300}]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 13), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-27., 1.5030026036688484`}], 
                    Offset[{12, 12}, {-27., 1.5030026036688484`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-27., 1.5030026036688484`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn1c1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn1c1", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 14), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-26., 1.5030026038355417`}], 
                    Offset[{12, 12}, {-26., 1.5030026038355417`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-26., 1.5030026038355417`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn1c2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn1c2", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 15), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-25., 1.5030026048402207`}], 
                    Offset[{10, 10}, {-25., 1.5030026048402207`}]]}, 
                    InsetBox["\"P\"", 
                    Offset[{0, -1}, {-25., 1.5030026048402207`}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"pol1c\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"PoolingLayer", "[", 
                    RowBox[{
                    RowBox[{"{", "75", "}"}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", "37", "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"128", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["pol1c", Bold], 
                    Style[
                    HoldForm[
                    
                    PoolingLayer[{75}, "PaddingSize" -> {37}, 
                    "Input" -> {128, 300}]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 16), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-23., -0.03969439514241772}], 
                    Offset[{10, 10}, {-23., -0.03969439514241772}]]}, 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzF1s9LG0EUB/CNtpKLtvVmC4q3loooolgqBUUjHnIwNhSiRnZ+iSARkoh4
MeBJCJ7Egyi0Je5MD+JdSr3Yf6A92HMFPVr0YitofOtO7DRaE83s5gtvIXsY
Pnmz83Yb0VSIVRiGkfDDJWTOdMfj5uzQY/gRjiUmxmOUDMSSdJzGO1El3KyD
eg71wNCeoK6FEFqr1rWWEi0+1rbykBDxWcdaedHh81EiMox+ympYKz8l+yjm
C7YNjMc6QHkpyUexmLRtjIhThkRAF0rJvX0YixD07Mz2EWJFdaKU3MvHTKsL
bCeX+4r5rG6Ukjv7oG8vwHbo9E0su4FScicfQvwpPGs/nb6JTcNIVbgFkyna
NzycqYG+fZNn9evY2Hu/mzCZonzhcKoK+vVFntUfGK/Wug2TKcbnY4Rb0naA
0HqD66q/KegjhKdz85eQ9RYvUEpu9THMY7n5S02r1yuUkv/6oG9v7fkLdY4x
H/ESpeRGHzxjb8D1W864Ga9RSq75oG8vwfbLsfGlcqCU/OOLRj88o4Tvyb5t
eDB/C+XKx8Irj+AcfJfnYcej+Vsolz57/oJp25kjfDcSsZ6UGyZj+3ywl0LO
uH02+rG+3CglQfg+WpS2I5gjzaUuCO/BOV31+pW5JW1/4Kz26PjD/YHprK5q
bRnMBvqS501NA2nD2euSC97V87qqoz0i4HvznY6+5XIBTGFFng==
                    
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSize -> 20, ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}], 
                    TraditionalForm], {-23., -0.03969439514241772}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"rmp1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{"Ramp", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"128", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["rmp1", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[Ramp, "Input" -> {128, 300}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 17), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-22., -0.03969439514045668}], 
                    Offset[{10, 10}, {-22., -0.03969439514045668}]]}, 
                    InsetBox["\"BN\"", 
                    Offset[{0, -1}, {-22., -0.03969439514045668}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"bnl1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"BatchNormalizationLayer", "[", 
                    RowBox[{
                    RowBox[{"\"Channels\"", "\[Rule]", "128"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"128", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["bnl1", Bold], 
                    Style[
                    HoldForm[
                    BatchNormalizationLayer[
                    "Channels" -> 128, "Input" -> {128, 300}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 18), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-21., -1.5141362306974018`}], 
                    Offset[{12, 12}, {-21., -1.5141362306974018`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-21., -1.5141362306974018`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn2a\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn2a", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 19), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-21., -0.0396943954014533}], 
                    Offset[{12, 12}, {-21., -0.0396943954014533}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-21., -0.0396943954014533}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn2b\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn2b", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 20), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-21., 1.4858637698420138`}], 
                    Offset[{12, 12}, {-21., 1.4858637698420138`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]},
                     {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-21., 1.4858637698420138`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn2c\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn2c", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 21), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-20., -2.514136230992476}], 
                    Offset[{12, 12}, {-20., -2.514136230992476}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-20., -2.514136230992476}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn2a1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn2a1", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 22), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-17., -0.05138387823714548}], 
                    Offset[{10, 10}, {-17., -0.05138387823714548}]]}, 
                    InsetBox[
                    StyleBox[
                    "\"+\"", StripOnInput -> False, FontSize -> 
                    14], {-17., -0.05138387823714548}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"trd2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Plus", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"256", ",", "300"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "300"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "300"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "300"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "300"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "300"}], "}"}]}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["trd2", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[
                    Plus, "Inputs" -> {{256, 300}, {256, 300}, {256, 300}, {
                    256, 300}, {256, 300}, {256, 300}}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 23), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-19., -2.5141362311150304`}], 
                    Offset[{12, 12}, {-19., -2.5141362311150304`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-19., -2.5141362311150304`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn2a2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn2a2", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 24), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-18., -2.514136231030931}], 
                    Offset[{10, 10}, {-18., -2.514136231030931}]]}, 
                    InsetBox["\"P\"", 
                    Offset[{0, -1}, {-18., -2.514136231030931}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"pol2a\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"PoolingLayer", "[", 
                    RowBox[{
                    RowBox[{"{", "3", "}"}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", "1", "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["pol2a", Bold], 
                    Style[
                    HoldForm[
                    
                    PoolingLayer[{3}, "PaddingSize" -> {1}, 
                    "Input" -> {256, 300}]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 25), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-20., -0.514136230075478}], 
                    Offset[{12, 12}, {-20., -0.514136230075478}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-20., -0.514136230075478}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn2b1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn2b1", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 26), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-19., -0.5141362303010044}], 
                    Offset[{12, 12}, {-19., -0.5141362303010044}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-19., -0.5141362303010044}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn2b2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn2b2", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 27), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-18., -0.5141362302740606}], 
                    Offset[{10, 10}, {-18., -0.5141362302740606}]]}, 
                    InsetBox["\"P\"", 
                    Offset[{0, -1}, {-18., -0.5141362302740606}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"pol2b\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"PoolingLayer", "[", 
                    RowBox[{
                    RowBox[{"{", "25", "}"}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", "12", "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["pol2b", Bold], 
                    Style[
                    HoldForm[
                    
                    PoolingLayer[{25}, "PaddingSize" -> {12}, 
                    "Input" -> {256, 300}]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 28), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-20., 1.4858637696042094`}], 
                    Offset[{12, 12}, {-20., 1.4858637696042094`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-20., 1.4858637696042094`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn2c1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn2c1", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 29), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-19., 1.485863770143227}], 
                    Offset[{12, 12}, {-19., 1.485863770143227}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-19., 1.485863770143227}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn2c2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn2c2", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 30), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-18., 1.48586377021232}], 
                    Offset[{10, 10}, {-18., 1.48586377021232}]]}, 
                    InsetBox["\"P\"", 
                    Offset[{0, -1}, {-18., 1.48586377021232}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"pol2c\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"PoolingLayer", "[", 
                    RowBox[{
                    RowBox[{"{", "75", "}"}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", "37", "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["pol2c", Bold], 
                    Style[
                    HoldForm[
                    
                    PoolingLayer[{75}, "PaddingSize" -> {37}, 
                    "Input" -> {256, 300}]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 31), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-16., -0.0513838787861677}], 
                    Offset[{10, 10}, {-16., -0.0513838787861677}]]}, 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzF1s9LG0EUB/CNtpKLtvVmC4q3loooolgqBUUjHnIwNhSiRnZ+iSARkoh4
MeBJCJ7Egyi0Je5MD+JdSr3Yf6A92HMFPVr0YitofOtO7DRaE83s5gtvIXsY
Pnmz83Yb0VSIVRiGkfDDJWTOdMfj5uzQY/gRjiUmxmOUDMSSdJzGO1El3KyD
eg71wNCeoK6FEFqr1rWWEi0+1rbykBDxWcdaedHh81EiMox+ympYKz8l+yjm
C7YNjMc6QHkpyUexmLRtjIhThkRAF0rJvX0YixD07Mz2EWJFdaKU3MvHTKsL
bCeX+4r5rG6Ukjv7oG8vwHbo9E0su4FScicfQvwpPGs/nb6JTcNIVbgFkyna
NzycqYG+fZNn9evY2Hu/mzCZonzhcKoK+vVFntUfGK/Wug2TKcbnY4Rb0naA
0HqD66q/KegjhKdz85eQ9RYvUEpu9THMY7n5S02r1yuUkv/6oG9v7fkLdY4x
H/ESpeRGHzxjb8D1W864Ga9RSq75oG8vwfbLsfGlcqCU/OOLRj88o4Tvyb5t
eDB/C+XKx8Irj+AcfJfnYcej+Vsolz57/oJp25kjfDcSsZ6UGyZj+3ywl0LO
uH02+rG+3CglQfg+WpS2I5gjzaUuCO/BOV31+pW5JW1/4Kz26PjD/YHprK5q
bRnMBvqS501NA2nD2euSC97V87qqoz0i4HvznY6+5XIBTGFFng==
                    
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSize -> 20, ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}], 
                    TraditionalForm], {-16., -0.0513838787861677}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"rmp2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{"Ramp", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["rmp2", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[Ramp, "Input" -> {256, 300}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 32), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-15., -0.0513838786796432}], 
                    Offset[{10, 10}, {-15., -0.0513838786796432}]]}, 
                    InsetBox["\"BN\"", 
                    Offset[{0, -1}, {-15., -0.0513838786796432}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"bnl2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"BatchNormalizationLayer", "[", 
                    RowBox[{
                    RowBox[{"\"Channels\"", "\[Rule]", "256"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["bnl2", Bold], 
                    Style[
                    HoldForm[
                    BatchNormalizationLayer[
                    "Channels" -> 256, "Input" -> {256, 300}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 33), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-14., -1.5187114847219894`}], 
                    Offset[{12, 12}, {-14., -1.5187114847219894`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-14., -1.5187114847219894`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn3a\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn3a", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 34), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-14., -0.051383878660572285`}], 
                    Offset[{12, 12}, {-14., -0.051383878660572285`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-14., -0.051383878660572285`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn3b\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn3b", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 35), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-14., 1.4812885150881252`}], 
                    Offset[{12, 12}, {-14., 1.4812885150881252`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-14., 1.4812885150881252`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn3c\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn3c", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 36), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-13., -2.5187114843412237`}], 
                    Offset[{12, 12}, {-13., -2.5187114843412237`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-13., -2.5187114843412237`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn3a1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn3a1", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 37), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-10., 0.03598630043529799}], 
                    Offset[{10, 10}, {-10., 0.03598630043529799}]]}, 
                    InsetBox[
                    StyleBox[
                    "\"+\"", StripOnInput -> False, FontSize -> 14], {-10., 
                    0.03598630043529799}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"trd3\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Plus", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"512", ",", "300"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "300"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "300"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "300"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "300"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "300"}], "}"}]}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["trd3", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[
                    Plus, "Inputs" -> {{512, 300}, {512, 300}, {512, 300}, {
                    512, 300}, {512, 300}, {512, 300}}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 38), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-12., -2.5187114840805114`}], 
                    Offset[{12, 12}, {-12., -2.5187114840805114`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-12., -2.5187114840805114`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn3a2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn3a2", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 39), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-11., -2.5187114846038687`}], 
                    Offset[{10, 10}, {-11., -2.5187114846038687`}]]}, 
                    InsetBox["\"P\"", 
                    Offset[{0, -1}, {-11., -2.5187114846038687`}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"pol3a\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"PoolingLayer", "[", 
                    RowBox[{
                    RowBox[{"{", "3", "}"}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", "1", "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["pol3a", Bold], 
                    Style[
                    HoldForm[
                    
                    PoolingLayer[{3}, "PaddingSize" -> {1}, 
                    "Input" -> {512, 300}]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 40), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-13., -0.5187114850758682}], 
                    Offset[{12, 12}, {-13., -0.5187114850758682}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-13., -0.5187114850758682}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn3b1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn3b1", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 41), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-12., -0.5187114838329868}], 
                    Offset[{12, 12}, {-12., -0.5187114838329868}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 
                    1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-12., -0.5187114838329868}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn3b2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn3b2", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 42), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-11., -0.518711485864997}], 
                    Offset[{10, 10}, {-11., -0.518711485864997}]]}, 
                    InsetBox["\"P\"", 
                    Offset[{0, -1}, {-11., -0.518711485864997}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"pol3b\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"PoolingLayer", "[", 
                    RowBox[{
                    RowBox[{"{", "25", "}"}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", "12", "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["pol3b", Bold], 
                    Style[
                    HoldForm[
                    PoolingLayer[{25}, "PaddingSize" -> {12}, 
                    "Input" -> {512, 300}]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 43), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-13., 1.4812885158103777`}], 
                    Offset[{12, 12}, {-13., 1.4812885158103777`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-13., 1.4812885158103777`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn3c1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn3c1", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 44), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-12., 1.481288516016236}], 
                    Offset[{12, 12}, {-12., 1.481288516016236}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-12., 1.481288516016236}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn3c2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn3c2", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 45), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-11., 1.4812885158052616`}], 
                    Offset[{10, 10}, {-11., 1.4812885158052616`}]]}, 
                    InsetBox["\"P\"", 
                    Offset[{0, -1}, {-11., 1.4812885158052616`}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"pol3c\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"PoolingLayer", "[", 
                    RowBox[{
                    RowBox[{"{", "75", "}"}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", "37", "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["pol3c", Bold], 
                    Style[
                    HoldForm[
                    
                    PoolingLayer[{75}, "PaddingSize" -> {37}, 
                    "Input" -> {512, 300}]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 46), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-9., 0.035986300893285354`}], 
                    Offset[{10, 10}, {-9., 0.035986300893285354`}]]}, 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzF1s9LG0EUB/CNtpKLtvVmC4q3loooolgqBUUjHnIwNhSiRnZ+iSARkoh4
MeBJCJ7Egyi0Je5MD+JdSr3Yf6A92HMFPVr0YitofOtO7DRaE83s5gtvIXsY
Pnmz83Yb0VSIVRiGkfDDJWTOdMfj5uzQY/gRjiUmxmOUDMSSdJzGO1El3KyD
eg71wNCeoK6FEFqr1rWWEi0+1rbykBDxWcdaedHh81EiMox+ympYKz8l+yjm
C7YNjMc6QHkpyUexmLRtjIhThkRAF0rJvX0YixD07Mz2EWJFdaKU3MvHTKsL
bCeX+4r5rG6Ukjv7oG8vwHbo9E0su4FScicfQvwpPGs/nb6JTcNIVbgFkyna
NzycqYG+fZNn9evY2Hu/mzCZonzhcKoK+vVFntUfGK/Wug2TKcbnY4Rb0naA
0HqD66q/KegjhKdz85eQ9RYvUEpu9THMY7n5S02r1yuUkv/6oG9v7fkLdY4x
H/ESpeRGHzxjb8D1W864Ga9RSq75oG8vwfbLsfGlcqCU/OOLRj88o4Tvyb5t
eDB/C+XKx8Irj+AcfJfnYcej+Vsolz57/oJp25kjfDcSsZ6UGyZj+3ywl0LO
uH02+rG+3CglQfg+WpS2I5gjzaUuCO/BOV31+pW5JW1/4Kz26PjD/YHprK5q
bRnMBvqS501NA2nD2euSC97V87qqoz0i4HvznY6+5XIBTGFFng==
                    
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSize -> 20, ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}], TraditionalForm], {-9., 
                    0.035986300893285354`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"rmp3\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{"Ramp", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["rmp3", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[Ramp, "Input" -> {512, 300}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 47), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-8., 0.03598630094296645}], 
                    Offset[{10, 10}, {-8., 0.03598630094296645}]]}, 
                    InsetBox["\"BN\"", 
                    Offset[{0, -1}, {-8., 0.03598630094296645}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"bnl3\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"BatchNormalizationLayer", "[", 
                    RowBox[{
                    RowBox[{"\"Channels\"", "\[Rule]", "512"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["bnl3", Bold], 
                    Style[
                    HoldForm[
                    BatchNormalizationLayer[
                    "Channels" -> 512, "Input" -> {512, 300}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 48), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-7., 0.035986300984518924`}], 
                    Offset[{10, 10}, {-7., 0.035986300984518924`}]]}, 
                    InsetBox[
                    PaneBox[
                    StyleBox[
                    "\"\:2217\"", StripOnInput -> False, FontSize -> 20], 
                    ImageSize -> {11, 28}], {-7., 0.035986300984518924`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"dsc2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConvolutionLayer", "[", 
                    RowBox[{"256", ",", 
                    RowBox[{"{", "3", "}"}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", "1", "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["dsc2", Bold], 
                    Style[
                    HoldForm[
                    ConvolutionLayer[
                    256, {3}, "PaddingSize" -> {1}, "Input" -> {512, 300}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 49), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-6., 0.035986301016692236`}], 
                    Offset[{10, 10}, {-6., 0.035986301016692236`}]]}, 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzF1s9LG0EUB/CNtpKLtvVmC4q3loooolgqBUUjHnIwNhSiRnZ+iSARkoh4
MeBJCJ7Egyi0Je5MD+JdSr3Yf6A92HMFPVr0YitofOtO7DRaE83s5gtvIXsY
Pnmz83Yb0VSIVRiGkfDDJWTOdMfj5uzQY/gRjiUmxmOUDMSSdJzGO1El3KyD
eg71wNCeoK6FEFqr1rWWEi0+1rbykBDxWcdaedHh81EiMox+ympYKz8l+yjm
C7YNjMc6QHkpyUexmLRtjIhThkRAF0rJvX0YixD07Mz2EWJFdaKU3MvHTKsL
bCeX+4r5rG6Ukjv7oG8vwHbo9E0su4FScicfQvwpPGs/nb6JTcNIVbgFkyna
NzycqYG+fZNn9evY2Hu/mzCZonzhcKoK+vVFntUfGK/Wug2TKcbnY4Rb0naA
0HqD66q/KegjhKdz85eQ9RYvUEpu9THMY7n5S02r1yuUkv/6oG9v7fkLdY4x
H/ESpeRGHzxjb8D1W864Ga9RSq75oG8vwfbLsfGlcqCU/OOLRj88o4Tvyb5t
eDB/C+XKx8Irj+AcfJfnYcej+Vsolz57/oJp25kjfDcSsZ6UGyZj+3ywl0LO
uH02+rG+3CglQfg+WpS2I5gjzaUuCO/BOV31+pW5JW1/4Kz26PjD/YHprK5q
bRnMBvqS501NA2nD2euSC97V87qqoz0i4HvznY6+5XIBTGFFng==
                    
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSize -> 20, ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}], TraditionalForm], {-6., 
                    0.035986301016692236`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"drmp2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{"Ramp", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["drmp2", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[Ramp, "Input" -> {256, 300}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 50), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-5., 0.03598630104059483}], 
                    Offset[{10, 10}, {-5., 0.03598630104059483}]]}, 
                    InsetBox[
                    PaneBox[
                    StyleBox[
                    "\"\:2217\"", StripOnInput -> False, FontSize -> 20], 
                    ImageSize -> {11, 28}], {-5., 0.03598630104059483}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"dsc4\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConvolutionLayer", "[", 
                    RowBox[{"64", ",", 
                    RowBox[{"{", "3", "}"}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", "1", "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["dsc4", Bold], 
                    Style[
                    HoldForm[
                    ConvolutionLayer[
                    64, {3}, "PaddingSize" -> {1}, "Input" -> {256, 300}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 51), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-4., 0.03598630105727831}], 
                    Offset[{10, 10}, {-4., 0.03598630105727831}]]}, 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzF1s9LG0EUB/CNtpKLtvVmC4q3loooolgqBUUjHnIwNhSiRnZ+iSARkoh4
MeBJCJ7Egyi0Je5MD+JdSr3Yf6A92HMFPVr0YitofOtO7DRaE83s5gtvIXsY
Pnmz83Yb0VSIVRiGkfDDJWTOdMfj5uzQY/gRjiUmxmOUDMSSdJzGO1El3KyD
eg71wNCeoK6FEFqr1rWWEi0+1rbykBDxWcdaedHh81EiMox+ympYKz8l+yjm
C7YNjMc6QHkpyUexmLRtjIhThkRAF0rJvX0YixD07Mz2EWJFdaKU3MvHTKsL
bCeX+4r5rG6Ukjv7oG8vwHbo9E0su4FScicfQvwpPGs/nb6JTcNIVbgFkyna
NzycqYG+fZNn9evY2Hu/mzCZonzhcKoK+vVFntUfGK/Wug2TKcbnY4Rb0naA
0HqD66q/KegjhKdz85eQ9RYvUEpu9THMY7n5S02r1yuUkv/6oG9v7fkLdY4x
H/ESpeRGHzxjb8D1W864Ga9RSq75oG8vwfbLsfGlcqCU/OOLRj88o4Tvyb5t
eDB/C+XKx8Irj+AcfJfnYcej+Vsolz57/oJp25kjfDcSsZ6UGyZj+3ywl0LO
uH02+rG+3CglQfg+WpS2I5gjzaUuCO/BOV31+pW5JW1/4Kz26PjD/YHprK5q
bRnMBvqS501NA2nD2euSC97V87qqoz0i4HvznY6+5XIBTGFFng==
                    
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSize -> 20, ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}], TraditionalForm], {-4., 
                    0.03598630105727831}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"drmp4\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{"Ramp", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["drmp4", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[Ramp, "Input" -> {64, 300}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 52), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-3., 0.03598630106844798}], 
                    Offset[{10, 10}, {-3., 0.03598630106844798}]]}, 
                    InsetBox[
                    PaneBox[
                    StyleBox[
                    "\"\:2217\"", StripOnInput -> False, FontSize -> 20], 
                    ImageSize -> {11, 28}], {-3., 0.03598630106844798}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"pcnn\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConvolutionLayer", "[", 
                    RowBox[{"3", ",", 
                    RowBox[{"{", "3", "}"}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", "1", "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["pcnn", Bold], 
                    Style[
                    HoldForm[
                    ConvolutionLayer[
                    3, {3}, "PaddingSize" -> {1}, "Input" -> {64, 300}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 53), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-2., 0.035986301075752306`}], 
                    Offset[{10, 10}, {-2., 0.035986301075752306`}]]}, 
                    InsetBox["\"T\"", 
                    Offset[{0, -1}, {-2., 0.035986301075752306`}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"trsp\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"TransposeLayer", "[", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "300"}], "}"}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["trsp", Bold], 
                    Style[
                    HoldForm[
                    TransposeLayer["Input" -> {3, 300}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 54), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-1., 0.035986301080100765`}], 
                    Offset[{10, 10}, {-1., 0.035986301080100765`}]]}, 
                    InsetBox["\"S\"", 
                    Offset[{0, -1}, {-1., 0.035986301080100765`}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"sfmx\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"SoftmaxLayer", "[", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"300", ",", "3"}], "}"}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["sfmx", Bold], 
                    Style[
                    HoldForm[
                    SoftmaxLayer["Input" -> {300, 3}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 55), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{2.2035254216632553`*^-18, 0.03598630108203338}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 56), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, FontSize -> 10]}, {}, {
                    EdgeForm[{
                    GrayLevel[0.5], 
                    Thickness[Large], 
                    Dashing[{0, Small}]}], 
                    FaceForm[None], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    Part[CompressedData["
1:eJxVz11IU3EYBvCjm18hFSJhImhZa4xpNjfd2aegoIQZrC4Kr1S60IREC8GN
UKxVTEEIAkkwwisvyjAvYqUPiQWJU5ZIprVNh2IY04buTMSPPGfnvB44HH48
7/m/z/9c7T3bnXiGYfSH7/8v/1hx6YM9bisjYOJtwXTceGlk9O0n3mbMOUcS
kD0u2ATutt41HI6MxcxeazN8dn0T8+QO/YPKVM7K24jdu88n5qMy8NZD7Sta
8doGhP8N+HjDSXIW5hPdxEYs2X+oPR6fOL9c05AnmUUwu5nYiCSuguw34Enj
TWIWSa29xMXQWTcDUp8iWELrxDq0uZ6urbCc6HKfKkjzRGffmbNfIsJ5Wpjr
PffDWXKh/xU0hHLnd6sGhflCmPu9JNfgoXuaWIutPrd3qsUvzm+//Emswfbq
HLEWzvwusr8QCew7Yg0ecyPEBWixLvyS+uTDsb+xKFkNR2qofqCSE/3o1Ndj
uXxV9qJ6OHaeCntNf7Q2Raz/Bdxq//d7svG1kCsxag+QXAFLa5hYhaj75GxF
b+w+SkTX6r5LVmCnwE5yFeTPdGS/Ep1vSokVkF2m+XlcfxVYkvrkoNxftSw5
C5aSQeIM6JhN4nSoey4GJZ9GbslV4mRkztQSM0jzNxNvjKU0OY78fr2m7q+t
zMQMtR/5ABseMcI=
                    "], 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 20, 20, 24, 24, 24, 24, 20, 24, 20, 24, 24, 20, 
                    24, 24, 20, 20, 20, 24, 24, 24, 24, 20, 24, 20, 24, 24, 
                    20, 24, 24, 20, 20, 20, 24, 24, 24, 24, 20, 24, 20, 24, 
                    24, 20, 24, 24, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 
                    8}, NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, AspectRatio -> Full, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    ImagePadding -> {{28., 28.}, {28., 18.}}, 
                    ImageSize -> {1141., 221.7599931125544}, PlotRangePadding -> 
                    0], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], ImageSize -> {800, Automatic}, ImageSizeAction -> 
                    "Scrollable", Scrollbars -> {True, False}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "cnn"], 
                    NeuralNetworks`NetPath["Nodes", "pol"], 
                    NeuralNetworks`NetPath["Nodes", "cnn1a"], 
                    NeuralNetworks`NetPath["Nodes", "cnn1b"], 
                    NeuralNetworks`NetPath["Nodes", "cnn1c"], 
                    NeuralNetworks`NetPath["Nodes", "cnn1a1"], 
                    NeuralNetworks`NetPath["Nodes", "trd1"], 
                    NeuralNetworks`NetPath["Nodes", "cnn1a2"], 
                    NeuralNetworks`NetPath["Nodes", "pol1a"], 
                    NeuralNetworks`NetPath["Nodes", "cnn1b1"], 
                    NeuralNetworks`NetPath["Nodes", "cnn1b2"], 
                    NeuralNetworks`NetPath["Nodes", "pol1b"], 
                    NeuralNetworks`NetPath["Nodes", "cnn1c1"], 
                    NeuralNetworks`NetPath["Nodes", "cnn1c2"], 
                    NeuralNetworks`NetPath["Nodes", "pol1c"], 
                    NeuralNetworks`NetPath["Nodes", "rmp1"], 
                    NeuralNetworks`NetPath["Nodes", "bnl1"], 
                    NeuralNetworks`NetPath["Nodes", "cnn2a"], 
                    NeuralNetworks`NetPath["Nodes", "cnn2b"], 
                    NeuralNetworks`NetPath["Nodes", "cnn2c"], 
                    NeuralNetworks`NetPath["Nodes", "cnn2a1"], 
                    NeuralNetworks`NetPath["Nodes", "trd2"], 
                    NeuralNetworks`NetPath["Nodes", "cnn2a2"], 
                    NeuralNetworks`NetPath["Nodes", "pol2a"], 
                    NeuralNetworks`NetPath["Nodes", "cnn2b1"], 
                    NeuralNetworks`NetPath["Nodes", "cnn2b2"], 
                    NeuralNetworks`NetPath["Nodes", "pol2b"], 
                    NeuralNetworks`NetPath["Nodes", "cnn2c1"], 
                    NeuralNetworks`NetPath["Nodes", "cnn2c2"], 
                    NeuralNetworks`NetPath["Nodes", "pol2c"], 
                    NeuralNetworks`NetPath["Nodes", "rmp2"], 
                    NeuralNetworks`NetPath["Nodes", "bnl2"], 
                    NeuralNetworks`NetPath["Nodes", "cnn3a"], 
                    NeuralNetworks`NetPath["Nodes", "cnn3b"], 
                    NeuralNetworks`NetPath["Nodes", "cnn3c"], 
                    NeuralNetworks`NetPath["Nodes", "cnn3a1"], 
                    NeuralNetworks`NetPath["Nodes", "trd3"], 
                    NeuralNetworks`NetPath["Nodes", "cnn3a2"], 
                    NeuralNetworks`NetPath["Nodes", "pol3a"], 
                    NeuralNetworks`NetPath["Nodes", "cnn3b1"], 
                    NeuralNetworks`NetPath["Nodes", "cnn3b2"], 
                    NeuralNetworks`NetPath["Nodes", "pol3b"], 
                    NeuralNetworks`NetPath["Nodes", "cnn3c1"], 
                    NeuralNetworks`NetPath["Nodes", "cnn3c2"], 
                    NeuralNetworks`NetPath["Nodes", "pol3c"], 
                    NeuralNetworks`NetPath["Nodes", "rmp3"], 
                    NeuralNetworks`NetPath["Nodes", "bnl3"], 
                    NeuralNetworks`NetPath["Nodes", "dsc2"], 
                    NeuralNetworks`NetPath["Nodes", "drmp2"], 
                    NeuralNetworks`NetPath["Nodes", "dsc4"], 
                    NeuralNetworks`NetPath["Nodes", "drmp4"], 
                    NeuralNetworks`NetPath["Nodes", "pcnn"], 
                    NeuralNetworks`NetPath["Nodes", "trsp"], 
                    NeuralNetworks`NetPath["Nodes", "sfmx"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4, 300}, NeuralNetworks`RealT]], 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{300, 3}, NeuralNetworks`RealT]], 
                    Association[
                    "cnn" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{64, 4, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{64}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 4, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{4, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 300}, 
                    NeuralNetworks`RealT]]], "pol" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3}, "Stride" -> {1}, 
                    "PaddingSize" -> {1}, "Function" -> Max, "Dimensionality" -> 
                    1, "Interleaving" -> False, "$Channels" -> 64, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 300}, 
                    NeuralNetworks`RealT]]], "cnn1a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1a_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 300}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 300}, 
                    NeuralNetworks`RealT]]], "1a_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 300}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 300}, 
                    NeuralNetworks`RealT]]], "1a_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 64, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 300}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1a_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1a_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1a_cnn1d_branch_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 64, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {1}, 
                    "Stride" -> {1}, "PaddingSize" -> {0}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 300}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1a_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "1a_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a_cnn1d_branch_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a_cnn1d_branch_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a_plus_shared", "Outputs", "Output"]}], 
                    "cnn1a1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1a1_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1a1_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1a1_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1a1_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1a1_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1a1_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1a1_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "1a1_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a1_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a1_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a1_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a1_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a1_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a1_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a1_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a1_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a1_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a1_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a1_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a1_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a1_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a1_plus_shared", "Outputs", "Output"]}], 
                    "cnn1a2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1a2_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1a2_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1a2_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1a2_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1a2_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1a2_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1a2_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "1a2_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a2_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a2_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a2_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a2_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a2_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a2_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a2_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a2_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a2_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a2_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a2_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a2_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a2_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a2_plus_shared", "Outputs", "Output"]}], 
                    "pol1a" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3}, "Stride" -> {1}, 
                    "PaddingSize" -> {1}, "Function" -> Max, "Dimensionality" -> 
                    1, "Interleaving" -> False, "$Channels" -> 128, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "cnn1b" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1b_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 300}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 300}, 
                    NeuralNetworks`RealT]]], "1b_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 300}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 300}, 
                    NeuralNetworks`RealT]]], "1b_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 64, 25}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 300}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1b_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1b_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 25}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1b_cnn1d_branch_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 64, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {1}, 
                    "Stride" -> {1}, "PaddingSize" -> {0}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 300}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1b_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "1b_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b_cnn1d_branch_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b_cnn1d_branch_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b_plus_shared", "Outputs", "Output"]}], 
                    "cnn1b1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1b1_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1b1_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1b1_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 25}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1b1_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1b1_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1b1_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 25}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1b1_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "1b1_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b1_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b1_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b1_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b1_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b1_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b1_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b1_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b1_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b1_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b1_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b1_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b1_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b1_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b1_plus_shared", "Outputs", "Output"]}], 
                    "cnn1b2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1b2_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1b2_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1b2_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 25}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1b2_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1b2_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1b2_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 25}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1b2_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "1b2_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b2_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b2_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b2_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b2_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b2_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b2_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b2_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b2_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b2_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b2_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b2_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b2_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b2_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b2_plus_shared", "Outputs", "Output"]}], 
                    "pol1b" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {25}, "Stride" -> {1}, 
                    "PaddingSize" -> {12}, "Function" -> Max, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$Channels" -> 128, "$InputSize" -> {300}, 
                    "$OutputSize" -> {300}, "$MXPoolingConvention" -> "valid",
                     "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "cnn1c" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1c_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 300}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 300}, 
                    NeuralNetworks`RealT]]], "1c_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 300}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 300}, 
                    NeuralNetworks`RealT]]], "1c_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 64, 75}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 300}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1c_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1c_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 75}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1c_cnn1d_branch_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 64, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {1}, 
                    "Stride" -> {1}, "PaddingSize" -> {0}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 300}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1c_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "1c_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c_cnn1d_branch_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c_cnn1d_branch_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c_plus_shared", "Outputs", "Output"]}], 
                    "cnn1c1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1c1_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1c1_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1c1_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 75}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1c1_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1c1_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1c1_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 75}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1c1_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "1c1_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c1_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c1_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c1_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c1_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c1_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c1_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c1_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c1_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c1_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c1_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c1_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c1_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c1_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c1_plus_shared", "Outputs", "Output"]}], 
                    "cnn1c2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1c2_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1c2_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1c2_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 75}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1c2_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1c2_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1c2_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 75}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1c2_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "1c2_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c2_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c2_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c2_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c2_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c2_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c2_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c2_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c2_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c2_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c2_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c2_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c2_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c2_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c2_plus_shared", "Outputs", "Output"]}], 
                    "pol1c" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {75}, "Stride" -> {1}, 
                    "PaddingSize" -> {37}, "Function" -> Max, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$Channels" -> 128, "$InputSize" -> {300}, 
                    "$OutputSize" -> {300}, "$MXPoolingConvention" -> "valid",
                     "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "trd1" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT], 
                    "3" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT], "4" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT], 
                    "5" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT], "6" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "rmp1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "bnl1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{128}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 128, 
                    "Interleaving" -> False, "$SpatialDimensions" -> {300}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "cnn2a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "2a_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "2a_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "2a_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 128, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2a_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2a_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2a_cnn1d_branch_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 128, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {1}, 
                    "Stride" -> {1}, "PaddingSize" -> {0}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2a_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_cnn1d_branch_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_cnn1d_branch_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_plus_shared", "Outputs", "Output"]}], 
                    "cnn2a1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "2a1_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2a1_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2a1_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2a1_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2a1_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2a1_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2a1_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "2a1_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a1_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a1_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a1_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a1_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a1_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a1_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a1_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a1_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a1_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a1_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a1_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a1_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a1_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a1_plus_shared", "Outputs", "Output"]}], 
                    "cnn2a2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "2a2_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2a2_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2a2_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2a2_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2a2_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2a2_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2a2_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "2a2_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a2_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a2_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a2_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a2_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a2_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a2_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a2_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a2_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a2_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a2_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a2_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a2_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a2_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a2_plus_shared", "Outputs", "Output"]}], 
                    "pol2a" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3}, "Stride" -> {1}, 
                    "PaddingSize" -> {1}, "Function" -> Max, "Dimensionality" -> 
                    1, "Interleaving" -> False, "$Channels" -> 256, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "cnn2b" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "2b_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "2b_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "2b_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 128, 25}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2b_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2b_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 25}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2b_cnn1d_branch_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 128, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {1}, 
                    "Stride" -> {1}, "PaddingSize" -> {0}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2b_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "2b_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b_cnn1d_branch_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b_cnn1d_branch_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b_plus_shared", "Outputs", "Output"]}], 
                    "cnn2b1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "2b1_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2b1_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2b1_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 25}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2b1_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2b1_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2b1_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 25}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2b1_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_plus_shared", "Outputs", "Output"]}], 
                    "cnn2b2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "2b2_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2b2_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2b2_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 25}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2b2_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2b2_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2b2_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 25}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2b2_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_plus_shared", "Outputs", "Output"]}], 
                    "pol2b" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {25}, "Stride" -> {1}, 
                    "PaddingSize" -> {12}, "Function" -> Max, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$Channels" -> 256, "$InputSize" -> {300}, 
                    "$OutputSize" -> {300}, "$MXPoolingConvention" -> "valid",
                     "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "cnn2c" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "2c_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "2c_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "2c_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 128, 75}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2c_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2c_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 75}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2c_cnn1d_branch_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 128, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {1}, 
                    "Stride" -> {1}, "PaddingSize" -> {0}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2c_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "2c_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c_cnn1d_branch_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c_cnn1d_branch_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c_plus_shared", "Outputs", "Output"]}], 
                    "cnn2c1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "2c1_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2c1_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2c1_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 75}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2c1_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2c1_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2c1_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 75}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2c1_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "2c1_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c1_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c1_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c1_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c1_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c1_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c1_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c1_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c1_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c1_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c1_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c1_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c1_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c1_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c1_plus_shared", "Outputs", "Output"]}], 
                    "cnn2c2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "2c2_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2c2_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2c2_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 75}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2c2_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2c2_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2c2_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 75}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2c2_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "2c2_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c2_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c2_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c2_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c2_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c2_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c2_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c2_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c2_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c2_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c2_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c2_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c2_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c2_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c2_plus_shared", "Outputs", "Output"]}], 
                    "pol2c" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {75}, "Stride" -> {1}, 
                    "PaddingSize" -> {37}, "Function" -> Max, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$Channels" -> 256, "$InputSize" -> {300}, 
                    "$OutputSize" -> {300}, "$MXPoolingConvention" -> "valid",
                     "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "trd2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT], 
                    "3" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT], "4" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT], 
                    "5" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT], "6" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "rmp2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "bnl2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{256}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 256, 
                    "Interleaving" -> False, "$SpatialDimensions" -> {300}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "cnn3a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "3a_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "3a_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "3a_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 256, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3a_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3a_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3a_cnn1d_branch_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 256, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {1}, 
                    "Stride" -> {1}, "PaddingSize" -> {0}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3a_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_cnn1d_branch_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_cnn1d_branch_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_plus_shared", "Outputs", "Output"]}], 
                    "cnn3a1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "3a1_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3a1_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3a1_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3a1_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3a1_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3a1_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3a1_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "3a1_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a1_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a1_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a1_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a1_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a1_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a1_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a1_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a1_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a1_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a1_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a1_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a1_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a1_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a1_plus_shared", "Outputs", "Output"]}], 
                    "cnn3a2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "3a2_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3a2_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3a2_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3a2_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3a2_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3a2_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3a2_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "3a2_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a2_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a2_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a2_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a2_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a2_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a2_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a2_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a2_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a2_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a2_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a2_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a2_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a2_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a2_plus_shared", "Outputs", "Output"]}], 
                    "pol3a" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3}, "Stride" -> {1}, 
                    "PaddingSize" -> {1}, "Function" -> Max, "Dimensionality" -> 
                    1, "Interleaving" -> False, "$Channels" -> 512, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "cnn3b" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "3b_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "3b_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "3b_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 256, 25}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3b_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3b_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 25}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3b_cnn1d_branch_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 256, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {1}, 
                    "Stride" -> {1}, "PaddingSize" -> {0}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3b_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "3b_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b_cnn1d_branch_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b_cnn1d_branch_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b_plus_shared", "Outputs", "Output"]}], 
                    "cnn3b1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "3b1_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3b1_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3b1_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 25}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3b1_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3b1_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3b1_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 25}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3b1_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_plus_shared", "Outputs", "Output"]}], 
                    "cnn3b2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "3b2_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3b2_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3b2_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 25}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3b2_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3b2_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3b2_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 25}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3b2_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_plus_shared", "Outputs", "Output"]}], 
                    "pol3b" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {25}, "Stride" -> {1}, 
                    "PaddingSize" -> {12}, "Function" -> Max, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$Channels" -> 512, "$InputSize" -> {300}, 
                    "$OutputSize" -> {300}, "$MXPoolingConvention" -> "valid",
                     "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "cnn3c" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "3c_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "3c_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "3c_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 256, 75}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3c_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3c_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 75}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3c_cnn1d_branch_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 256, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {1}, 
                    "Stride" -> {1}, "PaddingSize" -> {0}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3c_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "3c_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c_cnn1d_branch_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c_cnn1d_branch_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c_plus_shared", "Outputs", "Output"]}], 
                    "cnn3c1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "3c1_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3c1_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3c1_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 75}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3c1_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3c1_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3c1_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 75}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3c1_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "3c1_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c1_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c1_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c1_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c1_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c1_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c1_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c1_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c1_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c1_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c1_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c1_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c1_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c1_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c1_plus_shared", "Outputs", "Output"]}], 
                    "cnn3c2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "3c2_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3c2_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3c2_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 75}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3c2_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3c2_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3c2_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 75}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3c2_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "3c2_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c2_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c2_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c2_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c2_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c2_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c2_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c2_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c2_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c2_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c2_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c2_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c2_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c2_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c2_plus_shared", "Outputs", "Output"]}], 
                    "pol3c" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {75}, "Stride" -> {1}, 
                    "PaddingSize" -> {37}, "Function" -> Max, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$Channels" -> 512, "$InputSize" -> {300}, 
                    "$OutputSize" -> {300}, "$MXPoolingConvention" -> "valid",
                     "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "trd3" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT], 
                    "3" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT], "4" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT], 
                    "5" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT], "6" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "rmp3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 300}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "bnl3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 512, 
                    "Interleaving" -> False, "$SpatialDimensions" -> {300}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "dsc2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{256, 
                    512, 3}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "drmp2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "dsc4" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{64, 256, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{64}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 300}, 
                    NeuralNetworks`RealT]]], "drmp4" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 300}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 300}, 
                    NeuralNetworks`RealT]]], "pcnn" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{3, 64, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{3}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 3, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{3, 300}, 
                    NeuralNetworks`RealT]]], "trsp" -> 
                    Association[
                    "Type" -> "Transpose", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    TwoWayRule[1, 2]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{3, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{300, 3}, 
                    NeuralNetworks`RealT]]], "sfmx" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{300, 3}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{300, 3}, 
                    NeuralNetworks`RealT]]]]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\"", 
                    "\"300\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"300\"", 
                    "\"3\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    ImageSizeCache -> {308., {13.1669921875, 18.3330078125}}, 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.739733340059794*^9, 3.739785784743812*^9, 
  3.7400385488023787`*^9, 3.7400385999800034`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"8cc81180-62c3-4ea1-9c96-323632d8dd0f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Net Architecture", "Subsubsection",
 CellChangeTimes->{{3.740266711570273*^9, 
  3.740266714113318*^9}},ExpressionUUID->"13966873-325c-4b98-b7cc-\
171c55745238"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = True}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"4\"", "\"300\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"300\"", "\"3\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["54", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = 3}, 
                  GridBox[{{
                    PaneBox[
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], 
                    
                    LineBox[{{-31., 
                    1.8982025386783976`*^-15}, {-30., \
-1.4436391420446515`*^-11}}], 
                    
                    LineBox[{{-30., -1.4436391420446515`*^-11}, {-29., \
-3.478639660495574*^-11}}], 
                    
                    LineBox[{{-29., -3.478639660495574*^-11}, {-28., \
-1.4969973982130096`}}], 
                    
                    LineBox[{{-29., -3.478639660495574*^-11}, {-28., \
-4.8286769816737604`*^-11}}], 
                    
                    LineBox[{{-29., -3.478639660495574*^-11}, {-28., 
                    1.5030026034292536`}}], 
                    
                    LineBox[{{-28., -1.4969973982130096`}, {-27., \
-2.4969973979582374`}}], 
                    LineBox[CompressedData["
1:eJxN0m1IU1EYwPFt4T7kqGHO8CVNram1zdSyc+8ZVCiLhaabZo5ladQyTaUa
NnSQVBQWKFHQyyB7WelKY1RqUnAespoRJM5RGtTIkZURVs7NmYPc2Zf7cA6X
34eH8/9wk/c3aA8KeDyeYvGGvuFRwpwOXXg84yc/Yp+ZgjMY3qZvpo7JWFLU
P4mh5cMm6jPysVPyMQwxho3UG9LY6MohDOdd2dRJdAGDOyWLunjeWjRvxSDR
ZFLDaE+g6iKGdfvk1MbbefyzZgzJheupDXQwzMVlUAdC60UYZNvTqNs8aPFg
2FIspU5NCQ0GeW7YfZWRiweDby7sHR1edYeXhetX06k/fwoNC/GS8HvHEhxH
ExwsmOoV1EK9PUJvZ+GRNZvTw4IsPp/Tw0L+NjWnh4VWeyH1GtrDQqBaw+lh
4XJNKaeHAX1vGaeHgZ3qck4PA0ekOk4PA/0FOk4PAypbeH9vzuzJrGIG2l2i
3xEeP1m9atgqwQzsUmQlBu1+Ykv1uqLSGLjSNyi5VuEnC6oD4oxoBkrqXr4f
/+4jK88l7S4XMNCmzakiWh9Z8Ky13fyDIM8g7lVbZklXxQmhYAKBsUvvNL3w
kkTvigbzKIKUWMlAwdAM2dP5b2L5awQFT5WHX3X/JXd9SdWWewiUdsfPnhvT
pLFOYDndioDfOV/r10yRd5F3mofqEXwrjSo5dPwreTjCX1pThuDXwLJbQcEX
EkMSVdVbEUi73Q+M/I8kwhXIHJQheKKt9bDjTmIWX3I0xSMQDreMWOLekCbj
lKhdhEB7v3m6r/E5Cf/PCGTu3Emn1kr+A+XoiwA=
                    "]], 
                    
                    LineBox[{{-27., -2.4969973979582374`}, {-26., \
-2.4969973975771307`}}], 
                    
                    LineBox[{{-26., -2.4969973975771307`}, {-25., \
-2.496997397772502}}], 
                    
                    LineBox[{{-25., -2.496997397772502}, {-24., \
-0.039694395639740726`}}], 
                    
                    LineBox[{{-28., -4.8286769816737604`*^-11}, {-27., \
-0.4969973981805521}}], 
                    LineBox[CompressedData["
1:eJwl0n0s1AEYB3DKSboiXdvFVXNqyEvGxu+leuqPEJ0rtaSTrssVk+QqNdoq
6w91Ssu8DHNap7etdsvlbZpn6Jiwy3HE3bkc8tKal8uIXvj57nn27LM9fzx/
PO6S1GjpGhsbG//lXpmr2YekIINqlLd9fBlusvbP0qhNGM9OSS0C9nAu+I3S
KKDc46/9fg1+XRzznJ7GaLVg1FWpBoctKfoQDY01ZdPr7jh/BMWLIv5UJY0+
/n/XB7k3gTWnsHlnOY2Fc8GsMV4r2GmS6jUPaSz3en4jPrMDtMedHEeu0egh
eeYXWfYFYgKy32aIaGwedhwIU3XDqZNua+3CaLQkVYhiXXtB22M9Fh5Io1tF
EldNf4VWNacwbDuNSQUxm09zBiBkOqPH1oHG9v2poYeVBuDLPdk3ZygML1FV
Z04aITvLlX5poLD/nZt0cdwEib0nJE81FN6/pYpqVgxC8wPdPUJFIf92CJVs
b4aLTCjcFOE1WcQ1w4JS+FsppLD7327Gjy3EclEY6sxnvIu/EgoTMnmMq8Qb
lotCn0NbGUcorEcUVhJLz7MZm4wrIbHWYMtYxmtJ47WQePf9r4kV24tULJGK
xJmh74xX7yFxU0clY6dDt/a0C0m8wnHhC1hmGDkxEHWXJPHcbPETXcEgWMpy
dVkeJJYsfK4z9phgIz+/RreRxDy6urGmxQgS4+Qf2TyBkbVxrxIuG2BIm/dc
bCEQZfXJ35r64fFSzuvSTgKnL+nZezv74IK418mzjkBz0Ru5QK6HhCWZ/l8F
gTkscmzfog4mJBaH0EcEyisLY2TlWjjD5h7YkU7gdW5itHS+DarmndOzxQT6
7+TVLfI+wYJnp+r+UQIfzhW0C882gGex8KcLtbwf++Ot7swHAGG+f5A3gYGd
VwPspa/gYJgibWQbgZrFPtEUPxd8s1KqvdkExk2KGgdu5zSs/jOBvoPBo13R
yob/jP9rGw==
                    "]], 
                    
                    LineBox[{{-27., -0.4969973981805521}, {-26., \
-0.4969973987113276}}], 
                    
                    LineBox[{{-26., -0.4969973987113276}, {-25., \
-0.49699739873949356`}}], 
                    
                    LineBox[{{-25., -0.49699739873949356`}, {-24., \
-0.039694395639740726`}}], 
                    
                    LineBox[{{-28., 1.5030026034292536`}, {-27., 
                    1.5030026036688484`}}], 
                    LineBox[CompressedData["
1:eJwl0n1MzHEcB/DrfkUqY60mt8NQ1tPE2s739/td+35HOHchhaUj9GB1WQ+n
1sNCNianhZwi0kzlqZ1c1K2oT5HTA9GZ1K266UGm3ajDyVXq7r33Z5+9/vv8
8VkdnRwWx+VwOOvnZn7bIgTHMyg9xMWMc2PjVLcnWYj0+1JwtNuMU8KrvIQj
LCj9T/AUmr+4q/Nj3OePLGjOfl/2unEKl7wfSDrRwkJzoOS8+8g/rItqJ4tV
LDyjC+Mz/aZxTkaxvqKYhctF0GC8MoMLedtw0GkWfL0SidCFQzxEnxJ1sSzk
PvymVwxyiBNHdDRexIJYL90w1GJHbou/xE5sYuFN9M/ZdCGXHPH9oGtcx0K3
k3pnwz0uCS1zU711Y0GmK11eY0+RxAdVkyu5LOQ/fxpzKJwiatGNcrWRAeHr
3371Vynie7IP8voYyPwRI29rpUjnthTRnVYGCGsRXPxGkdKKSNbymIGiyqas
2RmKHLOGgQ+pdcy6Bfbkb/nuqfLdDOwKbbC6YAjNlYGMmkarPdfMh4GQm81W
1x5xnisDHQtfWS0uM+0oM9Hwy9xq9UD/fGjoSNJaLedrU/laGkIS3li9QFrt
IK2mIWvMZts9NAhkNr/K6fGRh9JQGaNrf26hSN3miBAPIQ0lL03ZuQaKCDVj
byN8aHBX+EtSn1Bkf3+eKtCDBte6bPZSMkUc1Mh435EGpXhQ0sejiEhgztdM
IbgVHJkTVsMlq2RaRbQRgXfF984/iEsu7Kz8WjmEgDl+Naj9kR3JMyjvnutD
0HVjz7s2ZzuyJFRtaK1FUGwyrdiYYMHjWWGrhq8h8FTWS9IC/mB+VPphQwaC
ra4mr0OyCVxq4d2pP4hgvH/zgZ7AcZyyb8uwPBhB2t5zTThnGF+PN3ovCkCw
fenh6VGpHrsK+Mkn+Qh6hxyk7Wu7sOFFZ22XC4JTm3qDxhJqse2fEfgPCka7
w8qb/gPodlVp
                    "]], 
                    
                    LineBox[{{-27., 1.5030026036688484`}, {-26., 
                    1.5030026038355417`}}], 
                    
                    LineBox[{{-26., 1.5030026038355417`}, {-25., 
                    1.5030026048402207`}}], 
                    
                    LineBox[{{-25., 
                    1.5030026048402207`}, {-24., -0.039694395639740726`}}], 
                    
                    LineBox[{{-24., -0.039694395639740726`}, {-23., \
-0.03969439514241772}}], 
                    
                    LineBox[{{-23., -0.03969439514241772}, {-22., \
-0.03969439514045668}}], 
                    
                    LineBox[{{-22., -0.03969439514045668}, {-21., \
-1.5141362306974018`}}], 
                    
                    LineBox[{{-22., -0.03969439514045668}, {-21., \
-0.0396943954014533}}], 
                    
                    LineBox[{{-22., -0.03969439514045668}, {-21., 
                    1.4858637698420138`}}], 
                    
                    LineBox[{{-21., -1.5141362306974018`}, {-20., \
-2.514136230992476}}], 
                    LineBox[CompressedData["
1:eJxN0l9IU1EcwPGlqIEphSutJKslKjrbufdMbL0UppCJG0I5UnRlSUUoNR1l
cw6XWmq2ZVbYVHRSZCRmtRUa5/eSC0tSFuSfspymTR9Mc04tJXf2cn+cw+XD
4Ry+D3fP6fy0s148Hi92fbu/nhFDUdUNx+SBJeLY3nVl9Q+GqdcV1FujvKWW
SQzR/eXUOuFgqXAQQ+JAGbUoQsJXvMfAdF+nDtvmvoDBpddRy1ZapSutGPTS
UmqwPVs+ZcDAW9JSK1sSNpSrMSRVllDn0sGg8NVQ0+tSDDqipq4Zj19fGOwb
PRbsdQ8Gjf0atUXhb1b4Y0hL8ZwfbVpYXyycSSqmHv3mHhY6+j3vXw61Xgq1
shA/4+nxzejwyehg4W+djtPDwoqlhtPDQjr/DqeHhThBHaeHhXsT96nNtIeF
Ank9dTLtYeCzxsjpYcCS3sjpYWDHeBOnh4HV3c2cHgb4X0zUKdLJRSRjwJj8
Kw5HLZGR6lpt8EEGZra83BXqcpHAsDzv4AgGvIR+zY0mF5nyUZWI+Ax8fTj2
tivWRXIPP13I8WJAm5VQqHywSKoHAnKezyFwFMRY3/1wErm5oTfEjiDku/FF
p5+T9M6ejK63IQhsuCuRBCyQseLEMnEPgg/tQZmZc/NENp+7780jBKnHbE7V
5t8kvCcyu/4mgpaKi6rRvmmSvVwpHspD0Ca6Kq90/CSrVbceF55A0Gn4aJhT
jhGeRvQq/xCCouN9RyKHh8m5T8osawyCWlcNf+KJjcRp003qnQgyg7rDhe29
5Lx+RHd7EwK8f3ptrZwQz/+M4MKsYOhfahv5D8PPljs=
                    "]], 
                    
                    LineBox[{{-20., -2.514136230992476}, {-19., \
-2.5141362311150304`}}], 
                    
                    LineBox[{{-19., -2.5141362311150304`}, {-18., \
-2.514136231030931}}], 
                    
                    LineBox[{{-18., -2.514136231030931}, {-17., \
-0.05138387823714548}}], 
                    
                    LineBox[{{-21., -0.0396943954014533}, {-20., \
-0.514136230075478}}], 
                    LineBox[CompressedData["
1:eJwlknlI03EYxk3SRNMKkjRMTQ2PsvY7ZiqDrwnmtZTEvKaxvCus1A6lpYmz
zDwyykhEO5bpkDWaWat0b2xumbl5tJmpW0xZlqZkFrWmNreH5+Xlw8vL+/zx
7kw/HZdlaWFhsddYa90sKoRr/KaH4zii5Brbwx9/kpDa01AWT6kVKX+H8D10
JPz9SquUFV5HhbSHOzQqEvRqwjN0phVRjmJ37aUkLLiyh75HdaJNqbMePAEJ
t3dLKZrFbrQ5YOgltJDQZcu/o6dKEGVOywyrIoE236bbNt6HCkrcHWmFJDDg
UIVsRoGUc9dGOSkkVIUohOx9I0h/eY8D4yAJU5VSec4TJVr5l/dLipFQLMta
tZweRdq0mJoZFxKiDB3RCQNjqLV1QCnaQEKCd5Pg2MlxFKmaldMXCWiOIPbv
6plA8rm2oroJAjyYBap7vZMI/7Z+5KqUAG1ecv2HMjU6L1+dpPIJUOfP5MCi
GmWbRIDj1sCUTCcN0nNijSbAjnfAxLVTgUYTEF4fYWJPjzURIO2mm7iLaWc0
AZVEjImjWpYiW5ZwqF00z9WTa8JhVG/eL3CR5bvIcMikh5rYmsG3YvBxoH4x
3zfnwUFb4mDi58np7P5YHHyiCZ6zMS+7q7zrUhAOt5pfc4NK1WiA9c7A8sTB
q5gbKxFNorqOgMQ+exxUnwxNQsEEeh/2tjf9DwZcseCmM2McVUSURkROYcAh
FJTpZ2PoRSdDw5JjAH6xF5wloyi3Kq1qWYjBunYiW1ihRPV97Mj+Rxhk8ljL
Yv0wmq8+Xu5Sg4GbTVK+T7wCXZHoClfOYbBZBDZ5rn0o6Yxhez4Tg4Yy4s2R
eDHKuMEtOkvHILuFSe2dfYXavH5U2wRjMBh3ys/b+iny9h9M9PfFYDjYXfxg
4T763B4+pnXGwEYnSrrolItGGhO3+G7EIMMNHluxGkXmf8bgxILnmCGGK/oP
5htwNg==
                    "]], 
                    
                    LineBox[{{-20., -0.514136230075478}, {-19., \
-0.5141362303010044}}], 
                    
                    LineBox[{{-19., -0.5141362303010044}, {-18., \
-0.5141362302740606}}], 
                    
                    LineBox[{{-18., -0.5141362302740606}, {-17., \
-0.05138387823714548}}], 
                    
                    LineBox[{{-21., 1.4858637698420138`}, {-20., 
                    1.4858637696042094`}}], 
                    LineBox[CompressedData["
1:eJwl0n0s1HEcB/BzvxGl1DyUslqdSk34PdTZwvcbOdIT1qg8hN2VZJ07S3nY
VSYMqTRJ85C4MhlWHmrn4TMtymOOwnnY0C2thrgiLjp3772/++z1x2f7/vHZ
GSb0FbBZLJad5q1OXQ6CQXKehWXLPArkCyoK5hgoF/Ic7DIW0Lhv+W4nJQOZ
jf0yP/FfdL+9TzDQx8BzsffbrBuLiN81ejW6mQFVepXNeMESCglow+srGJCs
XTByV6pRkjhnSJrDgMvUniDZ8WX0yZSHnG8ywOU673KXryA39OVKL5+BanG+
raiehUdUHqHhngxcVpvc/lioh9uOjPNnuQwExUq9Ay3ZOJ/T09u4hwFThaCg
KImN/Z+YVXSaMZC23Scid4yNF6Tlc9vZDDTzLlW7ORBYwssteTVFg8y3NOFp
FIF/xisgVUHDNVezd5XPCIx4UZ5F72mYMX+ZImohcJz0/GF1JQ22nZFtyiEC
X9SGBiv94HTjCQIvlpzWlIY70xe0zpxw1JQGIjtUa86u1dDw6HeY1rUh6zSl
AW/ia+1VqDpWqKJg+ZvOoyOroUAeK9BabNUqsmqloL5FZ4OAKv2AKo27dNb9
h4JDMt0+pzvml8ibgheBep3FgwTmZnyO2OxEQdNK/4PLDQQuyE+U++2jIL5k
cjAok8BnCYmNwxYKhrxo6a0TBA5vaI0sNqRgbLZurmeejdvbLxRWLZKQkRfz
3uc+Gyfa8cB/ioRhD+FWlgUb31PGdT+eIEGuKpodTtXD0zP/OqIVJEQWbzg1
OcnC5pPJH+pqSZhX1hhZ71Ujb5eeM4PZJHTbz7i2z/xB+XPDooHrJARYd3i0
2M2i5TVlO2oCSeCmPHTY3/wDieMdg4VHSeBsk4cLTb6ihZOpB9bYk7BkWBr1
Jk2Bsm7m3k2wImHFWJDQfK8T4Y2Rkm5jEiSyDd/5514j3T2TEDHNGVSfKmv6
DxNaYDM=
                    "]], 
                    
                    LineBox[{{-20., 1.4858637696042094`}, {-19., 
                    1.485863770143227}}], 
                    
                    LineBox[{{-19., 1.485863770143227}, {-18., 
                    1.48586377021232}}], 
                    
                    LineBox[{{-18., 
                    1.48586377021232}, {-17., -0.05138387823714548}}], 
                    
                    LineBox[{{-17., -0.05138387823714548}, {-16., \
-0.0513838787861677}}], 
                    
                    LineBox[{{-16., -0.0513838787861677}, {-15., \
-0.0513838786796432}}], 
                    
                    LineBox[{{-15., -0.0513838786796432}, {-14., \
-1.5187114847219894`}}], 
                    
                    LineBox[{{-15., -0.0513838786796432}, {-14., \
-0.051383878660572285`}}], 
                    
                    LineBox[{{-15., -0.0513838786796432}, {-14., 
                    1.4812885150881252`}}], 
                    
                    LineBox[{{-14., -1.5187114847219894`}, {-13., \
-2.5187114843412237`}}], 
                    LineBox[CompressedData["
1:eJxN0ntIU3EUwPEhNYNZuRybikXJdne3u0wUbaBkxZA2SnJiSCPRgaEoWiku
xB4moSVYkYlUNh8zLWoY0jSKfqemucwHpgwrbJZOnVqWj+Yjo+3snx3O5fKB
+4Mv99492jx1hg+LxQpzXe67Z2RQ7DefZTi6QoYjC3+vTTEAqp/ovWr2g9w+
BhoKfqDZmtbNmlYGdl+fQ6cnFNBwk4Hoiln0QZn7AAMO3Qy6bkmpX1IyID/u
QF9p1iyaQxkI5U2jpxRlPn6rUmgxT6L7et0jhfepdjQe10thfWgcHdJ91rVS
6OB+R8cr3COFDcEYOucN37VS6JkcRd8+4HCtBHZd/IJ+9dI9Evg7OoKekFeO
yysloGVb0X6mNI4pTQJq50c05vTS0BpgQS9iDw1Pkru8emiQjZnRmKOgIazN
42zsoeFZfye6CnvE0B7R7dUjhjhbj1ePGJTDA2gO9ojByrV6vR8K+E7P9zpk
KNuRX0dBemPjqfqYFXIsPKAqu5CCh0lGec0WV++ZvERTAgXjvv7r5W1OEn76
vipJQkEgWAz5sU7C9r976TCbgvjikaiUxj+kIDfzV6ldBDmxccbo6WVSVOJb
K+gWQTlrY+t2zjIJVuqubjwWgd7CTf7GWSKJXe2Pom6JwFh1ofTpzAIRJ9zQ
xSSKYF/IkefTtfOEV7/zXTBfBB1rTauBNgcJeq29M2QTwmInb3i2ZoJENKXa
M4xCIMv0tbfVNqI9wTUNlgjhn1xVvTBnJS2DRb6Ck0JQNQfrBzL7ySbBvU9R
+4WQWjGRpfgMREedk4UFuZ4/b4nc9sJAPP+zEFIuL3z9kNMQ9x+JlYwS
                    
                    "]], 
                    
                    LineBox[{{-13., -2.5187114843412237`}, {-12., \
-2.5187114840805114`}}], 
                    
                    LineBox[{{-12., -2.5187114840805114`}, {-11., \
-2.5187114846038687`}}], 
                    
                    LineBox[{{-11., -2.5187114846038687`}, {-10., 
                    0.03598630043529799}}], 
                    
                    LineBox[{{-14., -0.051383878660572285`}, {-13., \
-0.5187114850758682}}], 
                    LineBox[CompressedData["
1:eJwl0nlI0wEUB/DZOlZmI5JZaaKw+xeWhWlZe1jztlhSISZmcyrmlVqkGWXM
ytusJTlFM6+wZipm1rS9YaKzOcg8mpsj2/AkEy3zj67168v38fj89/54ruKU
0Jg1FArFzTr/9v/sxhx6n/HniSbVRV34cvM0gWJJvJbdIVdVdj2sF2gJlD2w
bPTmSSB74BXjuYJAR3Nr3GpeDTivdvtRCgnMt5OeK+puhQzfeo99cQTWZhw/
+ytfCfltKWYhEJiwo3JbA6MHzsAukZc9gfZVNZOHh/rBOK/I2jzFx4Cglw7H
VnXg1Okaq27n4/qShfCIt0Mwt9ibFFTIxxHDksgmeAQWI/dnekfzsbxCabp3
awz2rrmQKzvIR5EuYO3WS3qoG4+vOE3n40q6XJ3FMEDozL626xYe3i1sYXxI
NMIBoldLf8VD5+0FVIcrE3Cq1mWeVsTDKgY/19/DBE9EvnYXonhIzy2qkzSa
QEuGi417tGHJgyZYDqz+FljNxczBYdJOfanWcvFQwjhpIRkuTtEmSCeoGYlq
BhevNRhJywSz9wWzHKQI9aS7lP/CweTJIdIWr2KzVzEH+69rSNt2RFnLwS1O
3aQHyXvYqH99h/QjafjCzWo2ElRORc4zE2gUkdTGNDaO1bCj+wJNEBSstz3s
Z3XZ7ZYD9RPgHDGwwWcnG90++0mH3hgh5JP7jxcLLDRI4wzyMgPoxujj8h4W
fsqa6SzZPQ4NRyUtXx+y8NCAxrE1+yOMuuy52p7Mwi/Jtmv/3BuFs2kXPWeF
LPwer0jNjB4GM8s/ccmehd9K3RWUzvfgI76qX5pmonNev8ODJB2kczbdmOtm
Yim1wLFZpYErl1ci9GVMFNxvigmJ7YXQEEhXpTGR48VZSTmvht9PLerKk0yU
WWzk7mIlZMumAlL3M1EkTRkuamqH0XW+tCPbmUgrd/Oc9VTA/39mYlj2kuld
4mP4CxuCbGc=
                    "]], 
                    
                    LineBox[{{-13., -0.5187114850758682}, {-12., \
-0.5187114838329868}}], 
                    
                    LineBox[{{-12., -0.5187114838329868}, {-11., \
-0.518711485864997}}], 
                    
                    LineBox[{{-11., -0.518711485864997}, {-10., 
                    0.03598630043529799}}], 
                    
                    LineBox[{{-14., 1.4812885150881252`}, {-13., 
                    1.4812885158103777`}}], 
                    LineBox[CompressedData["
1:eJwl0nsslXEYB/Djfa2amltDVKeL9xznvOeEzHQifr9cVodqUcnlIMU0d7WE
SO6kIUkpC2WEXAqxpfW4z6UlyiWX2nKZLiyM4x7v+e559uzzx7M9fzwHLgfY
eRIsFkt3ozenLEKQnyAznSsX0O6WdonphAAC6YrywFApsn7qYBPSLoCdzpYm
WW6LKCmyqKOiSAB/QkD01XMJDVx7PzweKwBpDPWSureMjG9kRGlJBGAcHpiU
0L2CSuN1a2z0BPDaPX9oVbSG9AuTb4et0eBqCHkJH9ZRc29JX0EbDfuX3H1V
K1nYRy21oSuNhpKuPvDOlMPdg41towE0VMj7p60qEbijJa8w4jQNQhW9EfNb
BD7Xy5M85dOwZ16r2LifwF4KjhOm8jREVh6eG+WSePsVA7HnMB/sxdfrjnuR
GP+oilKp5sOLmu+EbRaJiegfaebJfPBYC25VfU/i8yerg6VufMjae1QhoZvE
nUx4QAQLOkoHSDwrzpkT5/BA8f4hxntagzaKB35aeowtmfBgn6o+Y596dd96
dR4cDJE5w2zygdmkDtw8JXPdu83oADtVtj8qSvkpStGBXViX8fa3lzZKBzzc
hIw/MvdwoaFVm/HZ1HTRUC4X2HX+EtsuEt8dMhMqh3ChSOmC8rEqEodXfS68
ascFl4becb84Emtr2JSM6XHB7Mvs93ELEsfIlxglKHPBxurVcsE0gR+H/xOf
nuNArBrLuCyRwJ6R7LEjgxyYtJx+sqJI4MkdBttONHMgrCeUnR4th7U5wsqw
Nxwwqs9p8v/JwvMq1kuxPhywstXUqHVaQevPDBVNaA44tNVLYlwWkGnn76ns
KQryf4mc0KcZVJ4VkF1cS8EZ71V2v9tfZL8V1D0SKWi05S6qro8hA7VhlzYX
Ci5qDMS5SkeQeWNL0DcRBVv0c6WOZT0oXiXC7pEmBQaDFg/1cROS/TMFDndm
Rjp8n6P/EeFaCw==
                    "]], 
                    
                    LineBox[{{-13., 1.4812885158103777`}, {-12., 
                    1.481288516016236}}], 
                    
                    LineBox[{{-12., 1.481288516016236}, {-11., 
                    1.4812885158052616`}}], 
                    
                    LineBox[{{-11., 1.4812885158052616`}, {-10., 
                    0.03598630043529799}}], 
                    
                    LineBox[{{-10., 0.03598630043529799}, {-9., 
                    0.035986300893285354`}}], 
                    
                    LineBox[{{-9., 0.035986300893285354`}, {-8., 
                    0.03598630094296645}}], 
                    
                    LineBox[{{-8., 0.03598630094296645}, {-7., 
                    0.035986300984518924`}}], 
                    
                    LineBox[{{-7., 0.035986300984518924`}, {-6., 
                    0.035986301016692236`}}], 
                    
                    LineBox[{{-6., 0.035986301016692236`}, {-5., 
                    0.03598630104059483}}], 
                    
                    LineBox[{{-5., 0.03598630104059483}, {-4., 
                    0.03598630105727831}}], 
                    
                    LineBox[{{-4., 0.03598630105727831}, {-3., 
                    0.03598630106844798}}], 
                    
                    LineBox[{{-3., 0.03598630106844798}, {-2., 
                    0.035986301075752306`}}], 
                    
                    LineBox[{{-2., 0.035986301075752306`}, {-1., 
                    0.035986301080100765`}}], 
                    
                    LineBox[{{-1., 0.035986301080100765`}, {
                    2.2035254216632553`*^-18, 0.03598630108203338}}]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-30.4, \
-8.661075571252438*^-12}, {-0.25, 0}, 
                    Offset[8], {1., -1.4438289622985194`*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"4\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"4", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-29.4, \
-2.664639453115205*^-11}, {-0.25, 0}, 
                    Offset[8], {1., -2.0350005184509223`*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"64", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-28.400000000000002`, \
-0.8981984389417202}, {-0.25, 0}, 
                    Offset[8], {1., -1.4969973981782232`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"64", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-28.400000000000002`, \
-4.288662053202486*^-11}, {-0.25, 0}, 
                    Offset[8], {1., -1.3500373211781864`*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"64", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-28.400000000000002`,
                     0.9018015620436376}, {-0.25, 0}, 
                    Offset[8], {1., 1.50300260346404}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"64", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-27.4, -2.096997398060146}, \
{-0.25, 0}, 
                    Offset[8], {1., -0.9999999997452278}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-26.31111111111111, \
-1.4969973984537917`}, {-0.25, 0}, 
                    Offset[8], {
                    0.17777777777777715`, -1.394575566138201*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-26.4, -2.496997397729573}, \
{-0.25, 0}, 
                    Offset[8], {1., 3.8110670175228734`*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-25.4, -2.4969973976943534`}, \
{-0.25, 0}, 
                    Offset[8], {1., -1.95371274713807*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-24.448973997042668`, \
-1.142959546452231}, {-0.25, 0}, 
                    Offset[8], {1., 2.457303002132761}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-27.4, -0.29819843892764597`}, \
{-0.25, 0}, 
                    Offset[8], {1., -0.49699739813226534`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-26.22222222222222, 
                    0.5030026047115146}, {-0.25, 0}, 
                    Offset[8], {0.1777777777777665, -6.924771867033996*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-26.4, -0.4969973984990174}, \
{-0.25, 0}, 
                    Offset[8], {1., -5.307754791239461*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-25.4, -0.4969973987282271}, \
{-0.25, 0}, 
                    Offset[8], {1., -2.8165969556681603`*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-24.4, -0.22261559687964186`}, \
{-0.25, 0}, 
                    Offset[8], {1., 0.4573030030997528}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-27.4, 
                    1.5030026035730106`}, {-0.25, 0}, 
                    Offset[8], {1., 2.3959478845370086`*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-26.31111111111111, 
                    2.503002604326257}, {-0.25, 0}, 
                    Offset[8], {0.17777777777777715`, 
                    2.1119017645787608`*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-26.4, 
                    1.5030026037688644`}, {-0.25, 0}, 
                    Offset[8], {1., 1.666933258093195*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-25.4, 
                    1.503002604438349}, {-0.25, 0}, 
                    Offset[8], {1., 1.0046790066553513`*^-9}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-24.4, 
                    0.5773844045522439}, {-0.25, 0}, 
                    Offset[8], {1., -1.5426970004799614`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-23.4, -0.03969439534134692}, \
{-0.25, 0}, 
                    Offset[8], {1., 4.973230091631642*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-22.4, -0.039694395141241096`}, \
{-0.25, 0}, 
                    Offset[8], {1., 1.9610355006527413`*^-12}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-21.4, -0.9243594964746237}, \
{-0.25, 0}, 
                    Offset[8], {1., -1.474441835556945}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-21.4, -0.03969439529705465}, \
{-0.25, 0}, 
                    Offset[8], {1., -2.6099662014944514`*^-10}], 
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-21.4, 
                    0.8756405038490257}, {-0.25, 0}, 
                    Offset[8], {1., 1.5255581649824705`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-20.4, -2.1141362308744465`}, \
{-0.25, 0}, 
                    Offset[8], {1., -1.0000000002950742`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-19.31111111111111, \
-1.5141362308339463`}, {-0.25, 0}, 
                    Offset[8], {
                    0.17777777777777715`, -9.340705986460307*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-19.4, -2.5141362310660087`}, \
{-0.25, 0}, 
                    Offset[8], {1., -1.2255441106390208`*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-18.4, -2.5141362310645707`}, \
{-0.25, 0}, 
                    Offset[8], {1., 8.409939411535561*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-17.449352612161093`, \
-1.1580280810709112`}, {-0.25, 0}, 
                    Offset[8], {1., 2.4627523527937853`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-20.4, -0.3243594962058682}, \
{-0.25, 0}, 
                    Offset[8], {1., -0.47444183467402473`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-19.22222222222222, 
                    0.4858637696860044}, {-0.25, 0}, 
                    Offset[8], {0.1777777777777736, 4.024131028401712*^-11}], 
                    
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-19.4, -0.5141362302107939}, \
{-0.25, 0}, 
                    Offset[8], {1., -2.2552637535255826`*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-18.4, -0.5141362302848381}, \
{-0.25, 0}, 
                    Offset[8], {1., 2.6943780540023*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-17.4, -0.23648481905191157`}, \
{-0.25, 0}, 
                    Offset[8], {1., 0.46275235203691517`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-20.4, 
                    1.485863769699331}, {-0.25, 0}, 
                    Offset[8], {1., -2.3780444280419033`*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-19.31111111111111, 
                    2.4858637703524735`}, {-0.25, 0}, 
                    Offset[8], {0.17777777777777715`, 
                    1.0367129377186757`*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-19.4, 
                    1.48586376992762}, {-0.25, 0}, 
                    Offset[8], {1., 5.390174973030071*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-18.4, 
                    1.4858637701846829`}, {-0.25, 0}, 
                    Offset[8], {1., 6.909317562531214*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-17.4, 
                    0.5635151811426408}, {-0.25, 0}, 
                    Offset[8], {1., -1.5372476484494655`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-16.4, -0.05138387856655881}, \
{-0.25, 0}, 
                    Offset[8], {1., -5.490222235171593*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-15.4, -0.051383878722253}, \
{-0.25, 0}, 
                    Offset[8], {1., 1.0652450449510908`*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-14.4, -0.9317804423050509}, \
{-0.25, 0}, 
                    Offset[8], {1., -1.4673276060423461`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-14.4, -0.05138387866820065}, \
{-0.25, 0}, 
                    Offset[8], {1., 1.9070911516649858`*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-14.4, 
                    0.8682195575810179}, {-0.25, 0}, 
                    Offset[8], {1., 1.5326723937677684`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-13.4, -2.11871148449353}, \
{-0.25, 0}, 
                    Offset[8], {1., -0.9999999996192344}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-12.31111111111111, \
-1.5187114841243061`}, {-0.25, 0}, 
                    Offset[8], {0.17777777777777715`, 
                    6.113598516321872*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-12.399999999999999`, \
-2.5187114841847964`}, {-0.25, 0}, 
                    Offset[8], {1., 2.6071234060509596`*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-11.4, -2.518711484394526}, \
{-0.25, 0}, 
                    Offset[8], {1., -5.233573574514594*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-10.455758242477604`, \
-1.1283382721355815`}, {-0.25, 0}, 
                    Offset[8], {1., 2.5546977850391666`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-13.4, -0.3317804425097498}, \
{-0.25, 0}, 
                    Offset[8], {1., -0.4673276064152959}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-12.222222222222221`,
                     0.4812885158204834}, {-0.25, 0}, 
                    Offset[8], {0.17777777777777537`, 
                    2.994832160041483*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-12.399999999999999`, \
-0.5187114843301394}, {-0.25, 0}, 
                    Offset[8], {1., 1.2428813533915672`*^-9}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-11.4, -0.518711485052193}, \
{-0.25, 0}, 
                    Offset[8], {1., -2.032010226749037*^-9}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-10.4, -0.18589281408482003`}, \
{-0.25, 0}, 
                    Offset[8], {1., 0.5546977863002951}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-13.4, 
                    1.4812885155214768`}, {-0.25, 0}, 
                    Offset[8], {1., 7.222524800454266*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-12.31111111111111, 
                    2.4812885163492204`}, {-0.25, 0}, 
                    Offset[8], {0.17777777777777715`, 
                    1.060036503020001*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-12.399999999999999`,
                     1.4812885159338927`}, {-0.25, 0}, 
                    Offset[8], {1., 2.058582193598113*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-11.4, 
                    1.4812885158896512`}, {-0.25, 0}, 
                    Offset[8], {1., -2.1097434910188895`*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-10.4, 
                    0.6141071865832834}, {-0.25, 0}, 
                    Offset[8], {1., -1.4453022153699635`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-9.399999999999999, 
                    0.03598630071009041}, {-0.25, 0}, 
                    Offset[8], {1., 4.5798736331148504`*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-8.4, 
                    0.03598630092309401}, {-0.25, 0}, 
                    Offset[8], {1., 4.9681092573194974`*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-7.4, 
                    0.035986300967897934`}, {-0.25, 0}, 
                    Offset[8], {1., 4.1552476737205524`*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"512", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-6.4, 
                    0.03598630100382291}, {-0.25, 0}, 
                    Offset[8], {1., 3.21733126251722*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-5.4, 
                    0.03598630103103379}, {-0.25, 0}, 
                    Offset[8], {1., 2.3902595180924635`*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"256", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-4.4, 
                    0.03598630105060492}, {-0.25, 0}, 
                    Offset[8], {1., 1.6683480985602017`*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"64", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-3.4, 
                    0.03598630106398011}, {-0.25, 0}, 
                    Offset[8], {1., 1.116966935610364*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"64", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-2.4000000000000004`,
                     0.03598630107283057}, {-0.25, 0}, 
                    Offset[8], {1., 7.304323812462599*^-12}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"3\"", "\"300\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"3", "300"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.4, 
                    0.03598630107836138}, {-0.25, 0}, 
                    Offset[8], {1., 4.348459092806678*^-12}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"300\"", "\"3\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"300", "3"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-0.4, 
                    0.03598630108126033}, {-0.25, 0}, 
                    Offset[8], {1., 1.9326137912223373`*^-12}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"300\"", "\"3\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"300", "3"}, "\[Cross]"], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], 
                    StyleBox[{
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-31., 1.8982025386783976`*^-15}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-30., -1.4436391420446515`*^-11}], 
                    Offset[{10, 10}, {-30., -1.4436391420446515`*^-11}]]}, 
                    InsetBox[
                    PaneBox[
                    StyleBox[
                    "\"\:2217\"", StripOnInput -> False, FontSize -> 20], 
                    ImageSize -> {11, 
                    28}], {-30., -1.4436391420446515`*^-11}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConvolutionLayer", "[", 
                    RowBox[{"64", ",", 
                    RowBox[{"{", "3", "}"}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", "1", "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn", Bold], 
                    Style[
                    HoldForm[
                    ConvolutionLayer[
                    64, {3}, "PaddingSize" -> {1}, "Input" -> {4, 300}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-29., -3.478639660495574*^-11}], 
                    Offset[{10, 10}, {-29., -3.478639660495574*^-11}]]}, 
                    InsetBox["\"P\"", 
                    Offset[{0, -1}, {-29., -3.478639660495574*^-11}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"pol\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"PoolingLayer", "[", 
                    RowBox[{
                    RowBox[{"{", "3", "}"}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", "1", "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["pol", Bold], 
                    Style[
                    HoldForm[
                    
                    PoolingLayer[{3}, "PaddingSize" -> {1}, 
                    "Input" -> {64, 300}]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-28., -1.4969973982130096`}], 
                    Offset[{12, 12}, {-28., -1.4969973982130096`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-28., -1.4969973982130096`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn1a\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn1a", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-28., -4.8286769816737604`*^-11}], 
                    Offset[{12, 12}, {-28., -4.8286769816737604`*^-11}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-28., -4.8286769816737604`*^-11}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn1b\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn1b", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-28., 1.5030026034292536`}], 
                    Offset[{12, 12}, {-28., 1.5030026034292536`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-28., 1.5030026034292536`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn1c\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn1c", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-27., -2.4969973979582374`}], 
                    Offset[{12, 12}, {-27., -2.4969973979582374`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-27., -2.4969973979582374`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn1a1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn1a1", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-24., -0.039694395639740726`}], 
                    Offset[{10, 10}, {-24., -0.039694395639740726`}]]}, 
                    InsetBox[
                    StyleBox[
                    "\"+\"", StripOnInput -> False, FontSize -> 
                    14], {-24., -0.039694395639740726`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"trd1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Plus", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"128", ",", "300"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"128", ",", "300"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"128", ",", "300"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"128", ",", "300"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"128", ",", "300"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"128", ",", "300"}], "}"}]}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["trd1", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[
                    Plus, "Inputs" -> {{128, 300}, {128, 300}, {128, 300}, {
                    128, 300}, {128, 300}, {128, 300}}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-26., -2.4969973975771307`}], 
                    Offset[{12, 12}, {-26., -2.4969973975771307`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-26., -2.4969973975771307`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn1a2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn1a2", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-25., -2.496997397772502}], 
                    Offset[{10, 10}, {-25., -2.496997397772502}]]}, 
                    InsetBox["\"P\"", 
                    Offset[{0, -1}, {-25., -2.496997397772502}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"pol1a\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"PoolingLayer", "[", 
                    RowBox[{
                    RowBox[{"{", "3", "}"}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", "1", "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"128", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["pol1a", Bold], 
                    Style[
                    HoldForm[
                    
                    PoolingLayer[{3}, "PaddingSize" -> {1}, 
                    "Input" -> {128, 300}]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 10), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-27., -0.4969973981805521}], 
                    Offset[{12, 12}, {-27., -0.4969973981805521}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-27., -0.4969973981805521}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn1b1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn1b1", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 11), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-26., -0.4969973987113276}], 
                    Offset[{12, 12}, {-26., -0.4969973987113276}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-26., -0.4969973987113276}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn1b2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn1b2", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 12), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-25., -0.49699739873949356`}], 
                    Offset[{10, 10}, {-25., -0.49699739873949356`}]]}, 
                    InsetBox["\"P\"", 
                    Offset[{0, -1}, {-25., -0.49699739873949356`}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"pol1b\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"PoolingLayer", "[", 
                    RowBox[{
                    RowBox[{"{", "25", "}"}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", "12", "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"128", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["pol1b", Bold], 
                    Style[
                    HoldForm[
                    
                    PoolingLayer[{25}, "PaddingSize" -> {12}, 
                    "Input" -> {128, 300}]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 13), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-27., 1.5030026036688484`}], 
                    Offset[{12, 12}, {-27., 1.5030026036688484`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-27., 1.5030026036688484`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn1c1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn1c1", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 14), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-26., 1.5030026038355417`}], 
                    Offset[{12, 12}, {-26., 1.5030026038355417`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-26., 1.5030026038355417`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn1c2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn1c2", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 15), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-25., 1.5030026048402207`}], 
                    Offset[{10, 10}, {-25., 1.5030026048402207`}]]}, 
                    InsetBox["\"P\"", 
                    Offset[{0, -1}, {-25., 1.5030026048402207`}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"pol1c\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"PoolingLayer", "[", 
                    RowBox[{
                    RowBox[{"{", "75", "}"}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", "37", "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"128", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["pol1c", Bold], 
                    Style[
                    HoldForm[
                    
                    PoolingLayer[{75}, "PaddingSize" -> {37}, 
                    "Input" -> {128, 300}]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 16), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-23., -0.03969439514241772}], 
                    Offset[{10, 10}, {-23., -0.03969439514241772}]]}, 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzF1s9LG0EUB/CNtpKLtvVmC4q3loooolgqBUUjHnIwNhSiRnZ+iSARkoh4
MeBJCJ7Egyi0Je5MD+JdSr3Yf6A92HMFPVr0YitofOtO7DRaE83s5gtvIXsY
Pnmz83Yb0VSIVRiGkfDDJWTOdMfj5uzQY/gRjiUmxmOUDMSSdJzGO1El3KyD
eg71wNCeoK6FEFqr1rWWEi0+1rbykBDxWcdaedHh81EiMox+ympYKz8l+yjm
C7YNjMc6QHkpyUexmLRtjIhThkRAF0rJvX0YixD07Mz2EWJFdaKU3MvHTKsL
bCeX+4r5rG6Ukjv7oG8vwHbo9E0su4FScicfQvwpPGs/nb6JTcNIVbgFkyna
NzycqYG+fZNn9evY2Hu/mzCZonzhcKoK+vVFntUfGK/Wug2TKcbnY4Rb0naA
0HqD66q/KegjhKdz85eQ9RYvUEpu9THMY7n5S02r1yuUkv/6oG9v7fkLdY4x
H/ESpeRGHzxjb8D1W864Ga9RSq75oG8vwfbLsfGlcqCU/OOLRj88o4Tvyb5t
eDB/C+XKx8Irj+AcfJfnYcej+Vsolz57/oJp25kjfDcSsZ6UGyZj+3ywl0LO
uH02+rG+3CglQfg+WpS2I5gjzaUuCO/BOV31+pW5JW1/4Kz26PjD/YHprK5q
bRnMBvqS501NA2nD2euSC97V87qqoz0i4HvznY6+5XIBTGFFng==
                    
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSize -> 20, ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}], 
                    TraditionalForm], {-23., -0.03969439514241772}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"rmp1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{"Ramp", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"128", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["rmp1", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[Ramp, "Input" -> {128, 300}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 17), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-22., -0.03969439514045668}], 
                    Offset[{10, 10}, {-22., -0.03969439514045668}]]}, 
                    InsetBox["\"BN\"", 
                    Offset[{0, -1}, {-22., -0.03969439514045668}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"bnl1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"BatchNormalizationLayer", "[", 
                    RowBox[{
                    RowBox[{"\"Channels\"", "\[Rule]", "128"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"128", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["bnl1", Bold], 
                    Style[
                    HoldForm[
                    BatchNormalizationLayer[
                    "Channels" -> 128, "Input" -> {128, 300}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 18), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-21., -1.5141362306974018`}], 
                    Offset[{12, 12}, {-21., -1.5141362306974018`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-21., -1.5141362306974018`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn2a\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn2a", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 19), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-21., -0.0396943954014533}], 
                    Offset[{12, 12}, {-21., -0.0396943954014533}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-21., -0.0396943954014533}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn2b\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn2b", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 20), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-21., 1.4858637698420138`}], 
                    Offset[{12, 12}, {-21., 1.4858637698420138`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]},
                     {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-21., 1.4858637698420138`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn2c\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn2c", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 21), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-20., -2.514136230992476}], 
                    Offset[{12, 12}, {-20., -2.514136230992476}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-20., -2.514136230992476}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn2a1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn2a1", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 22), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-17., -0.05138387823714548}], 
                    Offset[{10, 10}, {-17., -0.05138387823714548}]]}, 
                    InsetBox[
                    StyleBox[
                    "\"+\"", StripOnInput -> False, FontSize -> 
                    14], {-17., -0.05138387823714548}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"trd2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Plus", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"256", ",", "300"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "300"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "300"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "300"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "300"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "300"}], "}"}]}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["trd2", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[
                    Plus, "Inputs" -> {{256, 300}, {256, 300}, {256, 300}, {
                    256, 300}, {256, 300}, {256, 300}}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 23), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-19., -2.5141362311150304`}], 
                    Offset[{12, 12}, {-19., -2.5141362311150304`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-19., -2.5141362311150304`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn2a2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn2a2", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 24), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-18., -2.514136231030931}], 
                    Offset[{10, 10}, {-18., -2.514136231030931}]]}, 
                    InsetBox["\"P\"", 
                    Offset[{0, -1}, {-18., -2.514136231030931}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"pol2a\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"PoolingLayer", "[", 
                    RowBox[{
                    RowBox[{"{", "3", "}"}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", "1", "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["pol2a", Bold], 
                    Style[
                    HoldForm[
                    
                    PoolingLayer[{3}, "PaddingSize" -> {1}, 
                    "Input" -> {256, 300}]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 25), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-20., -0.514136230075478}], 
                    Offset[{12, 12}, {-20., -0.514136230075478}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-20., -0.514136230075478}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn2b1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn2b1", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 26), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-19., -0.5141362303010044}], 
                    Offset[{12, 12}, {-19., -0.5141362303010044}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-19., -0.5141362303010044}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn2b2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn2b2", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 27), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-18., -0.5141362302740606}], 
                    Offset[{10, 10}, {-18., -0.5141362302740606}]]}, 
                    InsetBox["\"P\"", 
                    Offset[{0, -1}, {-18., -0.5141362302740606}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"pol2b\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"PoolingLayer", "[", 
                    RowBox[{
                    RowBox[{"{", "25", "}"}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", "12", "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["pol2b", Bold], 
                    Style[
                    HoldForm[
                    
                    PoolingLayer[{25}, "PaddingSize" -> {12}, 
                    "Input" -> {256, 300}]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 28), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-20., 1.4858637696042094`}], 
                    Offset[{12, 12}, {-20., 1.4858637696042094`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-20., 1.4858637696042094`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn2c1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn2c1", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 29), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-19., 1.485863770143227}], 
                    Offset[{12, 12}, {-19., 1.485863770143227}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-19., 1.485863770143227}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn2c2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn2c2", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 30), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-18., 1.48586377021232}], 
                    Offset[{10, 10}, {-18., 1.48586377021232}]]}, 
                    InsetBox["\"P\"", 
                    Offset[{0, -1}, {-18., 1.48586377021232}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"pol2c\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"PoolingLayer", "[", 
                    RowBox[{
                    RowBox[{"{", "75", "}"}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", "37", "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["pol2c", Bold], 
                    Style[
                    HoldForm[
                    
                    PoolingLayer[{75}, "PaddingSize" -> {37}, 
                    "Input" -> {256, 300}]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 31), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-16., -0.0513838787861677}], 
                    Offset[{10, 10}, {-16., -0.0513838787861677}]]}, 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzF1s9LG0EUB/CNtpKLtvVmC4q3loooolgqBUUjHnIwNhSiRnZ+iSARkoh4
MeBJCJ7Egyi0Je5MD+JdSr3Yf6A92HMFPVr0YitofOtO7DRaE83s5gtvIXsY
Pnmz83Yb0VSIVRiGkfDDJWTOdMfj5uzQY/gRjiUmxmOUDMSSdJzGO1El3KyD
eg71wNCeoK6FEFqr1rWWEi0+1rbykBDxWcdaedHh81EiMox+ympYKz8l+yjm
C7YNjMc6QHkpyUexmLRtjIhThkRAF0rJvX0YixD07Mz2EWJFdaKU3MvHTKsL
bCeX+4r5rG6Ukjv7oG8vwHbo9E0su4FScicfQvwpPGs/nb6JTcNIVbgFkyna
NzycqYG+fZNn9evY2Hu/mzCZonzhcKoK+vVFntUfGK/Wug2TKcbnY4Rb0naA
0HqD66q/KegjhKdz85eQ9RYvUEpu9THMY7n5S02r1yuUkv/6oG9v7fkLdY4x
H/ESpeRGHzxjb8D1W864Ga9RSq75oG8vwfbLsfGlcqCU/OOLRj88o4Tvyb5t
eDB/C+XKx8Irj+AcfJfnYcej+Vsolz57/oJp25kjfDcSsZ6UGyZj+3ywl0LO
uH02+rG+3CglQfg+WpS2I5gjzaUuCO/BOV31+pW5JW1/4Kz26PjD/YHprK5q
bRnMBvqS501NA2nD2euSC97V87qqoz0i4HvznY6+5XIBTGFFng==
                    
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSize -> 20, ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}], 
                    TraditionalForm], {-16., -0.0513838787861677}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"rmp2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{"Ramp", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["rmp2", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[Ramp, "Input" -> {256, 300}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 32), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-15., -0.0513838786796432}], 
                    Offset[{10, 10}, {-15., -0.0513838786796432}]]}, 
                    InsetBox["\"BN\"", 
                    Offset[{0, -1}, {-15., -0.0513838786796432}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"bnl2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"BatchNormalizationLayer", "[", 
                    RowBox[{
                    RowBox[{"\"Channels\"", "\[Rule]", "256"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["bnl2", Bold], 
                    Style[
                    HoldForm[
                    BatchNormalizationLayer[
                    "Channels" -> 256, "Input" -> {256, 300}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 33), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-14., -1.5187114847219894`}], 
                    Offset[{12, 12}, {-14., -1.5187114847219894`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-14., -1.5187114847219894`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn3a\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn3a", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 34), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-14., -0.051383878660572285`}], 
                    Offset[{12, 12}, {-14., -0.051383878660572285`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-14., -0.051383878660572285`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn3b\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn3b", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 35), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-14., 1.4812885150881252`}], 
                    Offset[{12, 12}, {-14., 1.4812885150881252`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-14., 1.4812885150881252`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn3c\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn3c", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 36), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-13., -2.5187114843412237`}], 
                    Offset[{12, 12}, {-13., -2.5187114843412237`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-13., -2.5187114843412237`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn3a1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn3a1", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 37), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-10., 0.03598630043529799}], 
                    Offset[{10, 10}, {-10., 0.03598630043529799}]]}, 
                    InsetBox[
                    StyleBox[
                    "\"+\"", StripOnInput -> False, FontSize -> 14], {-10., 
                    0.03598630043529799}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"trd3\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Plus", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"512", ",", "300"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "300"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "300"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "300"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "300"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "300"}], "}"}]}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["trd3", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[
                    Plus, "Inputs" -> {{512, 300}, {512, 300}, {512, 300}, {
                    512, 300}, {512, 300}, {512, 300}}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 38), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-12., -2.5187114840805114`}], 
                    Offset[{12, 12}, {-12., -2.5187114840805114`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-12., -2.5187114840805114`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn3a2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn3a2", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 39), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-11., -2.5187114846038687`}], 
                    Offset[{10, 10}, {-11., -2.5187114846038687`}]]}, 
                    InsetBox["\"P\"", 
                    Offset[{0, -1}, {-11., -2.5187114846038687`}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"pol3a\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"PoolingLayer", "[", 
                    RowBox[{
                    RowBox[{"{", "3", "}"}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", "1", "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["pol3a", Bold], 
                    Style[
                    HoldForm[
                    
                    PoolingLayer[{3}, "PaddingSize" -> {1}, 
                    "Input" -> {512, 300}]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 40), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-13., -0.5187114850758682}], 
                    Offset[{12, 12}, {-13., -0.5187114850758682}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-13., -0.5187114850758682}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn3b1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn3b1", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 41), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-12., -0.5187114838329868}], 
                    Offset[{12, 12}, {-12., -0.5187114838329868}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 
                    1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-12., -0.5187114838329868}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn3b2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn3b2", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 42), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-11., -0.518711485864997}], 
                    Offset[{10, 10}, {-11., -0.518711485864997}]]}, 
                    InsetBox["\"P\"", 
                    Offset[{0, -1}, {-11., -0.518711485864997}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"pol3b\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"PoolingLayer", "[", 
                    RowBox[{
                    RowBox[{"{", "25", "}"}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", "12", "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["pol3b", Bold], 
                    Style[
                    HoldForm[
                    PoolingLayer[{25}, "PaddingSize" -> {12}, 
                    "Input" -> {512, 300}]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 43), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-13., 1.4812885158103777`}], 
                    Offset[{12, 12}, {-13., 1.4812885158103777`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-13., 1.4812885158103777`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn3c1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn3c1", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 44), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-12., 1.481288516016236}], 
                    Offset[{12, 12}, {-12., 1.481288516016236}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-12., 1.481288516016236}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"cnn3c2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["cnn3c2", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[7], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 45), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-11., 1.4812885158052616`}], 
                    Offset[{10, 10}, {-11., 1.4812885158052616`}]]}, 
                    InsetBox["\"P\"", 
                    Offset[{0, -1}, {-11., 1.4812885158052616`}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"pol3c\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"PoolingLayer", "[", 
                    RowBox[{
                    RowBox[{"{", "75", "}"}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", "37", "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["pol3c", Bold], 
                    Style[
                    HoldForm[
                    
                    PoolingLayer[{75}, "PaddingSize" -> {37}, 
                    "Input" -> {512, 300}]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 46), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-9., 0.035986300893285354`}], 
                    Offset[{10, 10}, {-9., 0.035986300893285354`}]]}, 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzF1s9LG0EUB/CNtpKLtvVmC4q3loooolgqBUUjHnIwNhSiRnZ+iSARkoh4
MeBJCJ7Egyi0Je5MD+JdSr3Yf6A92HMFPVr0YitofOtO7DRaE83s5gtvIXsY
Pnmz83Yb0VSIVRiGkfDDJWTOdMfj5uzQY/gRjiUmxmOUDMSSdJzGO1El3KyD
eg71wNCeoK6FEFqr1rWWEi0+1rbykBDxWcdaedHh81EiMox+ympYKz8l+yjm
C7YNjMc6QHkpyUexmLRtjIhThkRAF0rJvX0YixD07Mz2EWJFdaKU3MvHTKsL
bCeX+4r5rG6Ukjv7oG8vwHbo9E0su4FScicfQvwpPGs/nb6JTcNIVbgFkyna
NzycqYG+fZNn9evY2Hu/mzCZonzhcKoK+vVFntUfGK/Wug2TKcbnY4Rb0naA
0HqD66q/KegjhKdz85eQ9RYvUEpu9THMY7n5S02r1yuUkv/6oG9v7fkLdY4x
H/ESpeRGHzxjb8D1W864Ga9RSq75oG8vwfbLsfGlcqCU/OOLRj88o4Tvyb5t
eDB/C+XKx8Irj+AcfJfnYcej+Vsolz57/oJp25kjfDcSsZ6UGyZj+3ywl0LO
uH02+rG+3CglQfg+WpS2I5gjzaUuCO/BOV31+pW5JW1/4Kz26PjD/YHprK5q
bRnMBvqS501NA2nD2euSC97V87qqoz0i4HvznY6+5XIBTGFFng==
                    
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSize -> 20, ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}], TraditionalForm], {-9., 
                    0.035986300893285354`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"rmp3\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{"Ramp", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["rmp3", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[Ramp, "Input" -> {512, 300}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 47), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-8., 0.03598630094296645}], 
                    Offset[{10, 10}, {-8., 0.03598630094296645}]]}, 
                    InsetBox["\"BN\"", 
                    Offset[{0, -1}, {-8., 0.03598630094296645}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"bnl3\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"BatchNormalizationLayer", "[", 
                    RowBox[{
                    RowBox[{"\"Channels\"", "\[Rule]", "512"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["bnl3", Bold], 
                    Style[
                    HoldForm[
                    BatchNormalizationLayer[
                    "Channels" -> 512, "Input" -> {512, 300}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 48), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-7., 0.035986300984518924`}], 
                    Offset[{10, 10}, {-7., 0.035986300984518924`}]]}, 
                    InsetBox[
                    PaneBox[
                    StyleBox[
                    "\"\:2217\"", StripOnInput -> False, FontSize -> 20], 
                    ImageSize -> {11, 28}], {-7., 0.035986300984518924`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"dsc2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConvolutionLayer", "[", 
                    RowBox[{"256", ",", 
                    RowBox[{"{", "3", "}"}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", "1", "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["dsc2", Bold], 
                    Style[
                    HoldForm[
                    ConvolutionLayer[
                    256, {3}, "PaddingSize" -> {1}, "Input" -> {512, 300}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 49), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-6., 0.035986301016692236`}], 
                    Offset[{10, 10}, {-6., 0.035986301016692236`}]]}, 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzF1s9LG0EUB/CNtpKLtvVmC4q3loooolgqBUUjHnIwNhSiRnZ+iSARkoh4
MeBJCJ7Egyi0Je5MD+JdSr3Yf6A92HMFPVr0YitofOtO7DRaE83s5gtvIXsY
Pnmz83Yb0VSIVRiGkfDDJWTOdMfj5uzQY/gRjiUmxmOUDMSSdJzGO1El3KyD
eg71wNCeoK6FEFqr1rWWEi0+1rbykBDxWcdaedHh81EiMox+ympYKz8l+yjm
C7YNjMc6QHkpyUexmLRtjIhThkRAF0rJvX0YixD07Mz2EWJFdaKU3MvHTKsL
bCeX+4r5rG6Ukjv7oG8vwHbo9E0su4FScicfQvwpPGs/nb6JTcNIVbgFkyna
NzycqYG+fZNn9evY2Hu/mzCZonzhcKoK+vVFntUfGK/Wug2TKcbnY4Rb0naA
0HqD66q/KegjhKdz85eQ9RYvUEpu9THMY7n5S02r1yuUkv/6oG9v7fkLdY4x
H/ESpeRGHzxjb8D1W864Ga9RSq75oG8vwfbLsfGlcqCU/OOLRj88o4Tvyb5t
eDB/C+XKx8Irj+AcfJfnYcej+Vsolz57/oJp25kjfDcSsZ6UGyZj+3ywl0LO
uH02+rG+3CglQfg+WpS2I5gjzaUuCO/BOV31+pW5JW1/4Kz26PjD/YHprK5q
bRnMBvqS501NA2nD2euSC97V87qqoz0i4HvznY6+5XIBTGFFng==
                    
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSize -> 20, ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}], TraditionalForm], {-6., 
                    0.035986301016692236`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"drmp2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{"Ramp", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["drmp2", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[Ramp, "Input" -> {256, 300}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 50), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-5., 0.03598630104059483}], 
                    Offset[{10, 10}, {-5., 0.03598630104059483}]]}, 
                    InsetBox[
                    PaneBox[
                    StyleBox[
                    "\"\:2217\"", StripOnInput -> False, FontSize -> 20], 
                    ImageSize -> {11, 28}], {-5., 0.03598630104059483}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"dsc4\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConvolutionLayer", "[", 
                    RowBox[{"64", ",", 
                    RowBox[{"{", "3", "}"}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", "1", "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["dsc4", Bold], 
                    Style[
                    HoldForm[
                    ConvolutionLayer[
                    64, {3}, "PaddingSize" -> {1}, "Input" -> {256, 300}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 51), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-4., 0.03598630105727831}], 
                    Offset[{10, 10}, {-4., 0.03598630105727831}]]}, 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzF1s9LG0EUB/CNtpKLtvVmC4q3loooolgqBUUjHnIwNhSiRnZ+iSARkoh4
MeBJCJ7Egyi0Je5MD+JdSr3Yf6A92HMFPVr0YitofOtO7DRaE83s5gtvIXsY
Pnmz83Yb0VSIVRiGkfDDJWTOdMfj5uzQY/gRjiUmxmOUDMSSdJzGO1El3KyD
eg71wNCeoK6FEFqr1rWWEi0+1rbykBDxWcdaedHh81EiMox+ympYKz8l+yjm
C7YNjMc6QHkpyUexmLRtjIhThkRAF0rJvX0YixD07Mz2EWJFdaKU3MvHTKsL
bCeX+4r5rG6Ukjv7oG8vwHbo9E0su4FScicfQvwpPGs/nb6JTcNIVbgFkyna
NzycqYG+fZNn9evY2Hu/mzCZonzhcKoK+vVFntUfGK/Wug2TKcbnY4Rb0naA
0HqD66q/KegjhKdz85eQ9RYvUEpu9THMY7n5S02r1yuUkv/6oG9v7fkLdY4x
H/ESpeRGHzxjb8D1W864Ga9RSq75oG8vwfbLsfGlcqCU/OOLRj88o4Tvyb5t
eDB/C+XKx8Irj+AcfJfnYcej+Vsolz57/oJp25kjfDcSsZ6UGyZj+3ywl0LO
uH02+rG+3CglQfg+WpS2I5gjzaUuCO/BOV31+pW5JW1/4Kz26PjD/YHprK5q
bRnMBvqS501NA2nD2euSC97V87qqoz0i4HvznY6+5XIBTGFFng==
                    
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSize -> 20, ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}], TraditionalForm], {-4., 
                    0.03598630105727831}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"drmp4\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{"Ramp", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["drmp4", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[Ramp, "Input" -> {64, 300}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 52), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-3., 0.03598630106844798}], 
                    Offset[{10, 10}, {-3., 0.03598630106844798}]]}, 
                    InsetBox[
                    PaneBox[
                    StyleBox[
                    "\"\:2217\"", StripOnInput -> False, FontSize -> 20], 
                    ImageSize -> {11, 28}], {-3., 0.03598630106844798}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"pcnn\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConvolutionLayer", "[", 
                    RowBox[{"3", ",", 
                    RowBox[{"{", "3", "}"}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", "1", "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "300"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["pcnn", Bold], 
                    Style[
                    HoldForm[
                    ConvolutionLayer[
                    3, {3}, "PaddingSize" -> {1}, "Input" -> {64, 300}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 53), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-2., 0.035986301075752306`}], 
                    Offset[{10, 10}, {-2., 0.035986301075752306`}]]}, 
                    InsetBox["\"T\"", 
                    Offset[{0, -1}, {-2., 0.035986301075752306`}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"trsp\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"TransposeLayer", "[", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "300"}], "}"}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["trsp", Bold], 
                    Style[
                    HoldForm[
                    TransposeLayer["Input" -> {3, 300}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 54), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-1., 0.035986301080100765`}], 
                    Offset[{10, 10}, {-1., 0.035986301080100765`}]]}, 
                    InsetBox["\"S\"", 
                    Offset[{0, -1}, {-1., 0.035986301080100765`}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"sfmx\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"SoftmaxLayer", "[", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"300", ",", "3"}], "}"}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["sfmx", Bold], 
                    Style[
                    HoldForm[
                    SoftmaxLayer["Input" -> {300, 3}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 55), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{2.2035254216632553`*^-18, 0.03598630108203338}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 56), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, FontSize -> 10]}, {}, {
                    EdgeForm[{
                    GrayLevel[0.5], 
                    Thickness[Large], 
                    Dashing[{0, Small}]}], 
                    FaceForm[None], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    Part[CompressedData["
1:eJxVz11IU3EYBvCjm18hFSJhImhZa4xpNjfd2aegoIQZrC4Kr1S60IREC8GN
UKxVTEEIAkkwwisvyjAvYqUPiQWJU5ZIprVNh2IY04buTMSPPGfnvB44HH48
7/m/z/9c7T3bnXiGYfSH7/8v/1hx6YM9bisjYOJtwXTceGlk9O0n3mbMOUcS
kD0u2ATutt41HI6MxcxeazN8dn0T8+QO/YPKVM7K24jdu88n5qMy8NZD7Sta
8doGhP8N+HjDSXIW5hPdxEYs2X+oPR6fOL9c05AnmUUwu5nYiCSuguw34Enj
TWIWSa29xMXQWTcDUp8iWELrxDq0uZ6urbCc6HKfKkjzRGffmbNfIsJ5Wpjr
PffDWXKh/xU0hHLnd6sGhflCmPu9JNfgoXuaWIutPrd3qsUvzm+//Emswfbq
HLEWzvwusr8QCew7Yg0ecyPEBWixLvyS+uTDsb+xKFkNR2qofqCSE/3o1Ndj
uXxV9qJ6OHaeCntNf7Q2Raz/Bdxq//d7svG1kCsxag+QXAFLa5hYhaj75GxF
b+w+SkTX6r5LVmCnwE5yFeTPdGS/Ep1vSokVkF2m+XlcfxVYkvrkoNxftSw5
C5aSQeIM6JhN4nSoey4GJZ9GbslV4mRkztQSM0jzNxNvjKU0OY78fr2m7q+t
zMQMtR/5ABseMcI=
                    "], 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 20, 20, 24, 24, 24, 24, 20, 24, 20, 24, 24, 20, 
                    24, 24, 20, 20, 20, 24, 24, 24, 24, 20, 24, 20, 24, 24, 
                    20, 24, 24, 20, 20, 20, 24, 24, 24, 24, 20, 24, 20, 24, 
                    24, 20, 24, 24, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 
                    8}, NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, AspectRatio -> Full, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    ImagePadding -> {{28., 28.}, {28., 18.}}, 
                    ImageSize -> {1141., 221.7599931125544}, PlotRangePadding -> 
                    0], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], ImageSize -> {1080.33984375, 373.7265625}, 
                    ImageSizeAction -> "Scrollable", 
                    ScrollPosition -> {0., 0.}, 
                    Scrollbars -> {True, False}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "cnn"], 
                    NeuralNetworks`NetPath["Nodes", "pol"], 
                    NeuralNetworks`NetPath["Nodes", "cnn1a"], 
                    NeuralNetworks`NetPath["Nodes", "cnn1b"], 
                    NeuralNetworks`NetPath["Nodes", "cnn1c"], 
                    NeuralNetworks`NetPath["Nodes", "cnn1a1"], 
                    NeuralNetworks`NetPath["Nodes", "trd1"], 
                    NeuralNetworks`NetPath["Nodes", "cnn1a2"], 
                    NeuralNetworks`NetPath["Nodes", "pol1a"], 
                    NeuralNetworks`NetPath["Nodes", "cnn1b1"], 
                    NeuralNetworks`NetPath["Nodes", "cnn1b2"], 
                    NeuralNetworks`NetPath["Nodes", "pol1b"], 
                    NeuralNetworks`NetPath["Nodes", "cnn1c1"], 
                    NeuralNetworks`NetPath["Nodes", "cnn1c2"], 
                    NeuralNetworks`NetPath["Nodes", "pol1c"], 
                    NeuralNetworks`NetPath["Nodes", "rmp1"], 
                    NeuralNetworks`NetPath["Nodes", "bnl1"], 
                    NeuralNetworks`NetPath["Nodes", "cnn2a"], 
                    NeuralNetworks`NetPath["Nodes", "cnn2b"], 
                    NeuralNetworks`NetPath["Nodes", "cnn2c"], 
                    NeuralNetworks`NetPath["Nodes", "cnn2a1"], 
                    NeuralNetworks`NetPath["Nodes", "trd2"], 
                    NeuralNetworks`NetPath["Nodes", "cnn2a2"], 
                    NeuralNetworks`NetPath["Nodes", "pol2a"], 
                    NeuralNetworks`NetPath["Nodes", "cnn2b1"], 
                    NeuralNetworks`NetPath["Nodes", "cnn2b2"], 
                    NeuralNetworks`NetPath["Nodes", "pol2b"], 
                    NeuralNetworks`NetPath["Nodes", "cnn2c1"], 
                    NeuralNetworks`NetPath["Nodes", "cnn2c2"], 
                    NeuralNetworks`NetPath["Nodes", "pol2c"], 
                    NeuralNetworks`NetPath["Nodes", "rmp2"], 
                    NeuralNetworks`NetPath["Nodes", "bnl2"], 
                    NeuralNetworks`NetPath["Nodes", "cnn3a"], 
                    NeuralNetworks`NetPath["Nodes", "cnn3b"], 
                    NeuralNetworks`NetPath["Nodes", "cnn3c"], 
                    NeuralNetworks`NetPath["Nodes", "cnn3a1"], 
                    NeuralNetworks`NetPath["Nodes", "trd3"], 
                    NeuralNetworks`NetPath["Nodes", "cnn3a2"], 
                    NeuralNetworks`NetPath["Nodes", "pol3a"], 
                    NeuralNetworks`NetPath["Nodes", "cnn3b1"], 
                    NeuralNetworks`NetPath["Nodes", "cnn3b2"], 
                    NeuralNetworks`NetPath["Nodes", "pol3b"], 
                    NeuralNetworks`NetPath["Nodes", "cnn3c1"], 
                    NeuralNetworks`NetPath["Nodes", "cnn3c2"], 
                    NeuralNetworks`NetPath["Nodes", "pol3c"], 
                    NeuralNetworks`NetPath["Nodes", "rmp3"], 
                    NeuralNetworks`NetPath["Nodes", "bnl3"], 
                    NeuralNetworks`NetPath["Nodes", "dsc2"], 
                    NeuralNetworks`NetPath["Nodes", "drmp2"], 
                    NeuralNetworks`NetPath["Nodes", "dsc4"], 
                    NeuralNetworks`NetPath["Nodes", "drmp4"], 
                    NeuralNetworks`NetPath["Nodes", "pcnn"], 
                    NeuralNetworks`NetPath["Nodes", "trsp"], 
                    NeuralNetworks`NetPath["Nodes", "sfmx"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4, 300}, NeuralNetworks`RealT]], 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{300, 3}, NeuralNetworks`RealT]], 
                    Association[
                    "cnn" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{64, 4, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{64}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 4, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{4, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 300}, 
                    NeuralNetworks`RealT]]], "pol" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3}, "Stride" -> {1}, 
                    "PaddingSize" -> {1}, "Function" -> Max, "Dimensionality" -> 
                    1, "Interleaving" -> False, "$Channels" -> 64, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 300}, 
                    NeuralNetworks`RealT]]], "cnn1a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1a_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 300}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 300}, 
                    NeuralNetworks`RealT]]], "1a_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 300}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 300}, 
                    NeuralNetworks`RealT]]], "1a_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 64, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 300}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1a_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1a_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1a_cnn1d_branch_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 64, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {1}, 
                    "Stride" -> {1}, "PaddingSize" -> {0}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 300}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1a_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "1a_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a_cnn1d_branch_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a_cnn1d_branch_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a_plus_shared", "Outputs", "Output"]}], 
                    "cnn1a1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1a1_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1a1_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1a1_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1a1_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1a1_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1a1_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1a1_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "1a1_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a1_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a1_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a1_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a1_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a1_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a1_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a1_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a1_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a1_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a1_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a1_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a1_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a1_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a1_plus_shared", "Outputs", "Output"]}], 
                    "cnn1a2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1a2_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1a2_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1a2_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1a2_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1a2_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1a2_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1a2_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "1a2_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a2_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a2_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a2_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a2_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a2_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a2_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a2_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a2_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a2_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a2_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a2_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a2_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a2_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1a2_plus_shared", "Outputs", "Output"]}], 
                    "pol1a" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3}, "Stride" -> {1}, 
                    "PaddingSize" -> {1}, "Function" -> Max, "Dimensionality" -> 
                    1, "Interleaving" -> False, "$Channels" -> 128, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "cnn1b" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1b_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 300}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 300}, 
                    NeuralNetworks`RealT]]], "1b_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 300}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 300}, 
                    NeuralNetworks`RealT]]], "1b_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 64, 25}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 300}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1b_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1b_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 25}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1b_cnn1d_branch_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 64, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {1}, 
                    "Stride" -> {1}, "PaddingSize" -> {0}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 300}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1b_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "1b_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b_cnn1d_branch_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b_cnn1d_branch_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b_plus_shared", "Outputs", "Output"]}], 
                    "cnn1b1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1b1_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1b1_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1b1_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 25}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1b1_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1b1_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1b1_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 25}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1b1_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "1b1_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b1_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b1_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b1_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b1_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b1_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b1_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b1_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b1_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b1_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b1_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b1_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b1_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b1_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b1_plus_shared", "Outputs", "Output"]}], 
                    "cnn1b2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1b2_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1b2_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1b2_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 25}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1b2_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1b2_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1b2_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 25}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1b2_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "1b2_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b2_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b2_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b2_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b2_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b2_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b2_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b2_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b2_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b2_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b2_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b2_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b2_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b2_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1b2_plus_shared", "Outputs", "Output"]}], 
                    "pol1b" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {25}, "Stride" -> {1}, 
                    "PaddingSize" -> {12}, "Function" -> Max, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$Channels" -> 128, "$InputSize" -> {300}, 
                    "$OutputSize" -> {300}, "$MXPoolingConvention" -> "valid",
                     "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "cnn1c" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1c_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 300}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 300}, 
                    NeuralNetworks`RealT]]], "1c_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 300}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 300}, 
                    NeuralNetworks`RealT]]], "1c_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 64, 75}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 300}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1c_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1c_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 75}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1c_cnn1d_branch_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 64, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {1}, 
                    "Stride" -> {1}, "PaddingSize" -> {0}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 300}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1c_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "1c_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c_cnn1d_branch_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c_cnn1d_branch_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c_plus_shared", "Outputs", "Output"]}], 
                    "cnn1c1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1c1_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1c1_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1c1_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 75}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1c1_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1c1_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1c1_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 75}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1c1_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "1c1_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c1_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c1_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c1_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c1_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c1_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c1_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c1_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c1_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c1_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c1_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c1_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c1_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c1_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c1_plus_shared", "Outputs", "Output"]}], 
                    "cnn1c2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1c2_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1c2_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1c2_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 75}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1c2_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1c2_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1c2_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 75}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "1c2_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "1c2_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c2_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c2_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c2_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c2_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c2_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c2_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c2_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c2_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c2_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c2_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c2_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c2_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c2_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1c2_plus_shared", "Outputs", "Output"]}], 
                    "pol1c" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {75}, "Stride" -> {1}, 
                    "PaddingSize" -> {37}, "Function" -> Max, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$Channels" -> 128, "$InputSize" -> {300}, 
                    "$OutputSize" -> {300}, "$MXPoolingConvention" -> "valid",
                     "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "trd1" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT], 
                    "3" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT], "4" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT], 
                    "5" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT], "6" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "rmp1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "bnl1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{128}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 128, 
                    "Interleaving" -> False, "$SpatialDimensions" -> {300}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "cnn2a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "2a_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "2a_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "2a_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 128, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2a_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2a_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2a_cnn1d_branch_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 128, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {1}, 
                    "Stride" -> {1}, "PaddingSize" -> {0}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2a_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_cnn1d_branch_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_cnn1d_branch_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_plus_shared", "Outputs", "Output"]}], 
                    "cnn2a1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "2a1_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2a1_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2a1_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2a1_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2a1_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2a1_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2a1_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "2a1_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a1_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a1_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a1_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a1_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a1_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a1_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a1_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a1_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a1_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a1_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a1_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a1_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a1_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a1_plus_shared", "Outputs", "Output"]}], 
                    "cnn2a2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "2a2_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2a2_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2a2_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2a2_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2a2_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2a2_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2a2_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "2a2_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a2_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a2_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a2_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a2_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a2_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a2_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a2_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a2_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a2_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a2_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a2_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a2_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a2_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a2_plus_shared", "Outputs", "Output"]}], 
                    "pol2a" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3}, "Stride" -> {1}, 
                    "PaddingSize" -> {1}, "Function" -> Max, "Dimensionality" -> 
                    1, "Interleaving" -> False, "$Channels" -> 256, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "cnn2b" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "2b_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "2b_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "2b_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 128, 25}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2b_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2b_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 25}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2b_cnn1d_branch_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 128, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {1}, 
                    "Stride" -> {1}, "PaddingSize" -> {0}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2b_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "2b_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b_cnn1d_branch_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b_cnn1d_branch_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b_plus_shared", "Outputs", "Output"]}], 
                    "cnn2b1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "2b1_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2b1_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2b1_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 25}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2b1_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2b1_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2b1_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 25}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2b1_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_plus_shared", "Outputs", "Output"]}], 
                    "cnn2b2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "2b2_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2b2_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2b2_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 25}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2b2_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2b2_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2b2_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 25}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2b2_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_plus_shared", "Outputs", "Output"]}], 
                    "pol2b" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {25}, "Stride" -> {1}, 
                    "PaddingSize" -> {12}, "Function" -> Max, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$Channels" -> 256, "$InputSize" -> {300}, 
                    "$OutputSize" -> {300}, "$MXPoolingConvention" -> "valid",
                     "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "cnn2c" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "2c_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "2c_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 300}, 
                    NeuralNetworks`RealT]]], "2c_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 128, 75}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2c_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2c_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 75}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2c_cnn1d_branch_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 128, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {1}, 
                    "Stride" -> {1}, "PaddingSize" -> {0}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2c_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "2c_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c_cnn1d_branch_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c_cnn1d_branch_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c_plus_shared", "Outputs", "Output"]}], 
                    "cnn2c1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "2c1_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2c1_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2c1_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 75}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2c1_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2c1_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2c1_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 75}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2c1_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "2c1_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c1_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c1_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c1_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c1_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c1_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c1_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c1_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c1_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c1_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c1_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c1_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c1_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c1_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c1_plus_shared", "Outputs", "Output"]}], 
                    "cnn2c2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "2c2_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2c2_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2c2_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 75}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2c2_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2c2_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2c2_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 75}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 256, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "2c2_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "2c2_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c2_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c2_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c2_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c2_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c2_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c2_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c2_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c2_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c2_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c2_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c2_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c2_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c2_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2c2_plus_shared", "Outputs", "Output"]}], 
                    "pol2c" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {75}, "Stride" -> {1}, 
                    "PaddingSize" -> {37}, "Function" -> Max, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$Channels" -> 256, "$InputSize" -> {300}, 
                    "$OutputSize" -> {300}, "$MXPoolingConvention" -> "valid",
                     "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "trd2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT], 
                    "3" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT], "4" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT], 
                    "5" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT], "6" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "rmp2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "bnl2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{256}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 256, 
                    "Interleaving" -> False, "$SpatialDimensions" -> {300}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "cnn3a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "3a_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "3a_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "3a_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 256, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3a_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3a_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3a_cnn1d_branch_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 256, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {1}, 
                    "Stride" -> {1}, "PaddingSize" -> {0}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3a_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_cnn1d_branch_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_cnn1d_branch_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_plus_shared", "Outputs", "Output"]}], 
                    "cnn3a1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "3a1_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3a1_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3a1_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3a1_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3a1_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3a1_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3a1_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "3a1_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a1_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a1_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a1_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a1_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a1_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a1_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a1_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a1_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a1_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a1_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a1_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a1_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a1_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a1_plus_shared", "Outputs", "Output"]}], 
                    "cnn3a2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "3a2_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3a2_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3a2_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3a2_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3a2_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3a2_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3a2_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "3a2_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a2_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a2_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a2_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a2_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a2_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a2_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a2_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a2_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a2_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a2_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a2_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a2_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a2_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a2_plus_shared", "Outputs", "Output"]}], 
                    "pol3a" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3}, "Stride" -> {1}, 
                    "PaddingSize" -> {1}, "Function" -> Max, "Dimensionality" -> 
                    1, "Interleaving" -> False, "$Channels" -> 512, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "cnn3b" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "3b_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "3b_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "3b_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 256, 25}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3b_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3b_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 25}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3b_cnn1d_branch_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 256, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {1}, 
                    "Stride" -> {1}, "PaddingSize" -> {0}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3b_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "3b_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b_cnn1d_branch_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b_cnn1d_branch_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b_plus_shared", "Outputs", "Output"]}], 
                    "cnn3b1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "3b1_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3b1_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3b1_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 25}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3b1_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3b1_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3b1_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 25}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3b1_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_plus_shared", "Outputs", "Output"]}], 
                    "cnn3b2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "3b2_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3b2_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3b2_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 25}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3b2_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3b2_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3b2_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 25}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {25},
                     "Stride" -> {1}, "PaddingSize" -> {12}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3b2_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_plus_shared", "Outputs", "Output"]}], 
                    "pol3b" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {25}, "Stride" -> {1}, 
                    "PaddingSize" -> {12}, "Function" -> Max, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$Channels" -> 512, "$InputSize" -> {300}, 
                    "$OutputSize" -> {300}, "$MXPoolingConvention" -> "valid",
                     "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "cnn3c" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "3c_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "3c_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "3c_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 256, 75}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3c_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3c_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 75}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3c_cnn1d_branch_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 256, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {1}, 
                    "Stride" -> {1}, "PaddingSize" -> {0}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3c_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "3c_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c_cnn1d_branch_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c_cnn1d_branch_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c_plus_shared", "Outputs", "Output"]}], 
                    "cnn3c1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "3c1_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3c1_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3c1_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 75}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3c1_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3c1_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3c1_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 75}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3c1_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "3c1_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c1_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c1_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c1_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c1_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c1_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c1_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c1_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c1_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c1_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c1_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c1_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c1_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c1_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c1_plus_shared", "Outputs", "Output"]}], 
                    "cnn3c2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "3c2_bnl_shared" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3c2_ramp_shared" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3c2_cnn1d_branch_main" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 75}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3c2_bnl_main" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3c2_ramp_branch_main" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3c2_cnn1d_branch_main_a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 75}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 512, "KernelSize" -> {75},
                     "Stride" -> {1}, "PaddingSize" -> {37}, 
                    "Dilation" -> {1}, "Dimensionality" -> 1, "Interleaving" -> 
                    False, "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "3c2_plus_shared" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "3c2_bnl_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c2_plus_shared", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c2_ramp_shared", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c2_bnl_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c2_cnn1d_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c2_ramp_shared", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c2_bnl_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c2_cnn1d_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c2_ramp_branch_main", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c2_bnl_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c2_cnn1d_branch_main_a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c2_ramp_branch_main", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c2_plus_shared", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c2_cnn1d_branch_main_a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c2_plus_shared", "Outputs", "Output"]}], 
                    "pol3c" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {75}, "Stride" -> {1}, 
                    "PaddingSize" -> {37}, "Function" -> Max, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$Channels" -> 512, "$InputSize" -> {300}, 
                    "$OutputSize" -> {300}, "$MXPoolingConvention" -> "valid",
                     "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "trd3" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT], 
                    "3" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT], "4" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT], 
                    "5" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT], "6" -> 
                    NeuralNetworks`TensorT[{512, 300}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "rmp3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 300}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "bnl3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 512, 
                    "Interleaving" -> False, "$SpatialDimensions" -> {300}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]]], "dsc2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 512, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "drmp2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 300}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]]], "dsc4" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{64, 256, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{64}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 300}, 
                    NeuralNetworks`RealT]]], "drmp4" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 300}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 300}, 
                    NeuralNetworks`RealT]]], "pcnn" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{3, 64, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{3}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 3, "KernelSize" -> {3}, 
                    "Stride" -> {1}, "PaddingSize" -> {1}, "Dilation" -> {1}, 
                    "Dimensionality" -> 1, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {300}, "$OutputSize" -> {300}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{3, 300}, 
                    NeuralNetworks`RealT]]], "trsp" -> 
                    Association[
                    "Type" -> "Transpose", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    TwoWayRule[1, 2]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{3, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{300, 3}, 
                    NeuralNetworks`RealT]]], "sfmx" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{300, 3}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{300, 3}, 
                    NeuralNetworks`RealT]]]]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\"", 
                    "\"300\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"300\"", 
                    "\"3\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    ImageSizeCache -> {181., {80.4169921875, 85.5830078125}}, 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.740040897207549*^9, 3.740040903407151*^9}},
 CellLabel->
  "Out[510]=",ExpressionUUID->"b8139a29-5579-4486-9d4f-973276c313bb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visualization Helpers", "Chapter",
 CellChangeTimes->{{3.740266649952894*^9, 
  3.740266657089189*^9}},ExpressionUUID->"814fe600-2598-4995-a16f-\
9408170e41d2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"probabilitiesToClass", "[", "probMat_", "]"}], ":=", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Ordering", "[", 
      RowBox[{"#", ",", 
       RowBox[{"-", "1"}]}], "]"}], "&"}], "/@", "probMat"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"randomN", "[", "ds_", "]"}], ":=", 
   RowBox[{"RandomInteger", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"Length", "[", "ds", "]"}]}], "}"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.739735614753537*^9, 3.7397356543131742`*^9}, {
  3.7402666648509083`*^9, 
  3.7402666661283627`*^9}},ExpressionUUID->"26728e20-6660-4d5d-95c7-\
6ea9fa66804f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Randomly Sample Test data and visualize", "Chapter",
 CellChangeTimes->{{3.740266683642721*^9, 
  3.740266691338133*^9}},ExpressionUUID->"f375ad32-32a9-47c0-963e-\
07708028aa22"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"n", "=", 
    RowBox[{"randomN", "[", "ds", "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"n", "=", "6028"}], ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{"Normal", "[", 
    RowBox[{"ds", "[", "n", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Module", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"to", "=", 
      RowBox[{"Transpose", "@", 
       RowBox[{"tNet", "[", 
        RowBox[{"s", "[", "\"\<Input\>\"", "]"}], "]"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"no", "=", 
      RowBox[{"Transpose", "@", 
       RowBox[{"Normal", "[", 
        RowBox[{"s", "[", "\"\<Output\>\"", "]"}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ap", "=", 
    RowBox[{"ArrayPlot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Join", "[", "\[IndentingNewLine]", 
       RowBox[{"to", ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"White", ",", 
             RowBox[{"Opacity", "[", "0", "]"}]}], "}"}], ",", "300"}], "]"}],
          "}"}], ",", "\[IndentingNewLine]", "no"}], "\[IndentingNewLine]", 
       "]"}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "2"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"Background", "\[Rule]", "White"}], ",", "\[IndentingNewLine]", 
      
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"FrameTicks", "\[Rule]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", " ", "\"\<Predicted Exon\>\""}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"2", ",", " ", "\"\<Predicted Intron\>\""}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"3", ",", " ", "\"\<Predicted Unannotated\>\""}], "}"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"5", ",", " ", "\"\<Real Exon\>\""}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"6", ",", " ", "\"\<Real Intron\>\""}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"7", ",", " ", "\"\<Real Unannotated\>\""}], "}"}]}], 
          "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", " ", "50", ",", " ", "100", ",", " ", "150", ",", " ", 
           "200", ",", " ", "250", ",", " ", "300"}], "}"}]}], 
        "\[IndentingNewLine]", "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"Placed", "[", 
        RowBox[{"Automatic", ",", "Bottom"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ColorFunction", "\[Rule]", "\"\<DeepSeaColors\>\""}]}], 
     "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], "Input",\

 CellChangeTimes->{{3.7397875782240057`*^9, 3.739787654856988*^9}, {
  3.7397876903571444`*^9, 3.739787701179632*^9}, {3.7398000773839903`*^9, 
  3.739800113151392*^9}, {3.7400386858059587`*^9, 3.7400386882911577`*^9}, {
  3.740039333997943*^9, 3.740039337353135*^9}, {3.74004002554974*^9, 
  3.740040026164176*^9}},
 CellLabel->
  "In[504]:=",ExpressionUUID->"2b5429bf-7ece-4364-8194-f1bebf1d1409"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    RasterBox[CompressedData["
1:eJzs/Hk0lV/4OH5TEVLmiBDJkEgDKXJFoiRjUQhJpck8h4zJmDnzPE+ZSZJM
x+wMZjLPKpJCRb/TZz2/9z7f549nPWs9f3zWs36ntd6r1Xq973Pue599X/u6
9r73zWdioXVvJwUFxW7if8coKSh2Ef9+GyBx6W3ZPAwoZxW6RH2B1ptPt41+
LAPF//xZAbKTnexkJzvZ///RDy3fEGVxa/p//ZuCgrWsdSJcjUB2spOd7GQn
O9nJTnayk53sZCc72clOdrKTnexkJ/v/qv9vz5+TnexkJzvZyU528vo02clO
drKTnexkJzvZyU52spOd7GQnO9nJ/v8k/9+ePyQ72clOdrKTnexkJzt5fZbs
ZCc72clOdrKTnexkJzvZyf7/PP/frp/JTnayk53sZCc72clOdrKT/f9b/9+u
n8hOdrKTnexkJzvZyU52spOd7GQnO9nJ/v+b/3/++//+Q3ayk53sZCc72clO
drKTnexkJzvZyU52spOd7GQnO9nJTnayk53sZCc72clOdrKTnexk/393u7y5
g3xPcdBl+wYzPjUJtJ+OgLb41//+v69HgmImHuBg1ysLLjHcJNi8e/3eXRA5
Y7glU/kADiq8Xapk707DMmV1QF4XchfnJ2l8KzhoHilvKa+YBk4/rHnkN+RB
rq3i6p04OMzsU5J4bhrcdghbFr5HfrPt5BO3YhyoQ7bv8/4pMJ6VWZWOQP7Q
qvlySAwOnq8H10p7TsEqPedKkCXyOMydDXY7HPD8vnVTgWIKonAtIifPIa/4
QVBX0sLB1PXHB8S9J0GlXF1flRp5gc+tAZDAwaPU7uUvdJNQKXTZLJLw5T8f
ak7aCGLHgXSCadqXkgno9nqX1VyIfG1EwcGTEgdcPxjfG5pOQHXi/I6lIOT7
H9Av2Y5hIUSlWJdqaRy48/96iOgjt7icpuCKwULhj0up8ZHj0O7pp255Brnm
w0YByzIs1MwstldpjkNELeMGHRdyr7Tpa0KFWDCM30jUlhkH/xte2/lMyEOO
Gee2BGHB+9KliO+vxiC4KLv+6cTn/7ynsuNhtx0WDtHd79g/MwqxJYTjJe+R
Vxz1E6DRxQLzU4xLNe0o/FJM5Me/Qj7afP/V8EUs/KyyCGL2+ATnl5unz9sg
t5raf9XwPBbokgoC8FqfYL0jrDn0IfLLE86spcew0GDSU041MgLSZm/c3mog
Z/aq4/9wGAtRRVJdUvEjcNtcQu/OReQcXw2KXrNi4cLwo0RJiREwDQulbT+G
fCHRTiyLEgumtyRwZ3OGofbhr+shjMh33MnK/trXDYuH3vzl2DMMVtxT3m7L
S+j6ZoMa6nK7YXzdIjPn6RD4GR/Eh3Yhp6HcrA9/0Q2zrz8mf/g8CNfWzzHE
lyL3cXrl9f5KN+DahfetsQwCxU55vUsvkA+PK5524OyGH8ocsy6PB0Bw7AkX
3V3kAVKYh4yU3RCS2jW9zjgA6hdY5rg0kD8Mku+/TdENrZiv/s/2DcC3muv4
KHXkFf2ehoSZLsi8l84z96YfpNp+ne+WQf7O/XWMWnMXxPucL4iEfgi/wbSt
KYA8bDf/M+r3XbBfwuOiJ08/hBxPkXjAjfyo1p0n7LldEHuBKYB2uA/KdhYu
qTAgd5b2GDwR2QWs7WJsYSF9kL+jXLDq7yLq/712wq/cuqCU3urJPPRBH++d
7MGvyKnfBlietOgCubCwbRHaPuBVKeu4P4Wcx++1UKFiF+ymq9HOsuqF5AaX
K5UNyK+3UkxzQReIVTn3i9b3gNvp+GszYcjjpd8u877tgplDJ9V6hwiw4Kb2
PkUcue5tX8GHmt3Ad+FFNGc1Hu5wFNm5FS/85+bi2+I7v3QDr5Vb0P5wHBhW
XylMOYE8Q/wAU4UsFtwt19jGX2KByzQs/0Lt/H/eQWNxnNqbeH/bSvN+XusC
2+UJz71XkCuf23mEaxYLbUz9O9j2dkANncj2cNbcf15FXZHZKkmM31Vlt1uL
WiEn4+3cnADyqN0LcQ8f46DFvOgaJ2cLZIy4RjZ3zP7n/fsTFzgacbC1Q8LY
16kJBqP7s6llkOtVe2bZ8OOhnt/uy1pBPQQJeer/SJr5zx/HTb4X4iS2S464
2fjnemA9wrf0ugD5FEdr3Qs1PKQetzEoNfoIq/FiDC90kYtbOuW+ZSeAaNXD
I3mEChCf00oYoZ9G7YObqqSXIcCnqJZ7vPMFoDfMyveXOI79397z7KhyvXIb
7F43fPBwPATcdobrUPgM/OdfRM4K0fW2wVgFhdtDfBg8vLW+jOUZ/M+P/7YT
2vrWAgYcwfSPdF9CS/Q7ugXG/v+81ECq+lVzKxg/2FyhPBkMo7ozbrobyCPS
KIptB1phlK6mS7goGK6pso/h96Dvz/E1o+f/0ArCiaWuaVtBkLK/gVN+BR2f
zFoQv+9tK6RH9v3qxAeBGb1NftoC8sbotb+KDq2gNRZEs2tnIBC2DBZ3piIP
qjiaMqrQCtYmt6zjQv2hLyLddt0M+cWzOEEnsVYwn5zWafzlB1m3A3fnayIn
xrfvCqytQOPf6Lf7ih+ky7w8d1aK5PppJTqMjrfC7XgFDlEafxDodRh8r438
g/LW7Y6TrTBkeP+d2iF/ONOUdtxRF/kxYfrqJwdaIbv2fOvTp37EeNeoOCCD
XFFDkk5xrQWyFJ8qOTx4CVTT7Wl3WZALah6X/tHRAsUOkhZ6Wr7gdkOcOXq+
7z9vnuhQPlDRAoy0Yzanil/Aj02zn2XdyEtYDHO70ltApl++UvXMC6jRP5Ay
UYN8foidMSG8BaRuxKvvr/UBrd5dviK5yA/Iqmpz+bRAaoDsGZyuD9gqbmsY
xiLf/HDY39KmBcbbg90Uh73B89VHZX5f5JYCWMb9Ji2QZOi99sXYG8R5DAvP
2yK3YaBlv3GtBZbKBIITu7ygpmL9VsZt5Ndv5mDpxVsg8PtIP9uqJ7wxkoiN
kkFexvd3zYemBYQ7mqx8FzygsTzW+h0z8qbZqcneQQzM0Dc13U12B/n3g7vm
xnr/828e3GcMyjCgz0lbaCrxHHpps6U5K5E/pZCqYn6NAdbcGRq7cFegj6YI
PfMaeeWezokn7hg4xnh+gu+6CzCsrei/ckP+g2ljiekBBuy/tWymfHWGiGtO
fmsmyO/9+U3PqYv5dx9muex1Bim9fRRhmsiLdmlZs1/FwMSrz7+PmDqBddZa
kpsi8qMB9YJTChhgMhrJd1xxhJrdwn9fySC38aY/PUl08d53ao+JXpi88DOY
xAcvVNeZKmMgnaXwD6WEE7S2631zuIDcmH90VfUyBhi6K4faZZ2AuW7ve1t5
5LpUj3z+XsKAzRHVozcOOoG+cvmu73LImaRk9z6SxADnSZ4mj5OOwKnVNDt9
DLmBvqPKKSEM7BV/UMXxyAEULiZpPuZGPuF6Y1ZGEANcIhRxjgYOcHod++v2
QeSxiu+LQgQw4LrP99A3RQcY2QgfDeRE7iPo98OHBwNxqoIDdcv2UDTrvrjB
gvxPSwGOlgMDNUqCAZoR9iAnyOy2QI/cf4erc8NBDJya3HHhW5893JK87LiP
GfmFEyXjxvwYkJxe2OYSdABxPjAV5UDO4HH4vBjx/JXLHKdz9B1APzpjlxrJ
+ReobsjHH8XAkE3MSbFYB/g8mvuOjw952cH5lH4RDFjdDhy5+coBHFcXcq4e
Qt50hnUHjygGavMhWSvFAewDkrcLSY4/eHgwLloYA9q6Ux+bXR1gw0ZFZ4UH
+Uux8y/2EF2r6eILSnsHmGt5VKND4hFsDWwlxN9nfFLWgdWK+P1CSQY/SH6f
aynf+zyJ7Y8PNegTI7Y/te+ZNleS9peZ+o2/cQQDSmpsqR3qDqC3zuB2l4uk
/yw1ntAgHt9RH1R/V94BpEraM5VIjv97mDDx5BgGYlcypRpLHcBq5nM412Hk
r3Leje4ntp8++1OXnjDi9f/d8AwhaZ+frtKqepzE4+ejL3wvs4cTezpfmjMg
x/FZevvSY+Bo7PvJPat2EJSo33mHAvm7Z+71UjQYoGYrunCq3A64fLxp3vzu
QfnZuzvPOmgxcHavZlNAux2Y7aGpM9tC7l80ccJ1Hwa8OGtvFOy1hwn62j9e
O/6P9vvpwPA/7bfflcv+X/tRRu5EHqW3LEPBjIFzEhZPToA9hFa7tupQI7ek
pzS4yYaBkRBJq5vm9hB8Pu7TL1rkOzzPNuOI158v3Yv3fWcPT0o141dIrj/Z
PPmYMh8GaDsS2aP3O8B3aumSjf3IV12or/sdxoBKfh/BQsoB/JQcBMwPID9J
+aFvgdj/3OUdggPzHeD9odT5QH7k5RyysrhTGDgosJC0xeUI5n4jWCFR5Gcr
EjtpLmDA03iBAVocYUIxYshWGvn3/HRJSmL8Y6BytflsQoxPu88/uk8S/5oO
7uL7q42Bn4UBEWUTTsAQzxIsoYYco9LBxalPjL84JdupS87Qlr06//kG8idf
XL/+NiUez+P4VRrnDFXO4sfeGCN3m6QQv2JGvL83D0Y1/3UG24ulZsqmyI90
8nodfkL8/Ht3nA5IPQOFSnZwMkMesy/h175nGNB08nlgT+MCezk5QysdkYvR
agyruGBgm/mb4MgBF3j0ctGBwZlkfNmbNh71EgP9+cHr5zEuEJHN3mztSxK/
qbzCC+IxcPqT0tdnk67wRkSjSjMBOeXTvEjJNAxMM+4PC5Nzg4iJaEbzdOQu
b9V5CMUYCGe6U5BO/xyofzX66ZYhbw3turmnBgPP3rVZ1MQ/B7OVM2MOH0jG
R95VHaU24v2bhgsvOukOLitDDD+7kPfuDmMXqsdA8UB73Mjqc+iyUbzF00zS
fravG93eYoAuPFqn3fE5bO7vu1dcg3xlVDPcrgID3IJ257euPQdhljPyd98i
PxFz9PJyNQZKvFRk2YOew9GO37EKtcj3/26voOol3r9m+pJ2bu5wn3Pvy5wh
5OE5nlecsBgYtZOSNTV0h5GHeR3lvch/yx00levBgNn3cKoNR3ewefTgBXaQ
pH+eP8xXsLcF7DRjdIf3esI9GaMsXQ6Uf7BXM/vNnWiBWHFnKoW9xPxGr3Ck
BZBPzizIOt5sgezM1lB+bm/AXD1j3fQQ+bHBYr5EYn62IGI9wE3Mz45ipouO
kuRnAoLZHvTE/LB2fmLo21VfCNC9VRE7hzyV7rmbwe8WCBNKn3eJeQndPjg5
bi6UX9YJRIpsnG0F6iD1yhEtf3i/U3ZQyQj5PuZUVaaAVmAWYfeOCg6E9fas
kdBK5F2TTfjHe9qgjOaQdPWeENgpcsJL/SLK/3sd3E5srLcBx6t4Jb9r4WAb
S3V1QBHVH6IsbjGH+9sg8nLqcvdgGOxgCGTk5EPO7ma5XebYBp4uH+ZWA0PB
2ND9g0o1+vyT2VJVDYfbwUjSp3F+jvj57sbOL2zR8bXHvvQ8HmkH8bubIl3W
UYDt1bENOT+E8usJhcQHd7uBUTTM55NlCgyIP/XOZh39z0fWHvzdJ4aFH8nJ
a4WH06A/kF5QgW/sP1/K6T0z8QALqk53s6i+p0GV2y8rnRTk/FoE8adxWDjo
zcpelZ0OHsbBs6004/85fShBuacZCxE6/RHl8hmQravygU4a+VmC99MXQjjQ
YNuwCIrKhO87dak0U5B3SZQfUSnEAdPPM9aRVtnweud5R9rTE/+5lPWnXQZU
eDjiKfTbLT0HTgjN9/eEIf95+JJtryIe/IQFX8t650KHqO7Ucj/yY8+YWwpU
8LBDknG7LzoXatzk11VHkTNxLO1p1MQDp0seO744F5gtuCV2zSKn2VLd6tXH
A9Oxm6yavbkwmrvU92uF5PP3/ol+zoWHfVhM4svVHIilV5ZdzkU+NDaYKPEd
BwmWdEo2pjkQbtvZQv8c+axeWVHacWJ9/aJNy/dsLlx6598wUofcjPobbuMq
HkpPZ47eS8gFvfuhRuVjyK2TfYfydPFwoISNIa05F9yoHvJYf0Z+eb9Ecbwf
HkR992vm2+dBFZ/SSRw/qr/jT++l+zGIh0/jvzInQvNh2OKLhooz8pozL7Bj
SgRo8v8Q28lUCFjc0ZbRFeSjPN7RTC4EoDQNgjcTRVCryhr5/cHUf656YneG
iiIB6L7ml5QcL4N4K07LxAbkM9QXL/myESD96Z+HW2sV8FdAbsqREc0ffO2+
FH5sEQ9PHBhCwl+8hTsWJofe6iLXltt1JyAbD6tHNpt3P3oPd3Jjjkc2IHe8
/cEZf5fYvh6loidr62DKStP4xWk0f1F/TSmv5RQe2qyZxb2O1sPSjIO6kxdy
d/dy+rt78TD/5cCH8msNEORiOB5ej5x1p8D9ma84CKH3al893QiyT4P4i9aQ
iyx2PNOqwwFhYGemcFQTKBjPfDsnj+Zn3vvxNUiE4yDfgirS/HMzsX74+/d+
AHK5ztatUlscJEbe+pFOINZBB2mwHu+Rb5o25Vbo4sD+uLz28zfEOrXtobXg
F+QtR4KNBc7hQGXP66cNr1rhc+3d2Q/caH6p++e86xI3Dnje/KTuuEeMUw6r
xXyqyM/HLupa/8aCGkUZVvZxO2zovrJt9UYeWsY1QzOBBbrTA43+pzpg5YBf
/Iki5KW3U4xEcVgIHviEH8nrgKZbTEGKbciPj7xVs8vHQtWjoACl+k5QUIgY
j6FG82ePy33P82RiYaP3foH+aicwi09rUjEhX7zFaKb5kej9sp9ZBDqhbO5k
puY0+nyGPeVrqzNYUCyi6ri0rwMiq4LpeLL/j/OrPPTnf87PhPl++7/zm8j1
Qu4seaHcdR0L7tLbnrJ+7bBHuKfgSgBy07z2phg2HFA/2R0wld4GyaOBHZ23
kO9j2dviLYmD0936uYSSVmgR3Nx/6whyYdEXMqcUcHBZoO5vplYraN3jeOPB
iNwmzvKvnA4OLlDL6iVXt0Dzo+/9r5bR76uuQ98e6okDUz+OqmePMPBrbWCk
MhP52UvKLU1ROEiiY6FSxDVDxebzRS8f5Pvfa0vGEOOvoe+j+rCDzaA6xd6o
b4hctKb9jm4HDiYN1wYoZZqg8SLHCWcx5PXvDGh+b+FAr6Y0J7C+AQJHCKUz
w6j/D2fs1U2Xw4OdupnX0YGPUDtcQ5tihdy/pUhLxAYPgtQjbp+u1EEU3dFm
DS7kep6BSpfL8CBlW6q8XVkDDqPNDSpF6P7+SW3UpUpJgJWCbepuoSowLZp0
qjyBfOXjYw83dQLoyLG9xfiUwkvx7HOSxSj+xEs6douEEiBDeYMrl/0N8LRh
KevkkY+ovBGbEiTAmRQ9t70pBfClPyFvTxeKf6wd0Z5sdXgw3mdlUiiVD8Fd
myK8hsj3cgi4Hn+Ah25txzytrVzI3xXApbOF4rOhSHtyyAk8EA5wTGhcyAVa
bVaLH/Uk44votVhlejzYJiilTtXkQAvddvTtWOTPEnowEks40OnyGrhwOQc8
26cu6tojF754I16a+PvJX6AZ2j+cDTs81KqTriPPdDSY7n+OA8nQKfdPnVng
4iqm60iJPLAm3y9MGgeq5+8/S8dngn8n5tp4KRq/E4RpF/oFcXBxZFZZMCIT
ak9fogpPRv7IVPec+RAWeMQ4dDpfZMCN031jd64h96eqNWkZwUK+ffYE+6sM
UDKSt/2mjryPOyDhbCUWCoq628roMoDhncWbvULIp99FqKx7YaFMIO4rlU46
XNTvMnAbRfnLI/EzG282sUDA9Of8WsuAFzdqPB9aoON75A3f7PXBgpH7wPnh
W+nwuuBHwMg4Ol6QiyHqwbNuKAhlWROJS4Eie9aQVnGUX01pU4w0609CZs+R
tHzxRZjcPXfpdjJ6P6rLpUq55waTIBgsG8JwfBFSjfSX7pN4oojt171J4/CT
bk8h84UFULWuEz7gh1z1xtDJXbPjYPl58NSR+wvAr2kW0B2IPCddTUOfMA5u
Bzs1+Q0WQK9HKK03APlQY+vTiL0TMKZ9Vszo2QIUsLx+OBGMnPG2htHN/HF4
7HFe8LTyAjB2yoq0k3y/wcHIuFtK48BQ7X3xGeMClHiOCdp5k3x+IKHo+pUx
oOE7xFvzdh7UHRKr/z5DnlzPNP37xyfYvstXXWo4D3eaWTV4bZB/rgnqbLw/
AgKMb5bivs9Bx531rQIz5MTCe1oJNwRfhbuYel/MQc/aYBqzIXL22KWeuJuD
8KjuUE4r3xy8PtdyTfo68uHTFZV7TAZg4rY4f8bYLMhwFEs2XUPOnPGeb/NN
P+i6XOQbfzMLFwt7Ph68gtxkbYSfc6EPRJzsul44z4KGlvHuhYvI6Xo7m17/
7AVayYu5jmdnIfW2D2voeeQTimsBzPS9sLTDUPDVrxmofteVbH4GuXYo3cUi
wZ5/edMd6vczsLnhHWZ+ArkUP8eDPEkCTOx9GGHoMgMVKSaxh0SRV3Ven3fy
x8O9MTZKa7UZKBQJOZMpiLz5RBi3sTwe/pZpfuo9NwMFLxpLawSQW2INv7Ts
w4O3aPLGt8MzcHVHD/YSL/I5Lpwdz248vL/+JDmZZgYM5lXqB1iWSe/Ppis7
8KDg2p78cH0a9j8NdsqgJ+kfPO8/HqfAg0r3msnn5Wl4b6UV4kVL4gFmAYRf
OFhse2CFH5mGFoMDl19QIre/LinvRcyfPW/8sK6vn4YbL5VTk36i9X/P/Kxt
ms/E8efS8+mD2dMQVEVh7ryEvIc+Z3F4Bgdd2xcyOMOmYaTnQu+lSeTbb83G
Vz4Rx+c03hNTdtNwi73S17EPuc4xNxvHXhwIiEXOlRLzTj8sjdtAK3KqTIIJ
YxcOVh69Pa5+fho0/HXMumqRU+QdzvpST8wP/SLsk9mI4xL37F3JQuR5Ubay
Om9xED9B7Wj9fQo8r/u/XkhCbrl7UUCpBAdVJYqgPDQF5o3hKSaRyC/8dF7W
KMbBExdBi099U+Ac3HLkRzhyFayRtOkbHEisliRSYqfgqczTj/tDkVdGJxEy
84nn35gvKtc8BdDKfZ0yCDm97ZedigU44K9b0DRvmQLhhMuJSyQufqgsk4no
coSrA9WYKXhlsRyYTOIqt08KrhF93kfm90TbFNC91TqyGkxy/r9Dh94Rz//a
0HUrvYEpeB141zOC5PmRxblrP7gqcXDoUoK859IUaN+ue/06HrnmENfpD7U4
cDxW8ekt9TR476ue3MxCvi/JthrXTMzP7vtQux2ehniJO3Q7ypCPTlfS2OBw
QKXO52t0ZRpuq9seGWpA/ilitf7WBA5ESuXraT2nQVo0NSRoGPkv5THFc8T8
35JOlOrLm2mor7+y48NX5IX3Ew58JuZHB7hD6obmpsFQfDLyMDXq39yHor3c
r+CBy0fg+87zM6BiRMP7XeD/iK8rFsaEf/E1qd935l983ZY7hnwsbTt2/mEP
6NxXydvXPQN3TouWS5wiiV8pfWUSZ4jxZ2erzCHqWfCgkrj9Shr5h57u3yxX
+6AzNDKJX2MWruYH9jQD8gHF+11xTP3QsjLwypSYNxZryStvKCIPUbZsGBvv
B2H8lsF2zSz0GHNKm6qQvB9c8WT67eIBaLzz0Pjz2iyMXOU0GlBHXsb3N/8M
+yB8tNVblyPmvclNWo88tZB7TmI2rLkG4Y72XOgdpjkQpwiqSyRx7wcKpfpx
g4Cf6UwpPjUH5U8KrqzfIDn/75Kix4dx8EDkliHjk2m4PHo23wBP8vzQw9Hi
eeL1jYYdlHAiXt9pD36VXyTXJ5iR/DiFhwDqjrQVq14FkHIt2GRfE0n9/DPi
oJ0MATiZ441eLRTAZm1Vi+U08uxT68Y323Fw+9aWLcVANrRdl4/N00b51YZk
WKMBsT648S2EoI3JhE9fZ5LvFKH8xLLrJf6xCw52f35k3fkxC/BZNwJrt5A7
Rpa/tyHeX79So9+kmGcDzasKukOn0OfPpwU6phHjjweXTYv622x4UBn1XUIF
efb4CvOPTRwo6NH8veaSA4x4wvKjF8grv87mBAri4fQD1zaXA7lw+TG9ynoF
8m/4a/iSi3hwj2s6LOueCxLfExxL+5DvMVyj6iR62pFXz6OJnuKr97ebxKke
x3/RPosH7R27Fwr0c/89v0T3sB35KY0DSTxX8fBWd/a9aWzuv+dbcBjS+RtN
1eD2m8T6/zK7eExbLmQZ3LmZ9wW5+1HzjkaiN756ZuBBdGeKPVtpJC5VwBq2
dg4P+gt6Lx/dyQXV1tUM8U6S+ZX3TzPfaeBBo0SCV7wwFx7l1NyYnkb+VFtW
Tu8yHk7V5WLSQnLhs+T7143DyHVu+y4eJ16/SMTRCnO3XPDNrv8uQHL9bP62
H4pZ8OCSfvABdX8OpJadEbBMRR5WPBS41YoDMfGFpbOEbGDTZaM8qUXicgUn
lyJxwBXh3FLAlQ3ZfEd3eRxAHt4gFPTTFAdhIV+cuC2yQJBTwOP0NOo/t1/8
ZW07ToxvXrfmCkszwcBgylAjFzlfGF/W379YsDhk3nJ2TybMNfm9vGyP/Ngz
5vm1aey/+bWuubwMeOcmn9h/E3luz+eJUxgsKCwHhVJfzIDVqLwea5L5wSKZ
Tw/7ArDwmMWTpskqHbTWKUVSl1H+rT1fozRohIWUR2u5FX1pYJj9p2HwFXLl
/KbKHn4sBK38bEn5m/pvPXPnFh3yS7GOmK7pbjjhyWf/9XoqPDonk+afgvJ3
vVh9j2rNbqg+ZX6+QjMF7qu9Xn1IiTy/LqS8PrsLyn/f4FgUSoZ488FY2yuf
UP7goEh1b08XpL+TPMd3JBHM69+PHkoc+c+lYw8P8wZ2wuw3hq9epvEg/dvr
eCgLcoH4/aomop1gamA16MUQB3VxX13kcofR8UfPUF5Y7oCI1b++gTKxENZT
b9NshlwvIX4i/mMH7OjeXV4YGwPitz/27D+D/OS2q/3b5A7YHZ9x8KNgDPxk
crS/zDL8f9xfRqkdcOt0gljosRgwP7eDhZUN+b1s/4f7GztgnmOp70FaDJxz
PR/achZ5D8OiZ8XnDkg3YuKPOxkLE5eMdHbeR96ysPRwJ1MnFLtk5b0qiQVz
qb7Cl0HIb1w9d670QidsZdlvZurFgUabQIDNR+STb1p/cTl0Qt85q4eWnPGw
+YSbqugP8gWF/H2ikZ2gEBSIMfWOh1kR0daH3Kh9b4bi5OVfdkKFjJ7ouE48
5FZSl+kxIJ9sG+QS9OsEtt2ig9R68WBskDuszYh8MOzGN4X4TrDQ0Hl9LyEe
5NfSm/iPIBeO3c2o5dsJS172NJHa8ZCsWX1FZx9yw+fMRlb1nTAvUmP3+3AC
3Gs9eLtMDfkiRvDhhE8naB2OCfNQiwdT/iNfG+mRE/NaGv7iTjhOqW21PhsP
Qux3p4ZlkN/bn+KYxdYFOSoUp65eSQT95TM3VHOQX5S+78TB1w6p57PvuY+G
w72dCwmJVmh9YUecjaP4NAZKYubrtBfcQf3rmYijS2h9aMyi7Pv84xaQeRtp
ejzTG44lvCpcdkPrM+XmXlru0q3Q2BTH43XZH1Y4T+cW3EbrKxwusd8Pq7SB
wOS6Zdd8CAznvD0Q7YvWPxZnHKpf7m8HTf/i9UtvwyH8kAEF7310fhQhLNTs
ah1w+EvIiNPOaNiXdkhe8y1a/0g00A7BRXdCgsYUTiE0HiYv0p66y4euf+0l
7q7rbCeEWfVd2ZOWAPSfi5m+2yGvKhDr+KLSBbxZFxdZqZLAOYQnUXUK+d1o
FlaccRc8W1RekNFKggLzH5R8v5HLSrgzPq7ugqjg0S0a5WR4YZCzXWCA4sPG
E+6Dbird8PhUjssPxRRoob8u5beJvGDjhVbebizQl0U1TSWlwtFzYdYD3Sj+
pFyVNj32AAuOT48ovFxJA9mP22UdSSi+Kb2hnndqxULpt3cCdFczwEzIy/Xz
ORRfa2QT4k7twYHrrec0lSczgTuS64uzJ3J+qZs0q6o4YNW8HWbLmQX9+3k8
9rWRzN+cUvv+KxwH/lGvXw2wZgOBQ6zWlB2NL6V8f1VL5nBgS3tsZlkmBxax
C0/9rEnG5z8W5ZTE8TF/Mqjs8atcMDsidtqUZHy0mtpvI1uGh2bPB0JL9PmQ
5xS866wmyp8Eeh0MN1kI0PX8VpyJYQE8S/+oZvsWuZCn9F86bQJ02JmqlcgW
gmDg7A2ebeT7H1cNZQUQoPh3MNPLxTcgFRpTf0MNze8perH2BAYRQM8fjjAW
v4G/rs1vpa8ipz469SohhAC7Olw+vGN7A6uraxpCJPODDp5blcZuxO8fjAq0
7i2EcqvGi6piyAPprYUGbhJAXibqxhHNQnCVD7hgsQt5mS1Ve+lBAvww930r
6FoA6dr9P9fq0flTV5azLS7iIbA9615WZz54v6d1rQtErvP5eHtSOR6yMRVl
3Uz5kCjEM/VOC7mj/eZ+S29i/Z+ifs7CNA+ipQ6yHudGzrPpRempj4fuupY9
Ij25gL9R/SCJZH3r6KQts68YHn6b7yplO5kLmftWxUNqkaebP1ju24MH5egt
V513OeAWeHZ5Mgb5RKRAkg4DMT8TPVGSh8mBX6uebCUJJOt3S2oYjRN4KPix
iLWAXHCMtl96QzL/OXmIr3rsHjH/asQIlG7kAg0tLnj+N3J2ugG1e/54oEmK
d7BwyoO+hQvxeYfR9RkZ5Jpg4vGw7hq+IFOdB4yHd516cwa57D3JAs1uPDDA
FRaTJ/kg/eerbrk5crPbafc4WQmgI7lO3U/sfzxa9IrRJP3PMXwMf0KeADss
zli0bBWA99By+5tF5G45SQ/CPAlgIb4tLjNdCLusEk9/OkHSvzwphFytCKDd
IS8t7FkMrkdC2nWckH8Q6sviu04A1SdyOlZQChjW/JNROcijfVVvCRO//8Fq
Z4WMURkwm5/81diCnFiXuTOdIQB/3I+0ixtlgF2Vbb41iLyRZmLPGVECVB3X
8dybXw71OQyYns/Ioxx6nT5wE2BDNc5Q07ECCOZrFT93oPn1TLfRFxgGAkgx
elhJqFZCOufP1KUDyBfPRzaVbONhP2vexUvqVSBy8QbLtiTyP9eE1byW8HDG
WIn3kvVb6Ow888nnBvKb+RN1fSN4WGO78rJfoxqGGwxj0p4it2+oYK/vw0Pm
7+VXzAXV4Ng/OJfigBxzl/pXSDse3K4cmCPovIPcIfNYan/knMc/VVtG4+Fy
Jeu+q4a1MHaKOYp+FPnl0x4uyzZ4+DPukrl9sQ7YpAcP7OFE6xMNLk4nBIn1
Ra9o3WrV/o9AY/PuebkycvoOuk9z1/CgZrXHwMz0I5w9tlci4Cby8gajBqNT
eGiJr29KFKv/95xe1RFv5BaeFiWRB/DAsYzZOvWtHsoDe5Z9C5EnGkX8UuDA
A+eGZqvs73pgUeaJKytCrvGHI0mXGw/xMjcmynrqofj0yl79bOR11Iqrc0fw
oPJMOKw+vB70lwIYLsciH6CLLfkkRTy/3ZNXDrPUQ9D3M+FmbsiZGvYJ8dzC
w7LsN1tjho9wIHz7D7cS8vteqhpCgXg4lk+3lMXxAVojGFbPr6L2Fb13QI6q
Dg9mb/krv1PVQPcT3XMUCchfqd1+zbmbANJO7lSY7krwDH2dKSaMnP/l9+s3
jQiQrfklWz+yBFg/fzAQfo36rxqxAF29QYBBxfuFK0qFoJgXfvUyJfKBrvWd
Exj8v+ecdIS18qFxT2pZ3H10/9bdUqm4RKx/O9Riiz05csE8jXJPLkn9+4hJ
M9AjAAdSd3TSNn9mQWyx2fjRfci7q5X2cIxiYVBv157K8Aww+SA0bahJ8vyE
TOCtOGL98rbGK7R/OxVUA+8dcCepX0I8ZOMIm12gdm6Yqq0iGYqc6zIqUlD+
MP18VfcGdRcIUHzlUGFJBN79j+QSo1F+siX+5OkfDmL+8/0WbW5XLKg2n2iS
ikL5s5lNPJecRAe4MWSbKca+Bta7Mbb4aJRfeWIqhTgftRPrJIrk/rEIsKm9
eZ/zI8rPLCOFQiYr2iChxbOKxywM2JN2uPzZQvldnqzHoVG6NvAT3/mxmTYE
jLH1cuUKyMPHUglqXq0gv9f7yqRuIORe9hHifYPyx4XL4gwnvrdAZVVz5bTR
S7BVfn5Rmhm5xbeVQjbjFtCJCmrAaXmDkJp5P4M1yfPV09/oOxcwEGvy0OYb
owccMbrSevkbym9ze3XjguIw4PC6tyAJ7woMfWOnOOJJnh/T3cFmaoqBX5+P
LA63OMOr7JVBWpLn6wLFdrluHcDAbId9Qd8be7h26r0rLcnziS8or6aGdjbD
/kEbpevO1lBsufqr9x16vvJJkWWwXEgzeJle1dA/ZQ4cAgk8zE7Ie5TsDo4Y
N8P1deZ4wd9msOrW4frsEnJe8bOZ+orNcMSpUP1J/z2Q/pBSZiOIXP6Oxq8v
Es0gWKCNDS69C+aTii2qTMgNHL5H2x1qhuUgPo2DU3fgc2D3DcO/6P3vl8fS
r2jsb4Zg/ytXdjQZg2fn2RitNeT3hx/yPmdshnvzp/ZsHjIG+WtBmltfkLMF
lQedYG0G5UvrSWf9jEExe7Ji5yryfcyp26/5m4HFSuSSKq8JrLezSxZTovNj
f5uVEufRDKsabcxJUU/AmWK4mf8hckZnqQD33jb40xDVRdcTBv6Huno0eVH/
HOJyyTBq7YbWTydcsvtwwBPw9OOiGtrfM/3hwmWOS9h/88IjU36fgOto8zqb
Hdpfxm/965GBAxbqCt5dEVgZhREvxs+Udcgn7gw5FOh3Q9LZpdIx7UHQqQn1
SAtH+6cGw+teVDB0w9Pp6hjRSwOwWBKdT62PvETpvK0n8fxClS2XLg4Pgdxh
piLXGeQ59/s8XTWwUPjO6RzX8CdYqe/jYH6Bvp87TG8A0rBQcTyZ15F1/N96
g/YTSrR/0G2SgnkEhwUf51/HQqvHgcb+z7UZJeQ3WBS3tsaw4Myh1/nl8zj4
mv/s/kGyv5Hr57NzN35igePi2Uh/2Yl/+zV1FFyR14Srq3uw40AjE+ddVzIB
r6SCW0pJ9leqsgVWmyngwOuDkW361UngbtMIzfyK/OCXKqZ0MxwcjC3hmiRM
QozpdHSqEJqfjXr9R/e7Dw44qmRNrstOQWQP7TktbeTe9/s797wjfn66eoPf
5tS/eqPVLhX5E/t0z8VhHKRFMG7kmU+Dq33dnA0BObWZflB/Lw7UjM91Ut+a
hsTX/ufvtyGfTwu8ENeDgwj/5syk69Mw8iCyPbgFubGtk7bKEA7Uix+Nj5tN
w0dKscjdOOQeYTtknnbjYInbXP2owjRovpc06KsjcbnQJP1qHKxJSS2zrU/9
yzckLFKQj+992BgYgwP9bkapY55TYFzEVfKSZP8ss7o9S6Y1Dp7Qbq4ErE/C
rEOsYpAUyf5Zd6zJC3Uc7G1QTr7jPAn2FI1Cp3YgdzcOLnwmgYOYtfWjDXsm
QXWTMforyf5ZWraDXSvMODBuF33ukjoBsiyxh2azkJ+cLexNncXChpbjQOyu
CTh+jenzyD3kdD402MK3WLj+95D9Q9Nx+N7qf2aEn+Tzx+/7HYjFgi3hvmn1
3BgEel3lbv2O+vdSS2hflAcWEp+/20V3dgx+3dUruNCN/KjOXpM3T7GAZQw+
K543CnRiS7ORxci7NJV5KdSxcDYumMYV+wmKAvemDXohv6pzqSXoOBa+76p3
u70yAs9eKsX9uo489Jvw1usDWJhPvmo5pD0Cvn7U2nAa+bTnKbNNKizMXmCg
om4ZhlRsyVFKduTqsg9EWye7ISbhUpKO5DBscH35o72B7u9J27Atk6puSP7E
dx4ShyCPz2qhegC5+qHPu2i9uiFe46XZofFB4KNSV98oQl6vuarSTow/h1lW
fl+5Pgg9iknv3pLEH4kr93IH5bphvO/TkyNfiPFnt125kBty64blvsjd3VBd
fXfztPAAEGqm6DauI18LYLZdIuYfTa1bap7r/aAeMjDaooJc+Ni3Q7qc3RC9
kRZN93gAaM4un1o1Qa4mrJis8W//7Kz0bkvmQaB6dOL0mg/y+6k0IkfudMN+
Lbcw/QeD0Er1ILniNfIXuwITqYnX9+csFV+Q5iBECj8TESK5PmL8l1H16wa9
71O+Vj8H4bWFK2daOfKWqBlRs7JuqOJdSWYMGYKpj/vTGnqR8/y+Fb/d2A0v
797eJdY+BJJVBVcPTSJPUKHWyBjrBmMdYTrBo8PA3Tqz8OcHciuuvdLW9FjY
xqcqCf4cBi3hPRmZh9DvT1/4Nq+W83/6f+4+gxH4efRk4E9J5M4W9PLH/j2f
m2B0/d7YCEi/7OM010SuPBv6YaciFl7wnPgl4fnp3zpfuxPJ/uwArsrxHDMs
HGjzUzP1HYXZfPXhA7nI+fSjfAnRWPDvTpjPHB0D1esWp6a+IVeKTk3f+oiF
NY4Zn12e45BmuyAvdxzdnyUshpzXifFf9KVH2Ati/P+T8y37Akn8x19XF6eX
wsGppoOWr3knoa1BofvsCHIebQfuKDscXGO+OrpzxxSw8SaJfyXZ3380eOfu
PwU4MEmV37fdNgX3X96d2iJZH+5QkHnuQozfFWtmXw8T675FwRNfu0nW7wLS
P9E8o8ZDrpjdBT3qmX/rh8dmmNH6ndGz+7RbRwgw09NVJOI4AylMT6IrjyJX
tjHNECTmS7Q3HtlP1MzAlbe/Nx6RPH8xtLOAgmG2B0YXusINVmZA9M8BZksp
5JwpSQ+/RPZC3cJtWX/eWXhDs91AK4OcoNZ5KZenD17s5IuRVpyF8vq1xwly
yNXovo++u90PY6OSZtiYWUjELu35qYQ8TP7rjqupA8A8/OnixMoszKvssrQh
WT/VEXpw+d3+QbiRXh/NzTgHfDdviDwnWR/lvcobq3FnCGh2mAp3mM2BxT2/
aQF95F4n+IuZXIdg9rCIiJzlHBjL3fowSuIc5b/Z2imHwZjPZmYgfO5fvHmh
a4ScPn/qptLcMPiH/75thpsDTRZX2Zv3kC9pB9OyLA9Cv++PZkGVOWBn1JsS
ukny/Er3Ue1hjhGoP9FuWD46B1sSCgrp95G/aFnIU+8dhTyBklfxsfMgkeLZ
/dMRudZFLvejHm2Q4hLA0ZgbCn1BDkbuDai+SJreJ8P5vQ3MPdRM7siGg/DV
grYAQPnh5/TajoJ3HSDpq3eg0ScGFo23fiVLoPpoz56vurbGHSC8U9NPUjEa
Pi58ylHvRPVRBFvDJT3XDuBNknRhzo0GRyHepabPyF9lMHRGXe/491ythwln
NDyJuppmWod83xUx06K2Dngotn8gvzoGaKiOOG9cQN/vLrJz9/MrnRBPJamb
7RQHzAEcPLvbkevKtbP0EOs/M9qTeBq2RFg5HSMtHIPqvxZeegOp9i7YXvmu
nGqaDLJslhU/zVH9OHIpOvVecTfcTv8Rr/UrBZ5tJoyGPkTzz2cyhfLLieOn
Uyn1cUJCGvxItXcof4Lq0yjaDz1PqrBQ7H+mZHlfBnjsphY2EEb17ab7hazz
W1gw/NJ52oMyE7yTpGeVbZDz9hY9dz5JzP++fXAXeZ8JbOfejJwvQC68KiDC
a44DbjvbP/deZUFniRCv2FfksbeuUi6X40BgulPUNzAbhmb0l/VlUf1t8u4Z
tvg3DgwZpXKeeubAtavH+NVfIh+d4Q82ATzsMIuo2G2VC75/SmUp8ciLfX/i
3vjgQc6+Rq7PLA/CqCuPBfCQzB96cm0GVOLB0fp1VBRHPggkK7wjXEc+VHDP
5FIXHvZduGVUZJYPXdt1EPoUefQvJ22uWTz482xwlNfkQ8L7U/7eviTz1+zK
Mx1beNiVrpxwlrEAJJ+rymikINfrEbrVQ08Au9pgt1OXCsC0+BpVQTFyBd5j
4dssBDh0/O+arWEBZE8VbzqRzF9eyFBpbBEggDM2NSMtpgB2dfxx/diOnHmN
vY1ShgBxY71jG3MFcF2bWeY7yf79rJndX1M0CbAp3BLx9kwhGEQqykb+QS44
ShncakoAoUt2BnLPCkFKBj9jwYTmXx44+6UUuRBAb8fYs+fdhUD3c6zfThT5
D091TE0I8fw/Xpwz0ngDo3Mbtb8vIU/+qX840YcAScZ6DIMaRSC68ZRV4Sby
139DohXsCFCUVJa4drkYrM1Z+ARskNOut6moPyAAK72CbNDBEjA1KnnE5E8y
P+ok7aV3m/BvfdEhpLQEyv3Cz5nHIp+TtM9TMCDADadv9EcaS4C7xOPwuXjk
U1qRl7NvEWCAni05eakEIj12anokI/+j8VAp9gYBpBsJo4dESuFQpdF50Szk
3l/DVBp0CHD25GKnL3sp0EQd5rqYgdxMbs7ZmeiVBqnHB7hKIelmVmM1iatT
NL1kuEmAHyadTwd2lkL74yOsfGnINePT+DeI1wcFqW/O5pZAQ0ql+OMY5JmV
cPf0fQIM7piT1xArAY/iWv3JAOR9Oat8TNYEuIN5XnzXqRi2l19G33VEzrLy
eH++GwEmFZyYT1YXQa63kEz+XeSCI6I2ba8IsI6NYWB/+gZC/nyk8FdGPm1C
/2Qf8fvdddRdKp8Xws2gI1E4ZuS61L32t88TYGkTGi+vFEBDjbK99+wkqf8c
oSOAT/gg9yW5//FfL98g71K3ijd5j4eMEE5aUbF8oDHQ3RDXJ+m/UrzrtY/w
sMl89OUYbR6c9yiylqJEvkPsdsoAJx7yrYZZZFdyQPt1oO1Zkv0/2q0UISMD
OBiMH72QsTsHan9PNZiYIC+b5GpT8MJBeXL804XBLGhu0hyWoELeZ/1Ah4FY
P9dNHfnItpYJaqtpEadrUfwbPVg4M06Mr2yn8Ul1OzMhWvJE8iZJfCXmM09S
iPUXjSaN/XGWDLjPsX4oXwQ5TOqOPArHwj58woJLYDqk8XcVMFEgp2UtbhHw
wULLz/KcY3rp4GjS179vAsX/o78ulhYIY4Hl3KabHGsaBI7mRFexI1e59YLG
IBkPuqVdFMPNeaBK4SYaKYPaT04vXp7tLBbOp5z0YFJLg2qp68OWMuj4Yyq0
VofF2mBEmaUj3DMEWC7Tzu8yQ+O7YZUNnx5zGwQ2rDkKC4TArwpjmWEV5MKK
dXe29NrgIrfOwEmBUOCt45dciUE+mccteXyrDebwhYxLRuGwvJPxg48Kyg8s
GBTqxmTaITT6UtC0bAToqGawNAcjN1xjKzNzbQf/0CNxM4cjidepZsnbh7wt
49vjlrF26B39lpXlFgXbDzpNz8qj8T8MQ6hPV+4Avt77Q3WfXwOdWWqkagny
g2F6ZkDMT0Rlbv6S844Bgwtm7cIk+Yn/QX4eZmJ+cEZzxUrYMQ7c2ooDQtqQ
a7C4unENdQKtu0z1PYcEeN1RvOpghvKDZDOe5ArLLjjI3pip6J8EpgsXoy3o
UX5gfTVP/iFbN5yLSME/mEsGjtIjbbUfkDd/OlRN7dsNpWt/XDLepMBSSFym
pQzKHzpKw34eWu8GeHEqX9ouFajr1T67lCOfCxTeGhbFwmvuSYwtbxqwmohn
Z/Cg35/pb9GPS3bE+l3lbaIMfzoYmhWqudcib9xhdEeoEQtZOW+MlaUzgJE/
ho1PEvXfE1SPP/ccxoGLsH3KS79MYr4nl3o1AflimNWf8gAcRBVSOZesZ8F2
lev6XZL5+zWzXIfn8ziICIf9DXI54Hb9YoeZDfKoHfiuqGt4MPvqwn8gLReK
XnXtd5xAjhW+7TwWjYeYwAO6Dvl54H2CP9L8FOr/Lw7qW8T/wkNxyZP837sK
QO6ZuE5/Asn64bU+mgMmBJgQrb7XYFUIax9PXvXch+IfgfEGKy1x/Jwp2PVE
YrII9NJ4IijNkLcNM3GUXCXAhS+ZO+59KIWpraqbNpXIy/23m4GZANcLfFKq
BStB5+q5VyNsaH0lplo0ToCYv9BwH8DWHn8HV07m+bb5IL9d++PAiwA8fNWb
E5Dk/wDuHoemlb4jZ67h6681woPC5Y7tg5/qIN86JeisDFofsh6c1ys6i4d5
vOmH6q2P4P1ie7HRCblz4zx31i8cfJWNetY63ADslzXabk8g/8NO49hfjYNt
rkdfqz40wcVDr9/LqqD9Sa852unu/3uvk0+E19BiM+SKtFowkOyv0xKxT3d/
goPPT54K9jG1gILgAco/bci/ieWnOV3DAcWdqBGBrRaI91vY3txC7hfNnNYv
gQPLmqgslb5WKDk+GEAjhvZvnbTTbVs6iIN9odMyRk+JcSZ4+0vTNeTjvdZ3
LYjx24zV47KwQTs8G7Qf8fZAHny4z1hqFAt9RnRyq5c7wE3Gj7a3DDlFfrB9
WB4WomnuzW23dALNfO2bfTRofxzvW0m+YjMsHJMpnTrd2A0z38rGN+yQC9UO
BTAIEfN3Sf31jSEsONS0hvVOIBdvuvHR+VM3UPNGvPMrwsEhF+Fz9+TQ/LmL
MWb3ScNu8NIX0/qUgocREW66rUwSJ6zhLMO74D2/9hdl/h5IePB5b8w19H6u
8j91VKryXZCoP4+PvtcLwWG6nSc+In+RG60i79kFBpMtO1mv9cE9DoeG2G/I
R+1TbgX97YLPDc7hEXsGQIwq3eq3Gpqf+fVVJ1PsYTdMX36w8dtrECzeZ54t
TUAulJEcV2ndDS97eSl/ZQzCzCVBju505N4MR9rac7rBh0Y6/8KjIdCwWb0w
3Ilc8U/D9vAVLOTf/DM6kPcJIFTo+3EXNL8irLBY+Ocs7t9zYZdTxCZBsNXm
N8ckyfv9PGR/a2pPwpCekcDho4ug82N15+ckVN9inYK2TG5PwI4B95cSxHa1
nsyT3xeOnDbj+PU4Yr2R8f5jP4F4/FnFEbktkuO3yzS5V9LHQfQDffO5iwvA
ODex9oBkf4/xXObTYx/GoOYmx+TNwXlQNWcdZn2OXPPalb7P9Z9A+uOZa5Sa
87AxGXC/1Yrk/L6GKNh5DsPwU/Yhg4o5mAx15C03Qc6WI/FT/+kw8OeuzJUW
zcE9q7+9QiRexiuSuo9jGEz5MwZxMXOgWZuc8JlkfoGmSUfjOPswMB3Q+RZJ
9Gxz8eZZEn9/5kXdYPoQrMZ85l10noOQU9cEFgyQp4Wd45u0HYRz/GP3jETm
wMUkIf0Hyf4g7tDlMCWmARjSKVX71ToL57qe6mRfRf5o1MpfdKkP5By/4Fmf
zYJthfv4T5L9P+eF3jPsxfbC56enevmOz8Iu7oI/wbLIG765zFoc64UTXWON
53fOgsrz4/rKJM/fd7FlKAY/7oGtmpyW590z/+apamRInt8XwLW/3AoiwNvm
B6sMETPA799KaylGMv9yjq9H2gsP8RxhhOeqM1CdXJtmR7L/Jzr9pKTkNjE+
LZkrjc1P/5v/DQoh2X/wibqcmA7gIJd+Cv/EchpMWHdlHO9B82s43tiYzloc
BN4VEP1CPQ2cp9d0GbKR+9v05Ezm44CHvfc+C2YKemJnvfRI9n/EFQqtckXj
wG6WZ5bWdQrCLSrWTcxJ3j/qxuFRl4SDCaF9EkrRU7D9peQMxolkf8aUakNk
Hg7kZK9yWNVPgUDFO+1HAch5WUR8hKuI3z/JqwLLU7CyeWdSKBF5RL9K1Wwr
DpTmH6Q6iU9D9aYSTWwV8lNPIn6cmsSB/F1BTRbiuHY+drEVP4IcWxH73mod
BzSltAebsNPwvYCh89kf5K+zR9v+7c8MkMLIU3HNQNcT3dP+XKh9R1Te7P2S
gIdlS5myHO0Z4OPmsRcWQi5z+hj1ILF+UaZSkwpxmwEv1ZOGuiT7u65Pnrsv
MEGAZIs9Ooa5M+Akt3Mk/jjyXnuWP40aPTDvjZXXaJmB6fePbr88SbK/MOLK
tXcKPeCzpCkd2DgDSuUvDY6SeLY2z3mRLgLU/uzAK2XM/HsPZR03yedTPu4V
/yFBgMffRCi4ns2AbBLlXkqS8zPxeJPt1oKHvTdOsLEZzQDzyGWfS8LI+3/s
qfjyEv9vXK7arTYDz1nthuJI+ie2kqqUn9h+XU1jzB6cM3BMuWVRi6T9zh49
09r0AwfNqqnM2LZpYC1UXt7aRO0vFXzznf8cDoSNZcYPRE9DUZvPT8w08sfC
5XMeWBxc5/l0YZfSNLR7G9Va1yNfbsz3PV6Gg5+lN0+yT0yB1yMvBtlo5L4f
BKd+EftnojDt+f3Eujjza5ssjzPyD19tkyLDcLChfmb61sMpiNLXWxK8T9J/
qiwvbxPzy4iB8s0RzSm4N+6+om2AnIt5fXycWP+xhfzcs3p6Cq78SAiV0UDe
f/JA5o1nOMAqFX54vn8KTj+qdX9+keT9u3n23LzWuH/72CjyfkzC7i+9XI2S
JPurNAfHO+7jAD8r/Verc5JYP/ldmRZAXp/ZdfiVHvH8/PSbSlMmIefJTZsM
ZuSXJ5xN0zVwYHJiEW/gNvnv/a7Wn3YiP0vwft+gSsyvxebtAiwnwfjWw1m2
bTS+PZ2crvhykeiuBUn7NCdBo6Xr1uIKchPvFcaL/Dj4c5A3h21wAj5S1MvX
1CInjg+xCfQ4eJ/96e5qwARwKKaXOSYiv6zxZ97mDxZeadH63tKagAqfOac7
L5A3S8oFGPzEApfnVGa67AQIvaw+f41k/YJhT7nco2ksjKvxZxb9Gf/3vJVl
kAnyUw1KmhZ4LAR6js8k1IzD6teW5jpl5Izhlt9McNh/71d+OVE1/u/9yg0S
JOvrNqYzuro9WPjioUPxsGH8335KsWgV5JPhai7Og1hIH6sNq+wdB/OttXsX
tJCH2aetD0xhYb1z61vur3EwOC80V3YHueGQ5UroJhbkFt+8Y7k8AV0aI75s
nshpbAUjJbhwMO4etTjxYQKqT5x/d6IM+aWBlXwtWRwIXGFUWJOchJYYQZWI
GeQUO/p26D7CwVC22p6VwUkos2ocP3oU/f6HzTro96UR4y+Xx/U96f9XVXce
TtXWBgA8lKjMEiFDlCJOZqHXHJnqFtecUsol4ZhShjIcQwghisxTJIpMuShn
UDKG4so8nSiEBunb/lr7+/v3rLP3Wc+79tp77fW+exyySB9DngUhl/g8WNvV
j7XfFprE7TgBGjk6FVbtyCPrOAbSmLuhoe3jDirzJER+lePnweWX/mF5NTLd
0QNOrK65jdj1SfByz7VDuOtTZwqx+Mf4e6gqkRQOUJyCDvmYK7y4/Fu1F6xr
S/oDYNSgkSE4MAUqvz9wsOLyf4Oa3a3mBz6Crpe851jkNCTtixjWx+UXSybO
XBra8R/IcPP0ZonMAP3Y2Z7vbrj5l+pwjbl2GJ5kSLEyJ83Aftktl9Rw7yfK
5+erT0mMQNBocp7qxszmPpuzZbdx+c2CtUHCoyPQMCPNEuY0C6IPzadjcfnd
60OdeupY3LeXT2nRGmfhoreWlncy8gVNOy8H4TFYnkhnPMo2B/JqVUSBDOSt
xywamcrGIEjVMFLHZg6mWAQMM/KQS+lavK3nH4cnQW6JbPfmQFeIvgQlyGW3
5QlPPhoH3oDftIShOTiyAAf+qkDuMh55Se7wBET7lDS8OkAHVWOaVlwN7v3N
sdItk8kT4CF10zfWkQ5nRzvaCI3Isftny4v9ExDyRflaRSgd0mqbfmc04/L/
CiT7FBcnYF04mjEmgQ7ZR5Nq1lqQ37pODTNRmYTLwVlCB17QoY7viG8OGfmW
kYFnb/0mN+sQE5o/0DffE5sztuHyF0mNdC1sXmM2epTyYJAOsmIiiQScb9cV
JkuFT0LKvO6+zyN0WO0J1qjC+WrncV+1m5MgW273RXQIO7+T7YmaOBf/Jfp4
xWoSdu6ytlei0eG3S67BJSry9MTS0BtKk5v7N7JkqulQWnpVPBp3/loRcaY3
eSeBPZM11h97LjlotqDU+fr/7p+7OccmgFk23sc1ig4uyvGLMrj+EXxE26Ck
TMA2/hTYfp4OkQ2TJRq4/l/SOba+g38CphJL5rcL06GV3GDw4AVyQvj2jNLF
MZBk0nrPHzwHlTnM7xWLcPUJhCeqXN2H4dRVjxzG4Blg5SN16Pvi3v+Nvvl6
jrkD6mbDcx0MeyB4+KzawS/o+ZDEy1RNONUN1l9uLfOeaQaZy1+Y2s6i53ut
vE+VzW3d0Fti0i/oVA93wwK1bWPQ+kKonIlN7e1u2E+7oP2k8F/gf2BJeMmA
2q9WzteUYvcfhMJzR9xM/93Mz72/sobaT0rccxCV74G7lfGfVHWrYM8l5e/+
o2h95Of2BJne4W5QCGMpY8sthUiTH3vuB+PyE8TXbdmauoBp/PDM0adFUMhq
K+B4Aq3/aL0UsDDq64SkB6m0o/75kFf6aXDYEK0/aQe+EVqV7Nys751ZsiN3
M3/7TzsXWt8S+nt//YW9HSCb0aot8zULdDLtjx9qRetvD3P2u1gMtEOexREx
Sc8M6CNb3YtyRut7hEPHh00738IV9452v3dpEJZfd2P3CbQ++N6nKEVv9A2Q
mrOfj4emwJfJRqN+HbT+KJX20KZR9A3sF75er/NfEjisWYZo4PKHnFfY/cRd
2kD4ZsMbdssEcB6zjLEsRuur/PbDdle/00A0/jBvbEI8/HP6UUm2LPIIr5yX
Wrk0OCBST+dTi4X0xerUqS60v5P5Q2XDR08aXBErONQ/FLP5vrFk30PkMfy+
RcxqNFhRbZFSNokG7/MSdHBA3p/r8ZJ1Nw1MecVWQsyioGRJs5BLBbl4nA+X
3lcqsK8l3NAzjoQa7fluFg7kfgN6Dhf7qbDCXBw4+4AEXDN35L8to/2lpNzH
DcbtVBAQiLJvOEsCIbYs3VVcfWOGPOVF02YqpGVFfJHfQtrcHy8yM4i8um+P
Z1YTdbMudZvrrwgIvWajLo1zrebWC4GvMbeuzy/kI0Hkz4zZc5+QazQlMY9T
qDDrHuueLkuCT0pXnnOPI4/QnJ/52UKFhQUGbqZdJGC/qnWg/j/kSgvthYHY
8anSrnG+PyOg4yqj3Tbc8RVaBnXl6qhQohTqzvAuAu7vjm482ItcJ9XD8PUL
KvDMUutXGiI285MGwruQ50WPhddXUUGvWvNG5pMIYKzfO26Gq+8sVNWi0fuS
Ci2jjpWV0xHQx9B5U2QAuezUdEQY9v/8w2Q1tsiQ4Cv5dvfjMeSnByNumdOo
8E0hfTFXlQR6aqfDH00gd+cO9Q94RwWW9idJ3PYkELblGIQ55HzuP6QSh6jw
Sqmbza2JBD3mqg9TfyAfee/1t+MSFRSezppI2kSCuua17RZcKD70Q3qMDTao
oJlHLGZ+Egl6+QnKRvuQ5+dUKKti8VccbJNCNY+CnAe/QQ8XfyrK6nOjB2kQ
L2brYtMTBU84pLuSjZGPHsiNVlOhAc9IyflQiAaPnSkTRnbIX6TQtPx1aJAZ
fr+aFhcNQjtE/pBw9cOP37vCNXKCBnIpA2cmn0cDh+Hte/+4I+eoHthdZUWD
lq+2zPHSMTAttD76MgQ5xOQbRmI+JtUre+ZwDNQK6gnG4vwOQT/Ky4AGsUrc
l3tLooFXh5Q55IaccaejTpMeDb4czekbzoyGFd7rnUyuyNUtGveU6NNgRkv0
tHl+NIR3p15kxLUX6tLs6cc8k/dhTUJBNIQYN8kq4lw7SHmHnDENhP+qMFN9
Gw02Ef4VW72QpwqPqWhj52f3q7DGvzgalpx2zRfg2u/eG2mhgfVvMhOJKxXr
3z6v6QUTXP+2+4Y3ekrSwKPcU/xwSxQ4uwbqLxgi98qljrlw0sCmtoF5+kgU
iPzQbWWRR36ONe8tCYufxFN6/uq2kdh8SlkPxsXP/X+c2Y5h8SkjVeFhYkuC
fbTJmh+zKP4e+Tl9SEmjAt3t6obyTDgYKViyPH6KfDV9n0b2KSqIDc6k/zcZ
CsLlW5w0ziOvsfstasVGhbunf+wN23kb9FpeCP3agzw5I+hKVhsF/NQGo6WV
QuBfWSYRqw60fz37+9GFuCQKrEpnnJs6HwiNLTrLTknIB3Z5sBlfpICE4AbD
DUoAhGRPpy2cQ77GtI/zuyoFLuocjM+66A/L9tH5rwjIM5bPCC3xUGDOvOtE
ho0v7EoOfu/NgtzZ2dnAY4kMRRbfThy57Q1mTjc2foyj/d/+HbdWEjbrmqWV
9zdWekF9vZns0SbkW+I0nUJayMBjLFloOOwJUQsCjrRy5FWuOkt3C8lQf+Zr
3a0LHnBo1w6CbyLy/JfNi38FkyHdUfWciqUbsMbUqRQ4I/fR7PJRPE+GUWON
X6NbXTbzkcoGcfvzpV/VcA0CGR4uSAf6Wl0Cjgf8n+6IIX+xeFA2XJoMmnGE
gq2CTjDnsF3MZSfysqGdHuOYr9QGZztLOoFBTfG/HTh3XTzEKc1FBsLJzkez
Co7QPG4bWrOA9tffPjaZXKZNhti+0uEPMZdgdDmXHLkftSe70Ya4lluBfvmX
519ka2DknK5dbkftp7Q4Gk6utUJYsdCo53Mb+LUjPfBON/KMLNNGyKZA0Jnf
HQviQfAXd+Iz4xxc/XerV7EhshRgbTZP2NXlB9fCtrk6SCJverqeXWBLAc/x
elqWaQCweZdNhVsi1y3duLnkTIGzji/IU58DYHdS6qluXP35KZHAL5znKLDR
sHUvNTAAtm1wtmra4JymxKZlQIFEi+qt4yLXIdRNwEANcPXXq4O7HmtSoJc9
eNt8gT9s71WXH1NCHhCv0Np4lAIdceWG5A0/OGvJc3JKCvnPBcsDpMMUIIg/
SGZK84OQ1dymHbj65W4Vg4Xaklj8mwrqPTXzA9ugkUhTXP3w40m/zadEKJCz
JjYmxeQH7fNBJP/dyH3i3eo0+bDzE+Uj/gzwhQW6Y/K3Hbj62B/o1ov8mPdW
snFn+wLh0du7k2y4/O2xUU/pvRQQ0zbJd6j0hfRumwh1XH7KGxOX5p/Y+DPn
uCS9x9YXqij040G48afLVEGo2EWBcjmq99/ffOBDELdMPK6+uFlfUUfeNgpo
L73zXL3rA4k746rHvqP4ulzVtCG/QYYlYyvlPwd94M9N2y7KV1x+i5Ptuy3f
yXDaSCc1p9MbhsW/TrPMIb+2ZGsnvkyGB/f+U1mP8YZ/irhG6yeQW3ZH5/Z8
wcbfPQeqtb03nPVrZRUfxeW/nPzscIdOhrrHlUvMYt7Aadeadn0IOU1szODK
NPb7EotseVNEaKYp+6z1I+98uGIkOEmG24MSdxXIRGAvOK/i+x65jYw+n+84
GVQ0Q2lbyomgP3Qz/3EP8ttt3xWCRsmgmG10TCuJCMfaxTlIXcitWz5KeXwi
g9XNzGMnfIlwpKfc6mQHcib/nXqMw2SItvMwEL1AhF6Zzt/17chD2CJDGobI
MDt+d7/cKSJc0S46Y/0Wd/2RP/aw6SMZ8u/wcCsrEoF42cCR0IbcNkDRNOwD
GRLfSECbOBGePbBmGKAinyqrq+PE3DvqQ62bEBE+irPK2uBcMef5KzbMT7z9
TNfBfPJC6bIlzuesOdu8sOOPnCvu+SxHBN2nJQWDNOSUPoWLR7HzL7xMaAg3
JMJegYlPzW+QyzMeZqnB/n/OkNve/W5E+BMgOXbrHS5/qnxbLdcIGUT2EBSP
BBOhj6Z2/Ceu/yRuhG3IYf2f+M9s6GIcEdrirs4exfV/9eWUpy6Y/3k29Wdf
IhFEcodqPXBe0G3+1mqMDHxWtmdPPiLCmN3+XT7dyCtyPWecMHea8P0xhTmf
0n2JWzinZAfJOW3Gx/ZGw9UyIsTdu8qViouPpbTP6uYTZFi8znF9tY4IPnNz
7Pd7kbOHd/CtYZ4xL3hI6TURLjHwvDPDxV/Cznf8pCkyHPqTJ6j5kQgBynQT
Rlz8EuUIxl4zZNijkUI9uUKEay5KPAIfkPMet33FMI/ND5/aslKVvCEpLnEf
5zBu/GTaH67H5t8nxWOKphHewKZmSTLGjb90vZdajtj45SsStZl47w1D33m6
PXDjt+xU3t/cDNj1sUzDPPiUD6yeUL08s4zc7PljQiMLBfaf+v2qqMEHbPKi
AnTWkX8fFbVe4KQAz1XxRkGCL9St6qfLbEPXH4Hpa3WqghRImqh1V2j2BSW2
tkpHTuRivgUyydIUmP8W2j1W6Af850vqCbj6/jksxR1X1Ckwwm+vzUryh5Nd
h7tdFZCXvtZQZzCjwB++M6AWex0K+qcSS07gvk+y4vQq9zwF2rIkzLhyAiBV
jH3XTntcfXgfxuoX3hRopRxcZy+/Aeqe1kadnsgLOq+HU0kUcK1ndR+pvwn2
RRpCiRHIPyZa+Cxh86vF4FImWSYItL+F6bPn4r5/YfIjq5+bCo8mnlUYyN8G
K7FLN9aE0f3d9uqTVy7mUEF2VkrE4EAECBn+Ha5Vh5xT81AS7RwNusNUqvzt
Y4BOW5cmRqL70/8BwsrVvg==
     "], {{0, 0}, {300, 7}}, {0, 1}], AspectRatio -> 
    NCache[
      Rational[1, 2], 0.5], Background -> GrayLevel[1], Frame -> True, 
    FrameLabel -> {None, None}, FrameTicks -> {{{{6.5, 
         FormBox["\"Predicted Exon\"", TraditionalForm]}, {5.5, 
         FormBox["\"Predicted Intron\"", TraditionalForm]}, {4.5, 
         FormBox["\"Predicted Unannotated\"", TraditionalForm]}, {2.5, 
         FormBox["\"Real Exon\"", TraditionalForm]}, {1.5, 
         FormBox["\"Real Intron\"", TraditionalForm]}, {0.5, 
         FormBox["\"Real Unannotated\"", TraditionalForm]}}, None}, {{{-0.5, 
         FormBox["0", TraditionalForm]}, {49.5, 
         FormBox["50", TraditionalForm]}, {99.5, 
         FormBox["100", TraditionalForm]}, {149.5, 
         FormBox["150", TraditionalForm]}, {199.5, 
         FormBox["200", TraditionalForm]}, {249.5, 
         FormBox["250", TraditionalForm]}, {299.5, 
         FormBox["300", TraditionalForm]}}, None}}, GridLinesStyle -> 
    Directive[
      GrayLevel[0.5, 0.4]], 
    Method -> {
     "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic}],
   FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1:eJw1Vgk0lev3NkSGlFKKlBSlydSAwiNTaTBF3ZQhQ4mbMpQrQpSUm4RElKFC
lFRSlGTIlOEMOObhDBxn+iKKbuXnv5b/u9a71ru+9a397v08z97Pq+J2zs5T
VEhISHh2N8zu/zuvIRw2y4V9htDcWlrcMJRoRYWWomRGQOdn8M+rWSuOHkbL
lMnYVBEVxuYflrTp1M59d8cNww9CznJtsDl/Lnr7rVq4b3x3MbfvLEwjd8hW
X2iDa9ran0kj//9/AP7UFiqrd7bBr7b97OSeOqg3C+iujH/wTlpd89audlwZ
ixlySK+bi3MZATZZRuPp7bijZOBQ8r0OpCpjsR8+V7D1rqLV0Zl2ZO0l6uVt
6+fiR4Hdlej04WQHXvpnGwQV1ENKWSrV8FQ0slfLnFWp6UDlA4cimljD3L0x
OOEeHRq9ngZyvYSqnmsDLEKoW666xmJ53kwsN4YG+rf391LKGubyuQUy7580
Gy4N46vPSU8vbUSlj5Wr59Z4/Ks9nv/mUCdE9q8NP3aucS7PO7C46FOmWNSJ
JRfax0sbGtGvsC0/Jj8BQu+ZDeFLurA2M+aUouqXufwT8X7GqYsZ2AWdL7u7
L4V9wa+65RMFG+7iohmNbUnrgsl3waGezi9zdSVD64bNVKF+N+xUsit3b2uC
wsVfhq2P74HT3DB/aXo33A467Ei/1TRXbwqeLDFdHvynG/5BEk9/jTRBV3Xo
+rjKfbgc/bC+37UHUdnvlZxMmudwSINi+o6dptU9SGz2jS9Pb4YD5TN5WUY6
2gYLzfPUevFoSmXe6h/Nc/g8QJyauoNMTC9er2sPCrNtgX9E/kp9pQxYemd5
+HN6UW0Vw+0vaJnDLRPzXigG0g72oS14twvEW7HvXp1OYVMmPn5LjDJ40Qfm
YwElw7V1Ds8s/KMnk5i1uB8TrVkWQu9bcURQSoN0NnQuR2eLB/Yj8vImpyIp
0hzO2eBXzrz06eiHlNy8e4O6JHiaPwslWz5CnnhwJUlvAAl5fSRZT9Ic/o/g
dmCctCNtAIpGb6X2JJAQmP5QxT3mMZTifQbv/x5ANjXezK+CNMfLE/ztPf5j
RnMQm854h2XxSLj6Lb52ovYJGha8CNc5OYhXf0zfkRXIc3zlYP0Ln/meCYPY
lbRqXHgvGQn7o3yixXIRZat++171IKo2/tisE0ie4zEXg9+Y8o0Tg9hfQfJ0
yyIjK+uC7AqzPBglZz38pTYEin1+RkILeY7fPKTpOa/XPDoER05UV9V/ZBRN
nX7zNPIpproVC0/GDIEe7iT3TZ0yx3s+HC7TdiSVDsF7me6hdUco+Gjt6Li7
Mh+vlJPKazlD+JYve/1wFGVODwWQrbIxn15JR4gx51NUEQXNOQdnmmYKcNZD
pnnzITpEO6p/vu6jzOnkGRrFG+2dw+iI9XmwnSlFRe9vo8fORs+h/jS6N/4F
HXLCQb5L9ahz+nmOqwdMPaoH6UhLtskz86SCY69t+TW0EHT+DHdyMQPrtmyi
ByZQ53T1Aoj/EKBuyoDIi4oyj5DZOCGWhnxuETSo+woXnWFgUNsh0d6DiriS
cl655Suskm9nf49joKKY42N2iIp3Y9rpcbmvseDYyXX9xQw80I0w276TCsaW
nAMuYm/wXxrf6XM3A6Fly1apKlMh46X4n6Z7CTj9wSnPhJhwNCyYlJOgQu9R
XL5Q5Vt0qYhTE9czof/JuEV0jAK3fhFH8upS1HskyIQcZGKFaUfOty4KYhSC
JLNDy1CSu3qfmz8T3z/7hDOqKHhlz33n3/0eTzj5kZYpTLTvE/6LWkBB320X
L1O9ciRt1S3X+shE8ZdkreokCiS+UJcvTf6IqPPVP5YzmUiw2iL5+jIFOuL7
6pjfKuD/2lpnRpIFP3LlUPYpCgrXOL/vzvuEk997/h7WZMHa/mhZgjUFZkYr
5KqPVsJG3yu32YEFDRovIVKPgs7jFO8C8SogdGKoOISFBY6RPv4qFPgG/1uV
+KYKGhURSulZLHB7l5u5SVEges9CMdSjGkoiMkej6lhodHmuZPeNjJRiIX8P
uRpIm6fe8eazkEc3mdzTS4YGpazhYFUNfl5Xa7KVG8Z1z85m7c9kVBGBKjv8
PmO08aW4vv4wTrHP5qgUknFERjN41ZpadMoY7VnjMgwzH9HwxffI4G4aJYm1
1qLOpjFk/rVhrBOkHBWOICNi3yN1weU6lCQeKRHkD0PYT0NrzIsM+VNOER1b
6vGkg/61nTQ822fVEkO2ZORHLe/82FOPJIVzm8u/D6Pi4rEh0i4yjLPImrk3
GxB54j/Px0ojeDAtKP20joy2j7HXb+s3wi/jemasyQhCQ68mFC0gw7vXfCCI
3QhXulyPv9cIHGcUfDInSRD6ObPT9d4XWKtlLnOMG4F+5AvT+H4SkpaXxe2z
aIKR1xabPcUjWCFmrhRRR8KmHYHDWpNN2Frw7qZ69wi+X++eOFdEwkc7DSOF
x81QEph9XiTERrvU+WaXVBLsz7PvCh9ugbQ2eea7GhvFt8RyrCNJYN/K5o8K
t+JngNOu/gNsJMimhcGHhNCCE+aUolawS0YDP/ux4ZeodVTTnoQbHrFWfZok
0KYvvHh2jw1r+VpNZUMSDgd4XbK9TkKtgQgnsZwNjdTjEovWk7A60jzn82wd
b8LjVEMYbCxQGhv8s5CE0fi1FP2dZDyuUnRxkxxFh6FMQB/RitcZM7+f3yIj
USw31VJzFImmeqrlla0IK+zduJZFRuS+bW1aDqOwsXRvT0+c9YXyUodkAwr8
YisWrggZhYx1XHSoZyvkmpKvSM32gWvLAcuZzFE02pfqntBtRX93wPMwLgXW
izujhmtHEePIZO+WbEXeqE3XuAkVRvYeH5t5o7BwXXR/Zc+sT01tFTt9n4ot
975OFS/hQOTUrgP/PWuBwXxp7Z4xKlZ2h25L1+Pgk4/nr+6wFsyXZ5+wtmyD
1CpJ3yhnDi77xT8vs2kBWfVzTHVmG6Zd7uZ5X+VgV9B75/trW5C+LbtYd6oN
7GwVhm0+BzztV4MOe1ogZhoz9t6zHVYx8Wr6lRw85OW5LXZtga+dr4YxtR3F
Z2dOr+nkwCY3g9k0ey/tpL1PjXEHFA/75s8nZvN0Sz4V86AFxn678vYVdiBC
r48nEOOiWOkW2/RDC/Ij1rCaVtIwvOqgZocSF6doUd4z3S2Qixdfa3uDhoOi
7/3Kt3GxIuESr2y6BaEZPOf27zS8Ym8sfryfi8aDfr4XV7SCVUhJO+bRiRUt
Kd9jT3IROt/rq/YszlYf33X2kTsR9nq+fsA/XGhUOfvzHVrxtvnhMjd0gZly
McTxNhcDoQ4TeYGtWNN31W74WRf2h7HK9+RwcUf34EWPWX5v8Lxveyt2o8jd
XmhjORem4yZTyq9aMf6fTZPgejfkLatNZNu4mHymf6mH1IoT0rqSAZPdCNXQ
ufaDw0Xuaa1fybO6qlFcZfHDrQd0uay6fmEettyRw8b5JGzeJBoVQurB3ulF
UrUreLgmWCh0XX627/RHK2YMe/G8P+zgc00e+g9IVTLVSPi9r/VXVEEv5Gr4
cUkWPOg+FYs02UHCqb/e6Eso9CH46QlyiBMP8eLCpplmJJBOp138N7oPA3Ff
5NwDeRh1/yX65zAJekFXXstO9ME8cNeR/bE8mFT+qDnuTkJ29OmvSSf7UXDs
aYp2Ng9pq79dK/UnQTr50FaF1n4sxoqeFaU8TIQILJbP9m/gk23eDwwGEKR6
fZUQiYdDXaPzL9whoa9YIVclfwB9kt9dRoZ5yNnJqqdkkrCOPjNGkR6EKeGR
3fKbh5nEwRtas3Ojc9Rf9q7JIJ62UZlvlvLx11jP/rjZ98y/YyyNo8GDWFRm
suHBZj5eWtGkeS0k7Jn+65BC0SAuZLw8c9WED6lnlCbL2T6fFGry6RkeRM/V
Nc98jvHhLtlyK5dPQr4Ebj5YNYQ93rcFduf5+HCqwUrsNwnOsq/yXOyHkGv9
R2vXdT6W1dQscp+dk3Ir1OpUYocgs+NsgMpDPnxVPpE+rSSjXjmFxagcQoBi
7xuJN3zUhb2/s3ozGaEbpOflTA2ha2b/FPGFjzW9JXahs/NZSzNsrZcmHWCV
7qLR+QjWfyXXbUkGa+eY8aZTdDxpVL/8cZoPSvLzNt1jZNw38nDhpdMhXXSv
4omsAJsn8u7enfUFKwva5UIqHX53xUVubRDgqu3jI9+CyBC12p9+XooB2qUL
ZoFGAvQWZiy3vU5GiUN5mc4eBgxcmdHHHQTYsSCtszB5dv47aXVNBDGQbX64
weRvAeLOJKcuyCFD2fPRj5JCBiQ2V0lvihJgpPaOo/ebWR/5W14+mMWAr6y2
1eL7Ahir3lpZX0NGTOCN7buVmGibzIifKhIg9UpMr1obGYahv+x+2zGxq2ch
daBOgPH+qAdRDDLGo875VdxgIvPT5WV1/QIcMAh3HhonIyeWfvvKJybEc3hH
CycFeJx6SRkiFDgmOhSa/mDi79jj9+8uIPD7+4XB9MUULEqrbxLTYIFyvrE3
dB0BWv5PtvwrCirzhr2XHGMh6adG6IsNBIqcw8fi7agIKJknqXyVhaNXE1fS
NxO4uWTeT6lvVKjVrM3d/IIFhYVTZUu1CLjXxohcS2xDJ9nYXK+bhd57Jxz3
bidgeElGemZbO24OODPMxIbxUKVyOliPgLxGglxwWzsM+KFXbLWG4VqglvrM
gMDXIXmlb4EdEPy8r+x8fNbvd9zUGzAm0HA3TfXsMhoyJUrLvaOHwfoooC02
J/DIcs3WkTc02MnTjge9HEbuvsNBZpYEQn8/3nHySCfmqU5OR/UOw5vyVj7o
EIEjLzca9XzvxFttuZT4+SPYckKp5KktAS3PQguHe104A+2dD3RGQLAiHHod
CEgqbLNu1e3GykPWbU+dRvDyHGtioSMBetPbo5ad3Wh2POtfEjOCgGnLpD3O
BD5EGLhW/9ODcK9Y2erXI9gZVbgt0I1A8vZKL0OFXmhffFrY2j+CqQVy1JxT
BHzY5n5vS3tBj6o72CvJRllykH+XNwGz9MZgbcc+JN1hcdjb2bi8pnfxgnME
VttYRxb87MPeDNEbky5sIN/4pVEAgSnRtptqaf2YfqayQSSWDZHtT2z8gghQ
3v6VmLF7AAVl+LywhI2acsmvj0IIFPj0pSn0DsCp3sl95RAb0Xt9b3eEE6ha
pE2xNJqdFx0hwuoLRmFJpmhIXiXw4kxAR3TcICoZqRnbdUchfVy3ZXcMgfTq
N93V/YMIHHtruMdtFC3MtLO+/xKIWTXVL6Q5hPUz7T2Hbo0i3ldIJiuewMWg
XQzD8CF0LpgIdnw3Crspj2fUJAJu5NCRS61DuKm4ZMVpxiiWRTYcEE8lYL25
gvtWmQ4Dda2SgIUc0KQ1uHoPCBhcE/46cY4OwQ4r+wh9DlLvJtz0ySKgPmA6
of2JjkzTv8f/9eDghPKPjQ+fEFimHz3lK8uAne3N+NTbHKx+eryB9JSASGL9
rwJXBsRc8jRyyjgY0vnkJVpIQMCTEh4tYuDt37VNr1gcPPqgKrHzFYFei0Ni
64WZOHOJ6V0hy4WnxY1crxIC9Zm3Jd1tmVgZIyLZtJsLdRLfIq2MwJufZJnM
LCaa767J7TzFBeeY3XDzRwLZ9kuX9I0xEf7IyJx1h4tnjJJrQtUE4gqPyCua
sKDz8gRj7AMX586uVNtWN6tniVTFowksMD9euvJnhAvtH+E1nl8IeLn1rE6i
s5DclKIsLTfrKxFM95RWAoc/rFpH1hnG3u6S8uVGPJRIWYp+oRIwlnfdsDBq
GNMjbcdVz/DwT9Lz7N80AlvOZ28+QB1GweT4tFYSD7tXLzHR6iWg0MjUjFk3
AifRxSmGFTz8zr045DZIQFx1w/bPASOQXay5cz+Hhwrtnoi7TALjl8/oidSM
oGr1obYjy/iIfI819WwCg7QCAyxlI3CLj7+7MR9m5o8rfvIINGkLjEM92Fi/
64bseR8+5rdKuGwdI1Aaq2VeWsxG597cwtBkPhr+OvvHZZLA/wCuRpEH
              
              "], {{-110, 
                Rational[-15, 2]}, {110, 
                Rational[15, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{110, 
                  Rational[-15, 2]}, {-110, 
                  Rational[-15, 2]}, {-110, 
                  Rational[15, 2]}, {110, 
                  Rational[15, 2]}, {110, 
                  Rational[-15, 2]}}, {{
                 110, -7.5}, {-110, -7.5}, {-110, 7.5}, {110, 7.5}, {
                 110, -7.5}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               LineBox[{{-110., -7.5}, {110., -7.5}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{-110., -7.5}, 
                    Offset[{0, -4.}, {-110., -7.5}]}, {{-66., -7.5}, 
                    Offset[{0, -4.}, {-66., -7.5}]}, {{-22., -7.5}, 
                    Offset[{0, -4.}, {-22., -7.5}]}, {{22., -7.5}, 
                    Offset[{0, -4.}, {22., -7.5}]}, {{66., -7.5}, 
                    Offset[{0, -4.}, {66., -7.5}]}, {{110., -7.5}, 
                    Offset[{0, -4.}, {110., -7.5}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                  StyleBox[
                   LineBox[{{{-99., -7.5}, 
                    Offset[{0., -2.5}, {-99., -7.5}]}, {{-88., -7.5}, 
                    Offset[{0., -2.5}, {-88., -7.5}]}, {{-77., -7.5}, 
                    Offset[{0., -2.5}, {-77., -7.5}]}, {{-55., -7.5}, 
                    Offset[{0., -2.5}, {-55., -7.5}]}, {{-44., -7.5}, 
                    Offset[{0., -2.5}, {-44., -7.5}]}, {{-33., -7.5}, 
                    Offset[{0., -2.5}, {-33., -7.5}]}, {{-11., -7.5}, 
                    Offset[{0., -2.5}, {-11., -7.5}]}, {{0., -7.5}, 
                    Offset[{0., -2.5}, {0., -7.5}]}, {{
                    11.000000000000014`, -7.5}, 
                    Offset[{0., -2.5}, {11.000000000000014`, -7.5}]}, {{
                    33., -7.5}, 
                    Offset[{0., -2.5}, {33., -7.5}]}, {{44., -7.5}, 
                    Offset[{0., -2.5}, {44., -7.5}]}, {{55., -7.5}, 
                    Offset[{0., -2.5}, {55., -7.5}]}, {{77., -7.5}, 
                    Offset[{0., -2.5}, {77., -7.5}]}, {{88., -7.5}, 
                    Offset[{0., -2.5}, {88., -7.5}]}, {{99., -7.5}, 
                    Offset[{0., -2.5}, {99., -7.5}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{0., -7.}, {-110., -7.5}], {0., 1.}, Automatic, {1,
                     0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.2\"", 0.2, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{0., -7.}, {-66., -7.5}], {0., 1.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.4\"", 0.4, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{0., -7.}, {-22., -7.5}], {0., 1.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.6\"", 0.6, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{0., -7.}, {22., -7.5}], {0., 1.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.8\"", 0.8, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{0., -7.}, {66., -7.5}], {0., 1.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.0\"", 1., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{0., -7.}, {110., -7.5}], {0., 1.}, Automatic, {1, 
                    0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{True, False}, {False, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {220, Automatic}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"DeepSeaColors\"", ",", "#1"}], "]"}], "&"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7397875841532917`*^9, 3.73978765576225*^9}, {
  3.739787691675602*^9, 3.739787761456337*^9}, {3.7397886378599167`*^9, 
  3.739788898114155*^9}, {3.739792343753422*^9, 3.739792367043935*^9}, {
  3.739799968697645*^9, 3.739800138189157*^9}, {3.740038622374917*^9, 
  3.740038693760952*^9}, {3.740039341993683*^9, 3.740039369425997*^9}, {
  3.7400394790335608`*^9, 3.740039579651469*^9}, {3.740039620299714*^9, 
  3.740040285697057*^9}, {3.7400405191543694`*^9, 3.7400408668800993`*^9}},
 CellLabel->
  "Out[506]=",ExpressionUUID->"61b66cd8-c0f2-4e80-b681-ce3eeef742b8"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{640, 687},
WindowMargins->{{0, Automatic}, {Automatic, -1}},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 7, \
2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[583, 22, 154, 3, 98, "Title",ExpressionUUID->"06c67e32-f6d6-4b78-b84a-0c800a6f0bac"],
Cell[740, 27, 201, 4, 30, "Input",ExpressionUUID->"a0642404-0e51-41e3-a297-deb8e1ad2119"],
Cell[CellGroupData[{
Cell[966, 35, 163, 3, 69, "Chapter",ExpressionUUID->"16c3d95b-fa1e-4328-b30a-8bb64f5dff75"],
Cell[1132, 40, 384, 11, 73, "Input",ExpressionUUID->"5b4d247c-a8b2-4588-a2a0-245adf4114cf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1553, 56, 154, 3, 69, "Chapter",ExpressionUUID->"61cd4726-fd48-4cd7-b64d-a06f3cc484a4"],
Cell[CellGroupData[{
Cell[1732, 63, 506, 10, 94, "Input",ExpressionUUID->"e5cc72fb-c7be-4240-ab26-3a5d05f2298e"],
Cell[2241, 75, 578979, 10998, 77, "Output",ExpressionUUID->"8cc81180-62c3-4ea1-9c96-323632d8dd0f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[581257, 11078, 167, 3, 45, "Subsubsection",ExpressionUUID->"13966873-325c-4b98-b7cc-171c55745238"],
Cell[581427, 11083, 579012, 11000, 584, "Output",ExpressionUUID->"b8139a29-5579-4486-9d4f-973276c313bb"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1160488, 22089, 166, 3, 69, "Chapter",ExpressionUUID->"814fe600-2598-4995-a16f-9408170e41d2"],
Cell[1160657, 22094, 679, 19, 73, "Input",ExpressionUUID->"26728e20-6660-4d5d-95c7-6ea9fa66804f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1161373, 22118, 184, 3, 117, "Chapter",ExpressionUUID->"f375ad32-32a9-47c0-963e-07708028aa22"],
Cell[CellGroupData[{
Cell[1161582, 22125, 3598, 85, 640, "Input",ExpressionUUID->"2b5429bf-7ece-4364-8194-f1bebf1d1409"],
Cell[1165183, 22212, 44746, 785, 216, "Output",ExpressionUUID->"61b66cd8-c0f2-4e80-b681-ce3eeef742b8"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

